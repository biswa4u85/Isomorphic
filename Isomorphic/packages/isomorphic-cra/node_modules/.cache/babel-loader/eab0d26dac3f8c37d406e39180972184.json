{"ast":null,"code":"import _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/packages/isomorphic-cra/src/containers/Topbar/Topbar.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport appActions from '@iso/redux/app/actions';\nimport TopbarNotification from './TopbarNotification';\nimport TopbarMessage from './TopbarMessage';\nimport TopbarSearch from './TopbarSearch';\nimport TopbarUser from './TopbarUser';\nimport TopbarAddtoCart from './TopbarAddToCart';\nimport TopbarWrapper from './Topbar.styles';\nconst Header = _Layout.Header;\nconst toggleCollapsed = appActions.toggleCollapsed;\nexport default function Topbar() {\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        selectedItem = _React$useState2[0],\n        setSelectedItem = _React$useState2[1];\n\n  const customizedTheme = useSelector(state => state.ThemeSwitcher.topbarTheme);\n\n  const _useSelector = useSelector(state => state.App),\n        collapsed = _useSelector.collapsed,\n        openDrawer = _useSelector.openDrawer;\n\n  const dispatch = useDispatch();\n  const handleToggle = React.useCallback(() => dispatch(toggleCollapsed()), [dispatch]);\n  const isCollapsed = collapsed && !openDrawer;\n  const styling = {\n    background: customizedTheme.backgroundColor,\n    position: 'fixed',\n    width: '100%',\n    height: 70\n  };\n  return React.createElement(TopbarWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Header, {\n    style: styling,\n    className: isCollapsed ? 'isomorphicTopbar collapsed' : 'isomorphicTopbar',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoLeft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: isCollapsed ? 'triggerBtn menuCollapsed' : 'triggerBtn menuOpen',\n    style: {\n      color: customizedTheme.textColor\n    },\n    onClick: handleToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"isoRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"isoSearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(TopbarSearch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    onClick: () => setSelectedItem('notification'),\n    className: selectedItem ? 'isoNotify active' : 'isoNotify',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(TopbarNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    onClick: () => setSelectedItem('message'),\n    className: \"isoMsg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TopbarMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    onClick: () => setSelectedItem('addToCart'),\n    className: \"isoCart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TopbarAddtoCart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    onClick: () => setSelectedItem('user'),\n    className: \"isoUser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(TopbarUser, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/packages/isomorphic-cra/src/containers/Topbar/Topbar.js"],"names":["React","useSelector","useDispatch","appActions","TopbarNotification","TopbarMessage","TopbarSearch","TopbarUser","TopbarAddtoCart","TopbarWrapper","Header","toggleCollapsed","Topbar","useState","selectedItem","setSelectedItem","customizedTheme","state","ThemeSwitcher","topbarTheme","App","collapsed","openDrawer","dispatch","handleToggle","useCallback","isCollapsed","styling","background","backgroundColor","position","width","height","color","textColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Layout } from 'antd';\nimport appActions from '@iso/redux/app/actions';\nimport TopbarNotification from './TopbarNotification';\nimport TopbarMessage from './TopbarMessage';\nimport TopbarSearch from './TopbarSearch';\nimport TopbarUser from './TopbarUser';\nimport TopbarAddtoCart from './TopbarAddToCart';\nimport TopbarWrapper from './Topbar.styles';\n\nconst { Header } = Layout;\nconst { toggleCollapsed } = appActions;\n\nexport default function Topbar() {\n  const [selectedItem, setSelectedItem] = React.useState('');\n  const customizedTheme = useSelector(state => state.ThemeSwitcher.topbarTheme);\n  const { collapsed, openDrawer } = useSelector(state => state.App);\n  const dispatch = useDispatch();\n  const handleToggle = React.useCallback(() => dispatch(toggleCollapsed()), [\n    dispatch,\n  ]);\n  const isCollapsed = collapsed && !openDrawer;\n  const styling = {\n    background: customizedTheme.backgroundColor,\n    position: 'fixed',\n    width: '100%',\n    height: 70,\n  };\n  return (\n    <TopbarWrapper>\n      <Header\n        style={styling}\n        className={\n          isCollapsed ? 'isomorphicTopbar collapsed' : 'isomorphicTopbar'\n        }\n      >\n        <div className=\"isoLeft\">\n          <button\n            className={\n              isCollapsed ? 'triggerBtn menuCollapsed' : 'triggerBtn menuOpen'\n            }\n            style={{ color: customizedTheme.textColor }}\n            onClick={handleToggle}\n          />\n        </div>\n\n        <ul className=\"isoRight\">\n          <li className=\"isoSearch\">\n            <TopbarSearch />\n          </li>\n\n          <li\n            onClick={() => setSelectedItem('notification')}\n            className={selectedItem ? 'isoNotify active' : 'isoNotify'}\n          >\n            <TopbarNotification />\n          </li>\n\n          <li onClick={() => setSelectedItem('message')} className=\"isoMsg\">\n            <TopbarMessage />\n          </li>\n          <li onClick={() => setSelectedItem('addToCart')} className=\"isoCart\">\n            <TopbarAddtoCart />\n          </li>\n\n          <li onClick={() => setSelectedItem('user')} className=\"isoUser\">\n            <TopbarUser />\n          </li>\n        </ul>\n      </Header>\n    </TopbarWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}