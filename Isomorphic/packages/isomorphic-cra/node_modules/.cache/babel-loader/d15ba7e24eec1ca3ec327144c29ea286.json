{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar shallowEqual = require('is-shallow-equal');\n\nvar _require = require('preact'),\n    h = _require.h,\n    Component = _require.Component;\n/**\n * Higher order component that doesn't rerender an element if its props didn't change.\n */\n\n\nmodule.exports = function pure(Inner) {\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(Pure, _Component);\n\n      function Pure() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      var _proto = Pure.prototype;\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return !shallowEqual(this.props, nextProps);\n      };\n\n      _proto.render = function render() {\n        // we have to clone this or Preact mutates it:\n        // https://github.com/preactjs/preact/issues/836\n        // TODO can be removed if we upgrade to Preact X\n        var props = _extends({}, this.props);\n\n        return h(Inner, props);\n      };\n\n      return Pure;\n    }(Component)\n  );\n};","map":null,"metadata":{},"sourceType":"script"}