{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar _require = require('preact'),\n    h = _require.h,\n    Component = _require.Component;\n\nvar getFileTypeIcon = require('../../utils/getFileTypeIcon');\n\nvar ignoreEvent = require('../../utils/ignoreEvent.js');\n\nvar FilePreview = require('../FilePreview');\n\nvar FileCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(FileCard, _Component);\n\n  function FileCard(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.saveOnEnter = function (ev) {\n      if (ev.keyCode === 13) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        var file = _this.props.files[_this.props.fileCardFor];\n\n        _this.props.saveFileCard(_this.state.formState, file.id);\n      }\n    };\n\n    _this.tempStoreMeta = function (ev, name) {\n      var _extends2;\n\n      _this.setState({\n        formState: _extends({}, _this.state.formState, (_extends2 = {}, _extends2[name] = ev.target.value, _extends2))\n      });\n    };\n\n    _this.handleSave = function () {\n      var fileID = _this.props.fileCardFor;\n\n      _this.props.saveFileCard(_this.state.formState, fileID);\n    };\n\n    _this.handleCancel = function () {\n      _this.props.toggleFileCard();\n    };\n\n    _this.renderMetaFields = function () {\n      var metaFields = _this.props.metaFields || [];\n      return metaFields.map(function (field) {\n        var id = \"uppy-Dashboard-FileCard-input-\" + field.id;\n        return h(\"fieldset\", {\n          key: field.id,\n          class: \"uppy-Dashboard-FileCard-fieldset\"\n        }, h(\"label\", {\n          class: \"uppy-Dashboard-FileCard-label\",\n          for: id\n        }, field.name), h(\"input\", {\n          class: \"uppy-u-reset uppy-c-textInput uppy-Dashboard-FileCard-input\",\n          id: id,\n          type: \"text\",\n          value: _this.state.formState[field.id],\n          placeholder: field.placeholder,\n          onkeyup: _this.saveOnEnter,\n          onkeydown: _this.saveOnEnter,\n          onkeypress: _this.saveOnEnter,\n          oninput: function oninput(ev) {\n            return _this.tempStoreMeta(ev, field.id);\n          },\n          \"data-uppy-super-focusable\": true\n        }));\n      });\n    };\n\n    var _file = _this.props.files[_this.props.fileCardFor];\n\n    var _metaFields = _this.props.metaFields || [];\n\n    var storedMetaData = {};\n\n    _metaFields.forEach(function (field) {\n      storedMetaData[field.id] = _file.meta[field.id] || '';\n    });\n\n    _this.state = {\n      formState: storedMetaData\n    };\n    return _this;\n  }\n\n  var _proto = FileCard.prototype;\n\n  _proto.render = function render() {\n    var file = this.props.files[this.props.fileCardFor];\n    return h(\"div\", {\n      class: \"uppy-Dashboard-FileCard\",\n      \"data-uppy-panelType\": \"FileCard\",\n      onDragOver: ignoreEvent,\n      onDragLeave: ignoreEvent,\n      onDrop: ignoreEvent,\n      onPaste: ignoreEvent\n    }, h(\"div\", {\n      class: \"uppy-DashboardContent-bar\"\n    }, h(\"div\", {\n      class: \"uppy-DashboardContent-title\",\n      role: \"heading\",\n      \"aria-level\": \"h1\"\n    }, this.props.i18nArray('editing', {\n      file: h(\"span\", {\n        class: \"uppy-DashboardContent-titleFile\"\n      }, file.meta ? file.meta.name : file.name)\n    })), h(\"button\", {\n      class: \"uppy-DashboardContent-back\",\n      type: \"button\",\n      title: this.props.i18n('finishEditingFile'),\n      onclick: this.handleSave\n    }, this.props.i18n('done'))), h(\"div\", {\n      class: \"uppy-Dashboard-FileCard-inner\"\n    }, h(\"div\", {\n      class: \"uppy-Dashboard-FileCard-preview\",\n      style: {\n        backgroundColor: getFileTypeIcon(file.type).color\n      }\n    }, h(FilePreview, {\n      file: file\n    })), h(\"div\", {\n      class: \"uppy-Dashboard-FileCard-info\"\n    }, this.renderMetaFields()), h(\"div\", {\n      class: \"uppy-Dashboard-FileCard-actions\"\n    }, h(\"button\", {\n      class: \"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn\",\n      type: \"button\",\n      onclick: this.handleSave\n    }, this.props.i18n('saveChanges')), h(\"button\", {\n      class: \"uppy-u-reset uppy-c-btn uppy-c-btn-link uppy-Dashboard-FileCard-actionsBtn\",\n      type: \"button\",\n      onclick: this.handleCancel\n    }, this.props.i18n('cancel')))));\n  };\n\n  return FileCard;\n}(Component);\n\nmodule.exports = FileCard;","map":null,"metadata":{},"sourceType":"script"}