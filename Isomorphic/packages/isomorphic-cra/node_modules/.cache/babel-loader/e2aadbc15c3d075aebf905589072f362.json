{"ast":null,"code":"import \"antd/es/switch/style/css\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/time-picker/style/css\";\nimport _TimePicker from \"antd/es/time-picker\";\nimport \"antd/es/date-picker/style/css\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/badge/style/css\";\nimport _Badge from \"antd/es/badge\";\nimport _objectWithoutProperties from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/ScrumBoard/AntFields.js\";\nimport map from 'lodash/map';\nimport React from 'react';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\nconst TextArea = _Input.TextArea;\n\nconst CreateAntField = Component => (_ref) => {\n  let field = _ref.field,\n      form = _ref.form,\n      hasFeedback = _ref.hasFeedback,\n      label = _ref.label,\n      tasklabel = _ref.tasklabel,\n      selectOptions = _ref.selectOptions,\n      submitCount = _ref.submitCount,\n      type = _ref.type,\n      formitem = _ref.formitem,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"field\", \"form\", \"hasFeedback\", \"label\", \"tasklabel\", \"selectOptions\", \"submitCount\", \"type\", \"formitem\", \"className\"]);\n\n  const touched = form.touched[field.name];\n  const submitted = submitCount > 0;\n  const hasError = form.errors[field.name];\n  const submittedError = hasError && submitted;\n  const touchedError = hasError && touched;\n\n  const onInputChange = ({\n    target: {\n      value\n    }\n  }) => form.setFieldValue(field.name, value);\n\n  const onChange = value => form.setFieldValue(field.name, value);\n\n  const onBlur = () => form.setFieldTouched(field.name, true);\n\n  return React.createElement(\"div\", {\n    className: \"field-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FormItem, Object.assign({\n    label: label,\n    colon: false,\n    className: className,\n    hasFeedback: hasFeedback && submitted || hasFeedback && touched ? true : false,\n    help: submittedError || touchedError ? hasError : false,\n    validateStatus: submittedError || touchedError ? 'error' : 'success'\n  }, formitem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), tasklabel && tasklabel, React.createElement(Component, Object.assign({}, field, props, {\n    onBlur: onBlur,\n    onChange: type ? onInputChange : onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), selectOptions && map(selectOptions, name => React.createElement(Option, {\n    key: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(_Badge, {\n    status: name,\n    text: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))))));\n};\n\nexport const AntSelect = CreateAntField(_Select);\nexport const AntDatePicker = CreateAntField(_DatePicker);\nexport const AntInput = CreateAntField(_Input);\nexport const AntTimePicker = CreateAntField(_TimePicker);\nexport const AntTextArea = CreateAntField(TextArea);\nexport const AntSwitch = CreateAntField(_Switch);","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/ScrumBoard/AntFields.js"],"names":["map","React","FormItem","Item","Option","TextArea","CreateAntField","Component","field","form","hasFeedback","label","tasklabel","selectOptions","submitCount","type","formitem","className","props","touched","name","submitted","hasError","errors","submittedError","touchedError","onInputChange","target","value","setFieldValue","onChange","onBlur","setFieldTouched","AntSelect","AntDatePicker","AntInput","AntTimePicker","AntTextArea","AntSwitch"],"mappings":"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","sourcesContent":["import map from 'lodash/map';\nimport React from 'react';\nimport {\n  DatePicker,\n  Form,\n  Input,\n  TimePicker,\n  Select,\n  Badge,\n  Switch,\n} from 'antd';\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst CreateAntField = Component => ({\n  field,\n  form,\n  hasFeedback,\n  label,\n  tasklabel,\n  selectOptions,\n  submitCount,\n  type,\n  formitem,\n  className,\n  ...props\n}) => {\n  const touched = form.touched[field.name];\n  const submitted = submitCount > 0;\n  const hasError = form.errors[field.name];\n  const submittedError = hasError && submitted;\n  const touchedError = hasError && touched;\n  const onInputChange = ({ target: { value } }) =>\n    form.setFieldValue(field.name, value);\n  const onChange = value => form.setFieldValue(field.name, value);\n  const onBlur = () => form.setFieldTouched(field.name, true);\n  return (\n    <div className=\"field-container\">\n      <FormItem\n        label={label}\n        colon={false}\n        className={className}\n        hasFeedback={\n          (hasFeedback && submitted) || (hasFeedback && touched) ? true : false\n        }\n        help={submittedError || touchedError ? hasError : false}\n        validateStatus={submittedError || touchedError ? 'error' : 'success'}\n        {...formitem}\n      >\n        {tasklabel && tasklabel}\n        <Component\n          {...field}\n          {...props}\n          onBlur={onBlur}\n          onChange={type ? onInputChange : onChange}\n        >\n          {selectOptions &&\n            map(selectOptions, name => (\n              <Option key={name}>\n                <Badge status={name} text={name} />\n              </Option>\n            ))}\n        </Component>\n      </FormItem>\n    </div>\n  );\n};\n\nexport const AntSelect = CreateAntField(Select);\nexport const AntDatePicker = CreateAntField(DatePicker);\nexport const AntInput = CreateAntField(Input);\nexport const AntTimePicker = CreateAntField(TimePicker);\nexport const AntTextArea = CreateAntField(TextArea);\nexport const AntSwitch = CreateAntField(Switch);\n"]},"metadata":{},"sourceType":"module"}