{"ast":null,"code":"var _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Contacts/ContactList.js\";\nimport React, { Component } from 'react';\nimport IntlMessages from '../utility/intlMessages';\nimport { InputSearch } from '../uielements/input';\nimport DeleteButton from './DeleteButton';\nimport { PropTypes } from 'prop-types';\nimport { ContactListWrapper } from './ContactList.style';\nimport Scrollbar from '../utility/customScrollBar';\n\nfunction filterContacts(contacts, search) {\n  search = search.toUpperCase();\n  return search ? contacts.filter(contact => contact.name.toUpperCase().includes(search)) : contacts;\n}\n\nexport default class ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.singleContact = this.singleContact.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.state = {\n      search: ''\n    };\n  }\n\n  singleContact(contact) {\n    const _this$props = this.props,\n          seectedId = _this$props.seectedId,\n          deleteContact = _this$props.deleteContact,\n          changeContact = _this$props.changeContact;\n    const activeClass = seectedId === contact.id ? 'active' : '';\n\n    const onChange = () => changeContact(contact.id);\n\n    return React.createElement(\"div\", {\n      key: contact.id,\n      className: \"\".concat(activeClass, \" isoSingleContact\"),\n      onClick: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"isoAvatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, contact.avatar ? React.createElement(\"img\", {\n      alt: \"#\",\n      src: contact.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : ''), React.createElement(\"div\", {\n      className: \"isoContactName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, contact.name ? contact.name : 'No Name')), React.createElement(DeleteButton, {\n      deleteContact: deleteContact,\n      contact: contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n  onChange(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  render() {\n    const search = this.state.search;\n    const contacts = filterContacts(this.props.contacts, search);\n    return React.createElement(ContactListWrapper, {\n      className: \"isoContactListWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(InputSearch, {\n      placeholder: this.context.intl.formatMessage({\n        id: 'contactlist.searchContacts'\n      }),\n      value: search,\n      onChange: this.onChange,\n      className: \"isoSearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), contacts && contacts.length > 0 ? React.createElement(\"div\", {\n      className: \"isoContactList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Scrollbar, {\n      className: \"contactListScrollbar\",\n      style: {\n        height: 'calc(100vh - 200px)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, contacts.map(contact => this.singleContact(contact)))) : React.createElement(\"span\", {\n      className: \"isoNoResultMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"Component.contacts.noOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\nContactList.contextTypes = {\n  intl: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Contacts/ContactList.js"],"names":["React","Component","IntlMessages","InputSearch","DeleteButton","PropTypes","ContactListWrapper","Scrollbar","filterContacts","contacts","search","toUpperCase","filter","contact","name","includes","ContactList","constructor","props","singleContact","bind","onChange","state","seectedId","deleteContact","changeContact","activeClass","id","avatar","event","setState","target","value","render","context","intl","formatMessage","length","height","map","contextTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IntlMessages from '../utility/intlMessages';\nimport { InputSearch } from '../uielements/input';\nimport DeleteButton from './DeleteButton';\nimport { PropTypes } from 'prop-types';\nimport { ContactListWrapper } from './ContactList.style';\nimport Scrollbar from '../utility/customScrollBar';\n\nfunction filterContacts(contacts, search) {\n  search = search.toUpperCase();\n  return search\n    ? contacts.filter(contact => contact.name.toUpperCase().includes(search))\n    : contacts;\n}\n\nexport default class ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.singleContact = this.singleContact.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.state = {\n      search: '',\n    };\n  }\n  singleContact(contact) {\n    const { seectedId, deleteContact, changeContact } = this.props;\n    const activeClass = seectedId === contact.id ? 'active' : '';\n    const onChange = () => changeContact(contact.id);\n    return (\n      <div\n        key={contact.id}\n        className={`${activeClass} isoSingleContact`}\n        onClick={onChange}\n      >\n        <div className=\"isoAvatar\">\n          {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\n        </div>\n        <div className=\"isoContactName\">\n          <h3>{contact.name ? contact.name : 'No Name'}</h3>\n        </div>\n        <DeleteButton deleteContact={deleteContact} contact={contact} />\n      </div>\n    );\n  }\n  onChange(event) {\n    this.setState({ search: event.target.value });\n  }\n  render() {\n    const { search } = this.state;\n    const contacts = filterContacts(this.props.contacts, search);\n    return (\n      <ContactListWrapper className=\"isoContactListWrapper\">\n        <InputSearch\n          placeholder={this.context.intl.formatMessage({\n            id: 'contactlist.searchContacts',\n          })}\n          value={search}\n          onChange={this.onChange}\n          className=\"isoSearchBar\"\n        />\n        {contacts && contacts.length > 0 ? (\n          <div className=\"isoContactList\">\n            <Scrollbar\n              className=\"contactListScrollbar\"\n              style={{ height: 'calc(100vh - 200px)' }}\n            >\n              {contacts.map(contact => this.singleContact(contact))}\n            </Scrollbar>\n          </div>\n        ) : (\n          <span className=\"isoNoResultMsg\">\n            {<IntlMessages id=\"Component.contacts.noOption\" />}\n          </span>\n        )}\n      </ContactListWrapper>\n    );\n  }\n}\n\nContactList.contextTypes = {\n  intl: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}