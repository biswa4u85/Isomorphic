{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Ecommerce/Card/Card.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clone from 'clone';\nimport Button from '@iso/components/uielements/button';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport Card from '@iso/components/Card/Card';\nimport { ButtonWrapper } from '@iso/components/Card/CardModal.style';\nimport basicStyle from '@iso/assets/styles/constants';\nimport cardActions from '@iso/redux/card/actions';\nimport { createColumns } from './config';\nimport SimpleTable from '../../Tables/AntTables/TableViews/SimpleView';\nconst addCard = cardActions.addCard,\n      editCard = cardActions.editCard,\n      deleteCard = cardActions.deleteCard;\nexport default function Cards() {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(state => state.Cards),\n        cards = _useSelector.cards;\n\n  const _React$useState = React.useState({\n    editView: false,\n    selectedCard: null,\n    modalType: ''\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const columns = createColumns(editColumn, value => dispatch(deleteCard(value)));\n\n  function editColumn(card) {\n    setState({\n      editView: true,\n      selectedCard: clone(card),\n      modalType: 'edit'\n    });\n  }\n\n  function addColumn() {\n    setState({\n      editView: true,\n      selectedCard: {\n        id: new Date().getTime(),\n        key: new Date().getTime(),\n        number: '',\n        name: '',\n        expiry: '',\n        cvc: ''\n      },\n      modalType: 'add'\n    });\n  }\n\n  function handleCancel() {\n    setState({\n      editView: false,\n      selectedCard: null\n    });\n  }\n\n  function submitCard(card) {\n    if (state.modalType === 'edit') {\n      dispatch(editCard(state.selectedCard));\n    } else {\n      dispatch(addCard(state.selectedCard));\n    }\n\n    setState({\n      editView: false,\n      selectedCard: null\n    });\n  }\n\n  function updateCard(selectedCard) {\n    setState(_objectSpread({}, state, {\n      selectedCard\n    }));\n  }\n\n  const rowStyle = basicStyle.rowStyle,\n        colStyle = basicStyle.colStyle,\n        gutter = basicStyle.gutter;\n  const editView = state.editView,\n        selectedCard = state.selectedCard,\n        modalType = state.modalType;\n  const newCards = clone(cards);\n\n  const createNumber = number => {\n    const length = number.length;\n    let newNumber = '';\n\n    for (let i = 0; i < length - 4; i++) {\n      newNumber = \"*\".concat(newNumber);\n    }\n\n    for (let i = length - 4; i < length; i++) {\n      newNumber = \"\".concat(newNumber).concat(number.charAt(i));\n    }\n\n    return newNumber;\n  };\n\n  newCards.forEach((card, index) => {\n    newCards[index].number = createNumber(card.number);\n  });\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Cards\"), React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 24,\n    sm: 24,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(ButtonWrapper, {\n    className: \"isoButtonWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    className: \"\",\n    onClick: addColumn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Add New Card\")), React.createElement(SimpleTable, {\n    columns: columns,\n    dataSource: cards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), selectedCard && React.createElement(Card, {\n    editView: editView,\n    modalType: modalType,\n    selectedCard: selectedCard,\n    handleCancel: handleCancel,\n    submitCard: submitCard,\n    updateCard: updateCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Ecommerce/Card/Card.js"],"names":["React","useDispatch","useSelector","clone","Button","PageHeader","Box","LayoutWrapper","Card","ButtonWrapper","basicStyle","cardActions","createColumns","SimpleTable","addCard","editCard","deleteCard","Cards","dispatch","state","cards","useState","editView","selectedCard","modalType","setState","columns","editColumn","value","card","addColumn","id","Date","getTime","key","number","name","expiry","cvc","handleCancel","submitCard","updateCard","rowStyle","colStyle","gutter","newCards","createNumber","length","newNumber","i","charAt","forEach","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport clone from 'clone';\nimport Button from '@iso/components/uielements/button';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport Card from '@iso/components/Card/Card';\nimport { ButtonWrapper } from '@iso/components/Card/CardModal.style';\nimport basicStyle from '@iso/assets/styles/constants';\nimport cardActions from '@iso/redux/card/actions';\nimport { createColumns } from './config';\nimport SimpleTable from '../../Tables/AntTables/TableViews/SimpleView';\n\nconst { addCard, editCard, deleteCard } = cardActions;\nexport default function Cards() {\n  const dispatch = useDispatch();\n  const { cards } = useSelector(state => state.Cards);\n  const [state, setState] = React.useState({\n    editView: false,\n    selectedCard: null,\n    modalType: '',\n  });\n  const columns = createColumns(editColumn, value =>\n    dispatch(deleteCard(value))\n  );\n  function editColumn(card) {\n    setState({\n      editView: true,\n      selectedCard: clone(card),\n      modalType: 'edit',\n    });\n  }\n  function addColumn() {\n    setState({\n      editView: true,\n      selectedCard: {\n        id: new Date().getTime(),\n        key: new Date().getTime(),\n        number: '',\n        name: '',\n        expiry: '',\n        cvc: '',\n      },\n      modalType: 'add',\n    });\n  }\n  function handleCancel() {\n    setState({\n      editView: false,\n      selectedCard: null,\n    });\n  }\n  function submitCard(card) {\n    if (state.modalType === 'edit') {\n      dispatch(editCard(state.selectedCard));\n    } else {\n      dispatch(addCard(state.selectedCard));\n    }\n    setState({\n      editView: false,\n      selectedCard: null,\n    });\n  }\n  function updateCard(selectedCard) {\n    setState({ ...state, selectedCard });\n  }\n  const { rowStyle, colStyle, gutter } = basicStyle;\n  const { editView, selectedCard, modalType } = state;\n  const newCards = clone(cards);\n  const createNumber = number => {\n    const length = number.length;\n    let newNumber = '';\n    for (let i = 0; i < length - 4; i++) {\n      newNumber = `*${newNumber}`;\n    }\n    for (let i = length - 4; i < length; i++) {\n      newNumber = `${newNumber}${number.charAt(i)}`;\n    }\n    return newNumber;\n  };\n  newCards.forEach((card, index) => {\n    newCards[index].number = createNumber(card.number);\n  });\n  return (\n    <LayoutWrapper>\n      <PageHeader>Cards</PageHeader>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={24} sm={24} xs={24} style={colStyle}>\n          <Box>\n            <ButtonWrapper className=\"isoButtonWrapper\">\n              <Button type=\"primary\" className=\"\" onClick={addColumn}>\n                Add New Card\n              </Button>\n            </ButtonWrapper>\n\n            <SimpleTable columns={columns} dataSource={cards} />\n            {selectedCard && (\n              <Card\n                editView={editView}\n                modalType={modalType}\n                selectedCard={selectedCard}\n                handleCancel={handleCancel}\n                submitCard={submitCard}\n                updateCard={updateCard}\n              />\n            )}\n          </Box>\n        </Col>\n      </Row>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}