{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Forms/Checkbox/Checkbox.js\";\nimport React from 'react';\nimport Checkbox, { CheckboxGroup } from '@iso/components/uielements/checkbox';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nconst options = [{\n  label: 'Apple',\n  value: 'Apple'\n}, {\n  label: 'Pear',\n  value: 'Pear'\n}, {\n  label: 'Orange',\n  value: 'Orange'\n}];\nconst optionsWithDisabled = [{\n  label: 'Apple',\n  value: 'Apple'\n}, {\n  label: 'Pear',\n  value: 'Pear'\n}, {\n  label: 'Orange',\n  value: 'Orange',\n  disabled: false\n}];\nconst defaultCheckedList = ['Apple', 'Orange'];\nexport default function () {\n  const _React$useState = React.useState(defaultCheckedList),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        checkedList = _React$useState2[0],\n        setCheckedList = _React$useState2[1];\n\n  const _React$useState3 = React.useState(true),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        indeterminate = _React$useState4[0],\n        setIndeterminate = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        checkAll = _React$useState6[0],\n        setCheckAll = _React$useState6[1];\n\n  const handleOnChange = checkedValues => {};\n\n  const onChange = checkedList => {\n    setCheckedList(checkedList);\n    setIndeterminate(!!checkedList.length && checkedList.length < plainOptions.length);\n    setCheckAll(checkedList.length === plainOptions.length);\n  };\n\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  const rowStyle = basicStyle.rowStyle,\n        colStyle = basicStyle.colStyle,\n        gutter = basicStyle.gutter;\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"forms.checkbox.header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"forms.checkbox.basicTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }),\n    subtitle: React.createElement(IntlMessages, {\n      id: \"forms.checkbox.basicSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Checkbox\")))), React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"forms.checkbox.groupTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }),\n    subtitle: React.createElement(IntlMessages, {\n      id: \"forms.checkbox.groupSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(CheckboxGroup, {\n    options: plainOptions,\n    defaultValue: ['Apple'],\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(CheckboxGroup, {\n    options: options,\n    defaultValue: ['Pear'],\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(CheckboxGroup, {\n    options: optionsWithDisabled,\n    disabled: true,\n    defaultValue: ['Apple'],\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))))), React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"forms.checkbox.groupCheckTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }),\n    subtitle: React.createElement(IntlMessages, {\n      id: \"forms.checkbox.groupCheckSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      borderBottom: '1px solid #E9E9E9',\n      paddingBottom: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: indeterminate,\n    onChange: onCheckAllChange,\n    checked: checkAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Check all\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(CheckboxGroup, {\n    options: plainOptions,\n    value: checkedList,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })))))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Forms/Checkbox/Checkbox.js"],"names":["React","Checkbox","CheckboxGroup","PageHeader","Box","LayoutWrapper","ContentHolder","IntlMessages","basicStyle","plainOptions","options","label","value","optionsWithDisabled","disabled","defaultCheckedList","useState","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","handleOnChange","checkedValues","onChange","length","onCheckAllChange","e","target","checked","rowStyle","colStyle","gutter","borderBottom","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'antd';\nimport Checkbox, { CheckboxGroup } from '@iso/components/uielements/checkbox';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\n\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nconst options = [\n  { label: 'Apple', value: 'Apple' },\n  { label: 'Pear', value: 'Pear' },\n  { label: 'Orange', value: 'Orange' },\n];\nconst optionsWithDisabled = [\n  { label: 'Apple', value: 'Apple' },\n  { label: 'Pear', value: 'Pear' },\n  { label: 'Orange', value: 'Orange', disabled: false },\n];\nconst defaultCheckedList = ['Apple', 'Orange'];\n\nexport default function() {\n  const [checkedList, setCheckedList] = React.useState(defaultCheckedList);\n  const [indeterminate, setIndeterminate] = React.useState(true);\n  const [checkAll, setCheckAll] = React.useState(false);\n\n  const handleOnChange = checkedValues => {};\n\n  const onChange = checkedList => {\n    setCheckedList(checkedList);\n    setIndeterminate(\n      !!checkedList.length && checkedList.length < plainOptions.length\n    );\n    setCheckAll(checkedList.length === plainOptions.length);\n  };\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  const { rowStyle, colStyle, gutter } = basicStyle;\n  return (\n    <LayoutWrapper>\n      <PageHeader>{<IntlMessages id=\"forms.checkbox.header\" />}</PageHeader>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box\n            title={<IntlMessages id=\"forms.checkbox.basicTitle\" />}\n            subtitle={<IntlMessages id=\"forms.checkbox.basicSubTitle\" />}\n          >\n            <ContentHolder>\n              <Checkbox onChange={handleOnChange}>Checkbox</Checkbox>\n            </ContentHolder>\n          </Box>\n        </Col>\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box\n            title={<IntlMessages id=\"forms.checkbox.groupTitle\" />}\n            subtitle={<IntlMessages id=\"forms.checkbox.groupSubTitle\" />}\n          >\n            <ContentHolder>\n              <CheckboxGroup\n                options={plainOptions}\n                defaultValue={['Apple']}\n                onChange={handleOnChange}\n              />\n              <br />\n              <CheckboxGroup\n                options={options}\n                defaultValue={['Pear']}\n                onChange={handleOnChange}\n              />\n              <br />\n              <CheckboxGroup\n                options={optionsWithDisabled}\n                disabled\n                defaultValue={['Apple']}\n                onChange={handleOnChange}\n              />\n            </ContentHolder>\n          </Box>\n        </Col>\n      </Row>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box\n            title={<IntlMessages id=\"forms.checkbox.groupCheckTitle\" />}\n            subtitle={<IntlMessages id=\"forms.checkbox.groupCheckSubTitle\" />}\n          >\n            <ContentHolder>\n              <div>\n                <div\n                  style={{\n                    borderBottom: '1px solid #E9E9E9',\n                    paddingBottom: '15px',\n                  }}\n                >\n                  <Checkbox\n                    indeterminate={indeterminate}\n                    onChange={onCheckAllChange}\n                    checked={checkAll}\n                  >\n                    Check all\n                  </Checkbox>\n                </div>\n                <br />\n                <CheckboxGroup\n                  options={plainOptions}\n                  value={checkedList}\n                  onChange={onChange}\n                />\n              </div>\n            </ContentHolder>\n          </Box>\n        </Col>\n      </Row>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}