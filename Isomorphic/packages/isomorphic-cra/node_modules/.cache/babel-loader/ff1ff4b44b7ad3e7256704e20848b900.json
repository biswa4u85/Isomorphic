{"ast":null,"code":"import _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Shuffle/Shuffle.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport FlipMove from 'react-flip-move';\nimport shuffle from 'lodash/shuffle';\nimport throttle from 'lodash/throttle';\nimport articles from './config';\nimport Toggle from './Toggle';\nimport ListItem from './ShuffleList';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport { SortableCardWrapper } from './Shuffle.styles';\nexport default function () {\n  const _React$useState = React.useState({\n    removedArticles: [],\n    view: 'grid',\n    order: 'asc',\n    sortingMethod: 'chronological',\n    enterLeaveAnimation: 'accordionVertical',\n    articles\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  function toggleList() {\n    setState(_objectSpread({}, state, {\n      view: 'list',\n      enterLeaveAnimation: 'accordionVertical'\n    }));\n  }\n\n  function toggleGrid() {\n    setState(_objectSpread({}, state, {\n      view: 'grid',\n      enterLeaveAnimation: 'accordionHorizontal'\n    }));\n  }\n\n  function toggleSort() {\n    const sortAsc = (a, b) => a.timestamp - b.timestamp;\n\n    const sortDesc = (a, b) => b.timestamp - a.timestamp;\n\n    setState(_objectSpread({}, state, {\n      order: state.order === 'asc' ? 'desc' : 'asc',\n      sortingMethod: 'chronological',\n      articles: state.articles.sort(state.order === 'asc' ? sortDesc : sortAsc)\n    }));\n  }\n\n  function sortShuffle() {\n    setState(_objectSpread({}, state, {\n      sortingMethod: 'shuffle',\n      articles: shuffle(state.articles)\n    }));\n  }\n\n  function moveArticle(source, dest, id) {\n    const sourceArticles = state[source].slice();\n    let destArticles = state[dest].slice();\n    if (!sourceArticles.length) return; // Find the index of the article clicked.\n    // If no ID is provided, the index is 0\n\n    const i = id ? sourceArticles.findIndex(article => article.id === id) : 0; // If the article is already removed, do nothing.\n\n    if (i === -1) return;\n    destArticles = [].concat(sourceArticles.splice(i, 1), destArticles);\n    setState(_objectSpread({}, state, {\n      [source]: sourceArticles,\n      [dest]: destArticles\n    }));\n  }\n\n  function sortRotate() {\n    const articles = state.articles.slice();\n    articles.unshift(articles.pop());\n    setState(_objectSpread({}, state, {\n      sortingMethod: 'rotate',\n      articles\n    }));\n  }\n\n  function renderArticles() {\n    return state.articles.map((article, i) => {\n      return React.createElement(ListItem, Object.assign({\n        key: article.id,\n        view: state.view,\n        index: i,\n        clickHandler: throttle(() => moveArticle('articles', 'removedArticles', article.id), 800)\n      }, article, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    });\n  }\n\n  return React.createElement(SortableCardWrapper, {\n    id: \"shuffle\",\n    className: \"isomorphicSortableCardsHolder \".concat(state.view),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"isoControlBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoViewBtnGroup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Toggle, {\n    clickHandler: toggleList,\n    text: React.createElement(IntlMessages, {\n      id: \"toggle.list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }),\n    icon: \"bars\",\n    active: state.view === 'list',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(Toggle, {\n    clickHandler: toggleGrid,\n    text: React.createElement(IntlMessages, {\n      id: \"toggle.grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }),\n    icon: \"appstore\",\n    active: state.view === 'grid',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"isoControlBtnGroup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Toggle, {\n    clickHandler: toggleSort,\n    text: state.order === 'asc' ? React.createElement(IntlMessages, {\n      id: \"toggle.ascending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }) : React.createElement(IntlMessages, {\n      id: \"toggle.descending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }),\n    icon: state.order === 'asc' ? 'up' : 'down',\n    active: state.sortingMethod === 'chronological',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(Toggle, {\n    clickHandler: sortShuffle,\n    text: React.createElement(IntlMessages, {\n      id: \"toggle.shuffle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }),\n    icon: \"shake\",\n    active: state.sortingMethod === 'shuffle',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(Toggle, {\n    clickHandler: sortRotate,\n    text: React.createElement(IntlMessages, {\n      id: \"toggle.rotate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }),\n    icon: \"reload\",\n    active: state.sortingMethod === 'rotate',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"isoSortableCardsContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(FlipMove, {\n    staggerDurationBy: \"30\",\n    duration: 500,\n    enterAnimation: state.enterLeaveAnimation,\n    leaveAnimation: state.enterLeaveAnimation,\n    typeName: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, renderArticles(), React.createElement(\"footer\", {\n    key: \"foot\",\n    className: \"isoAddRemoveControlBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoControlBtnGroup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Toggle, {\n    clickHandler: () => moveArticle('removedArticles', 'articles'),\n    text: React.createElement(IntlMessages, {\n      id: \"toggle.addItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }),\n    icon: \"plus\",\n    active: state.removedArticles.length > 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(Toggle, {\n    clickHandler: () => moveArticle('articles', 'removedArticles'),\n    text: React.createElement(IntlMessages, {\n      id: \"toggle.removeItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }),\n    icon: \"close\",\n    active: state.articles.length > 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Shuffle/Shuffle.js"],"names":["React","FlipMove","shuffle","throttle","articles","Toggle","ListItem","IntlMessages","SortableCardWrapper","useState","removedArticles","view","order","sortingMethod","enterLeaveAnimation","state","setState","toggleList","toggleGrid","toggleSort","sortAsc","a","b","timestamp","sortDesc","sort","sortShuffle","moveArticle","source","dest","id","sourceArticles","slice","destArticles","length","i","findIndex","article","concat","splice","sortRotate","unshift","pop","renderArticles","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FlipMove from 'react-flip-move';\nimport shuffle from 'lodash/shuffle';\nimport throttle from 'lodash/throttle';\nimport articles from './config';\nimport Toggle from './Toggle';\nimport ListItem from './ShuffleList';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport { SortableCardWrapper } from './Shuffle.styles';\n\nexport default function() {\n  const [state, setState] = React.useState({\n    removedArticles: [],\n    view: 'grid',\n    order: 'asc',\n    sortingMethod: 'chronological',\n    enterLeaveAnimation: 'accordionVertical',\n    articles,\n  });\n\n  function toggleList() {\n    setState({\n      ...state,\n      view: 'list',\n      enterLeaveAnimation: 'accordionVertical',\n    });\n  }\n\n  function toggleGrid() {\n    setState({\n      ...state,\n      view: 'grid',\n      enterLeaveAnimation: 'accordionHorizontal',\n    });\n  }\n\n  function toggleSort() {\n    const sortAsc = (a, b) => a.timestamp - b.timestamp;\n    const sortDesc = (a, b) => b.timestamp - a.timestamp;\n\n    setState({\n      ...state,\n      order: state.order === 'asc' ? 'desc' : 'asc',\n      sortingMethod: 'chronological',\n      articles: state.articles.sort(state.order === 'asc' ? sortDesc : sortAsc),\n    });\n  }\n\n  function sortShuffle() {\n    setState({\n      ...state,\n      sortingMethod: 'shuffle',\n      articles: shuffle(state.articles),\n    });\n  }\n\n  function moveArticle(source, dest, id) {\n    const sourceArticles = state[source].slice();\n    let destArticles = state[dest].slice();\n\n    if (!sourceArticles.length) return;\n\n    // Find the index of the article clicked.\n    // If no ID is provided, the index is 0\n    const i = id ? sourceArticles.findIndex(article => article.id === id) : 0;\n\n    // If the article is already removed, do nothing.\n    if (i === -1) return;\n\n    destArticles = [].concat(sourceArticles.splice(i, 1), destArticles);\n\n    setState({\n      ...state,\n      [source]: sourceArticles,\n      [dest]: destArticles,\n    });\n  }\n\n  function sortRotate() {\n    const articles = state.articles.slice();\n    articles.unshift(articles.pop());\n\n    setState({\n      ...state,\n      sortingMethod: 'rotate',\n      articles,\n    });\n  }\n\n  function renderArticles() {\n    return state.articles.map((article, i) => {\n      return (\n        <ListItem\n          key={article.id}\n          view={state.view}\n          index={i}\n          clickHandler={throttle(\n            () => moveArticle('articles', 'removedArticles', article.id),\n            800\n          )}\n          {...article}\n        />\n      );\n    });\n  }\n\n  return (\n    <SortableCardWrapper\n      id=\"shuffle\"\n      className={`isomorphicSortableCardsHolder ${state.view}`}\n    >\n      <header className=\"isoControlBar\">\n        <div className=\"isoViewBtnGroup\">\n          <Toggle\n            clickHandler={toggleList}\n            text={<IntlMessages id=\"toggle.list\" />}\n            icon=\"bars\"\n            active={state.view === 'list'}\n          />\n          <Toggle\n            clickHandler={toggleGrid}\n            text={<IntlMessages id=\"toggle.grid\" />}\n            icon=\"appstore\"\n            active={state.view === 'grid'}\n          />\n        </div>\n\n        <div className=\"isoControlBtnGroup\">\n          <Toggle\n            clickHandler={toggleSort}\n            text={\n              state.order === 'asc' ? (\n                <IntlMessages id=\"toggle.ascending\" />\n              ) : (\n                <IntlMessages id=\"toggle.descending\" />\n              )\n            }\n            icon={state.order === 'asc' ? 'up' : 'down'}\n            active={state.sortingMethod === 'chronological'}\n          />\n          <Toggle\n            clickHandler={sortShuffle}\n            text={<IntlMessages id=\"toggle.shuffle\" />}\n            icon=\"shake\"\n            active={state.sortingMethod === 'shuffle'}\n          />\n          <Toggle\n            clickHandler={sortRotate}\n            text={<IntlMessages id=\"toggle.rotate\" />}\n            icon=\"reload\"\n            active={state.sortingMethod === 'rotate'}\n          />\n        </div>\n      </header>\n\n      <div className=\"isoSortableCardsContainer\">\n        <FlipMove\n          staggerDurationBy=\"30\"\n          duration={500}\n          enterAnimation={state.enterLeaveAnimation}\n          leaveAnimation={state.enterLeaveAnimation}\n          typeName=\"ul\"\n        >\n          {renderArticles()}\n\n          <footer key=\"foot\" className=\"isoAddRemoveControlBar\">\n            <div className=\"isoControlBtnGroup\">\n              <Toggle\n                clickHandler={() => moveArticle('removedArticles', 'articles')}\n                text={<IntlMessages id=\"toggle.addItem\" />}\n                icon=\"plus\"\n                active={state.removedArticles.length > 0}\n              />\n              <Toggle\n                clickHandler={() => moveArticle('articles', 'removedArticles')}\n                text={<IntlMessages id=\"toggle.removeItem\" />}\n                icon=\"close\"\n                active={state.articles.length > 0}\n              />\n            </div>\n          </footer>\n        </FlipMove>\n      </div>\n    </SortableCardWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}