{"ast":null,"code":"import _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Map/GoogleMap/Maps/Basic.js\";\nimport React from 'react';\nimport { posts } from '../config';\nimport googleConfig from '@iso/config/google_map.config';\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport BasicMapWrapper from './Maps.styles';\n\nfunction BasicMap(props) {\n  const _React$useState = React.useState({\n    center: {\n      lat: 40.78306,\n      lng: -73.971249\n    },\n    // 40.783060, -73.971249\n    zoom: 13,\n    posts,\n    infoWindow: null\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        state = _React$useState2[0];\n\n  function loadMap(element) {\n    const google = props.google;\n    if (!element || !google) return;\n    new google.maps.Map(element, {\n      zoom: state.zoom,\n      center: state.center,\n      scrollwheel: false,\n      mapTypeControlOptions: {\n        style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n        position: google.maps.ControlPosition.TOP_RIGHT\n      }\n    });\n  }\n\n  const loaded = props.loaded;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, loaded ? React.createElement(BasicMapWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoGoogleMap\",\n    style: {\n      height: '650px',\n      width: '100%'\n    },\n    ref: loadMap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"API is Loading\"));\n}\n\nexport default GoogleApiWrapper({\n  apiKey: googleConfig.apiKey\n})(BasicMap);","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Map/GoogleMap/Maps/Basic.js"],"names":["React","posts","googleConfig","GoogleApiWrapper","BasicMapWrapper","BasicMap","props","useState","center","lat","lng","zoom","infoWindow","state","loadMap","element","google","maps","Map","scrollwheel","mapTypeControlOptions","style","MapTypeControlStyle","HORIZONTAL_BAR","position","ControlPosition","TOP_RIGHT","loaded","height","width","apiKey"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,eAAP,MAA4B,eAA5B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,0BACPN,KAAK,CAACO,QAAN,CAAe;AAC7BC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,GAAG,EAAE,CAAC;AAAvB,KADqB;AACe;AAC5CC,IAAAA,IAAI,EAAE,EAFuB;AAG7BV,IAAAA,KAH6B;AAI7BW,IAAAA,UAAU,EAAE;AAJiB,GAAf,CADO;AAAA;AAAA,QAChBC,KADgB;;AAQvB,WAASC,OAAT,CAAiBC,OAAjB,EAA0B;AAAA,UAChBC,MADgB,GACLV,KADK,CAChBU,MADgB;AAExB,QAAI,CAACD,OAAD,IAAY,CAACC,MAAjB,EAAyB;AACzB,QAAIA,MAAM,CAACC,IAAP,CAAYC,GAAhB,CAAoBH,OAApB,EAA6B;AAC3BJ,MAAAA,IAAI,EAAEE,KAAK,CAACF,IADe;AAE3BH,MAAAA,MAAM,EAAEK,KAAK,CAACL,MAFa;AAG3BW,MAAAA,WAAW,EAAE,KAHc;AAI3BC,MAAAA,qBAAqB,EAAE;AACrBC,QAAAA,KAAK,EAAEL,MAAM,CAACC,IAAP,CAAYK,mBAAZ,CAAgCC,cADlB;AAErBC,QAAAA,QAAQ,EAAER,MAAM,CAACC,IAAP,CAAYQ,eAAZ,CAA4BC;AAFjB;AAJI,KAA7B;AASD;;AApBsB,QAqBfC,MArBe,GAqBJrB,KArBI,CAqBfqB,MArBe;AAsBvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,GACL,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAFT;AAGE,IAAA,GAAG,EAAEf,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,GASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,CADF;AAeD;;AAED,eAAeX,gBAAgB,CAAC;AAC9B2B,EAAAA,MAAM,EAAE5B,YAAY,CAAC4B;AADS,CAAD,CAAhB,CAEZzB,QAFY,CAAf","sourcesContent":["import React from 'react';\nimport { posts } from '../config';\nimport googleConfig from '@iso/config/google_map.config';\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport BasicMapWrapper from './Maps.styles';\n\nfunction BasicMap(props) {\n  const [state] = React.useState({\n    center: { lat: 40.78306, lng: -73.971249 }, // 40.783060, -73.971249\n    zoom: 13,\n    posts,\n    infoWindow: null,\n  });\n\n  function loadMap(element) {\n    const { google } = props;\n    if (!element || !google) return;\n    new google.maps.Map(element, {\n      zoom: state.zoom,\n      center: state.center,\n      scrollwheel: false,\n      mapTypeControlOptions: {\n        style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n        position: google.maps.ControlPosition.TOP_RIGHT,\n      },\n    });\n  }\n  const { loaded } = props;\n  return (\n    <div>\n      {loaded ? (\n        <BasicMapWrapper>\n          <div\n            className=\"isoGoogleMap\"\n            style={{ height: '650px', width: '100%' }}\n            ref={loadMap}\n          />\n        </BasicMapWrapper>\n      ) : (\n        <span>API is Loading</span>\n      )}\n    </div>\n  );\n}\n\nexport default GoogleApiWrapper({\n  apiKey: googleConfig.apiKey,\n})(BasicMap);\n"]},"metadata":{},"sourceType":"module"}