{"ast":null,"code":"import _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Tables/ImageCell.js\";\nimport React from 'react';\nconst PendingPool = {};\nconst ReadyPool = {};\nexport default function ImageCell({\n  src\n}) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        srcState = _React$useState2[0],\n        setSrcState = _React$useState2[1];\n\n  React.useEffect(() => {\n    loadImage(src);\n  }, [loadImage, src]);\n\n  function loadImage(src) {\n    if (ReadyPool[src]) {\n      setSrcState(src);\n      return;\n    }\n\n    if (PendingPool[src]) {\n      PendingPool[src].push(onLoadImage);\n      return;\n    }\n\n    PendingPool[src] = [onLoadImage];\n    const img = new Image();\n\n    img.onload = () => {\n      PendingPool[src].forEach(callback => {\n        callback(src);\n      });\n      delete PendingPool[src];\n      img.onload = null;\n      src = undefined;\n    };\n\n    img.src = srcState;\n  }\n\n  function onLoadImage(source) {\n    ReadyPool[src] = true;\n\n    if (source === src) {\n      setSrcState(source);\n    }\n  }\n\n  const style = src ? {\n    backgroundImage: \"url(\".concat(src, \")\"),\n    width: '70px',\n    height: '70px',\n    backgroundSize: 'cover'\n  } : undefined;\n  return React.createElement(\"div\", {\n    className: \"exampleImage\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Tables/ImageCell.js"],"names":["React","PendingPool","ReadyPool","ImageCell","src","useState","srcState","setSrcState","useEffect","loadImage","push","onLoadImage","img","Image","onload","forEach","callback","undefined","source","style","backgroundImage","width","height","backgroundSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,SAAS,GAAG,EAAlB;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA4B;AAAA,0BACTJ,KAAK,CAACK,QAAN,CAAe,KAAf,CADS;AAAA;AAAA,QAClCC,QADkC;AAAA,QACxBC,WADwB;;AAGzCP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBC,IAAAA,SAAS,CAACL,GAAD,CAAT;AACD,GAFD,EAEG,CAACK,SAAD,EAAYL,GAAZ,CAFH;;AAGA,WAASK,SAAT,CAAmBL,GAAnB,EAAwB;AACtB,QAAIF,SAAS,CAACE,GAAD,CAAb,EAAoB;AAClBG,MAAAA,WAAW,CAACH,GAAD,CAAX;AACA;AACD;;AAED,QAAIH,WAAW,CAACG,GAAD,CAAf,EAAsB;AACpBH,MAAAA,WAAW,CAACG,GAAD,CAAX,CAAiBM,IAAjB,CAAsBC,WAAtB;AACA;AACD;;AACDV,IAAAA,WAAW,CAACG,GAAD,CAAX,GAAmB,CAACO,WAAD,CAAnB;AAEA,UAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAM;AACjBb,MAAAA,WAAW,CAACG,GAAD,CAAX,CAAiBW,OAAjB,CAAyBC,QAAQ,IAAI;AACnCA,QAAAA,QAAQ,CAACZ,GAAD,CAAR;AACD,OAFD;AAGA,aAAOH,WAAW,CAACG,GAAD,CAAlB;AACAQ,MAAAA,GAAG,CAACE,MAAJ,GAAa,IAAb;AACAV,MAAAA,GAAG,GAAGa,SAAN;AACD,KAPD;;AAQAL,IAAAA,GAAG,CAACR,GAAJ,GAAUE,QAAV;AACD;;AACD,WAASK,WAAT,CAAqBO,MAArB,EAA6B;AAC3BhB,IAAAA,SAAS,CAACE,GAAD,CAAT,GAAiB,IAAjB;;AACA,QAAIc,MAAM,KAAKd,GAAf,EAAoB;AAClBG,MAAAA,WAAW,CAACW,MAAD,CAAX;AACD;AACF;;AACD,QAAMC,KAAK,GAAGf,GAAG,GACb;AACEgB,IAAAA,eAAe,gBAAShB,GAAT,MADjB;AAEEiB,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,MAAM,EAAE,MAHV;AAIEC,IAAAA,cAAc,EAAE;AAJlB,GADa,GAObN,SAPJ;AAQA,SAAO;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAEE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React from 'react';\n\nconst PendingPool = {};\nconst ReadyPool = {};\n\nexport default function ImageCell({ src }) {\n  const [srcState, setSrcState] = React.useState(false);\n\n  React.useEffect(() => {\n    loadImage(src);\n  }, [loadImage, src]);\n  function loadImage(src) {\n    if (ReadyPool[src]) {\n      setSrcState(src);\n      return;\n    }\n\n    if (PendingPool[src]) {\n      PendingPool[src].push(onLoadImage);\n      return;\n    }\n    PendingPool[src] = [onLoadImage];\n\n    const img = new Image();\n    img.onload = () => {\n      PendingPool[src].forEach(callback => {\n        callback(src);\n      });\n      delete PendingPool[src];\n      img.onload = null;\n      src = undefined;\n    };\n    img.src = srcState;\n  }\n  function onLoadImage(source) {\n    ReadyPool[src] = true;\n    if (source === src) {\n      setSrcState(source);\n    }\n  }\n  const style = src\n    ? {\n        backgroundImage: `url(${src})`,\n        width: '70px',\n        height: '70px',\n        backgroundSize: 'cover',\n      }\n    : undefined;\n  return <div className=\"exampleImage\" style={style} />;\n}\n"]},"metadata":{},"sourceType":"module"}