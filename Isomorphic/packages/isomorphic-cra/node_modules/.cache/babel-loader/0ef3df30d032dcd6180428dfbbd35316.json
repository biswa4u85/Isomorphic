{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Note/Note.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport noteActions from '@iso/redux/notes/actions';\nimport NoteList from './NoteList';\nimport { ColorChoser } from '@iso/components/';\nimport Button from '@iso/components/uielements/button';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport NoteComponentWrapper from './Note.styles';\nimport { Textarea } from '@iso/components/uielements/input';\nconst changeNote = noteActions.changeNote,\n      addNote = noteActions.addNote,\n      editNote = noteActions.editNote,\n      deleteNote = noteActions.deleteNote,\n      changeColor = noteActions.changeColor;\nconst Header = _Layout.Header,\n      Content = _Layout.Content;\nexport default function Notes() {\n  const _useSelector = useSelector(state => state.Notes),\n        notes = _useSelector.notes,\n        selectedId = _useSelector.selectedId,\n        colors = _useSelector.colors,\n        seectedColor = _useSelector.seectedColor;\n\n  const dispatch = useDispatch();\n\n  function updateNote(event) {\n    dispatch(editNote(selectedId, event.target.value));\n  }\n\n  const selectedNote = selectedId !== undefined ? notes.filter(note => note.id === selectedId)[0] : null;\n  return React.createElement(NoteComponentWrapper, {\n    className: \"isomorphicNoteComponent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '340px'\n    },\n    className: \"isoNoteListSidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(NoteList, {\n    notes: notes,\n    selectedId: selectedId,\n    changeNote: id => dispatch(changeNote(id)),\n    deleteNote: id => dispatch(deleteNote(id)),\n    colors: colors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(_Layout, {\n    className: \"isoNotepadWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Header, {\n    className: \"isoHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, selectedId !== undefined ? React.createElement(\"div\", {\n    className: \"isoColorChooseWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ColorChoser, {\n    colors: colors,\n    changeColor: v => dispatch(changeColor(v)),\n    seectedColor: seectedColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), ' ', React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"notes.ChoseColor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))) : '', React.createElement(Button, {\n    type: \"primary\",\n    className: \"isoAddNoteBtn\",\n    onClick: () => dispatch(addNote()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"notes.addNote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))), React.createElement(Content, {\n    className: \"isoNoteEditingArea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, selectedId !== undefined ? React.createElement(Textarea, {\n    className: \"isoNoteTextbox\",\n    value: selectedNote.note,\n    onChange: updateNote,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }) : '')));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Note/Note.js"],"names":["React","useSelector","useDispatch","noteActions","NoteList","ColorChoser","Button","IntlMessages","NoteComponentWrapper","Textarea","changeNote","addNote","editNote","deleteNote","changeColor","Header","Content","Notes","state","notes","selectedId","colors","seectedColor","dispatch","updateNote","event","target","value","selectedNote","undefined","filter","note","id","width","v"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Layout } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport noteActions from '@iso/redux/notes/actions';\nimport NoteList from './NoteList';\nimport { ColorChoser } from '@iso/components/';\nimport Button from '@iso/components/uielements/button';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport NoteComponentWrapper from './Note.styles';\nimport { Textarea } from '@iso/components/uielements/input';\n\nconst { changeNote, addNote, editNote, deleteNote, changeColor } = noteActions;\nconst { Header, Content } = Layout;\nexport default function Notes() {\n  const { notes, selectedId, colors, seectedColor } = useSelector(\n    state => state.Notes\n  );\n  const dispatch = useDispatch();\n  function updateNote(event) {\n    dispatch(editNote(selectedId, event.target.value));\n  }\n  const selectedNote =\n    selectedId !== undefined\n      ? notes.filter(note => note.id === selectedId)[0]\n      : null;\n  return (\n    <NoteComponentWrapper className=\"isomorphicNoteComponent\">\n      <div style={{ width: '340px' }} className=\"isoNoteListSidebar\">\n        <NoteList\n          notes={notes}\n          selectedId={selectedId}\n          changeNote={id => dispatch(changeNote(id))}\n          deleteNote={id => dispatch(deleteNote(id))}\n          colors={colors}\n        />\n      </div>\n      <Layout className=\"isoNotepadWrapper\">\n        <Header className=\"isoHeader\">\n          {selectedId !== undefined ? (\n            <div className=\"isoColorChooseWrapper\">\n              <ColorChoser\n                colors={colors}\n                changeColor={v => dispatch(changeColor(v))}\n                seectedColor={seectedColor}\n              />{' '}\n              <span>\n                <IntlMessages id=\"notes.ChoseColor\" />\n              </span>\n            </div>\n          ) : (\n            ''\n          )}\n          <Button\n            type=\"primary\"\n            className=\"isoAddNoteBtn\"\n            onClick={() => dispatch(addNote())}\n          >\n            <IntlMessages id=\"notes.addNote\" />\n          </Button>\n        </Header>\n        <Content className=\"isoNoteEditingArea\">\n          {selectedId !== undefined ? (\n            <Textarea\n              className=\"isoNoteTextbox\"\n              value={selectedNote.note}\n              onChange={updateNote}\n              autoFocus\n            />\n          ) : (\n            ''\n          )}\n          {/*{selectedId !== undefined ? <span>{`created at ${selectedNote.createTime}`}</span> : ''}*/}\n        </Content>\n      </Layout>\n    </NoteComponentWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}