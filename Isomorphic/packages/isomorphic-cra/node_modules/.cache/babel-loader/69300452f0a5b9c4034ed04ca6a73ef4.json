{"ast":null,"code":"var _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/GithubSearch/GithubSearchResult.js\";\nimport React from 'react';\nimport Loader from '@iso/components/utility/loader';\nimport HelperText from '@iso/components/utility/helper-text';\nimport Pagination from '@iso/components/uielements/pagination';\nimport { per_page } from '@iso/redux/githubSearch/sagas';\nimport { GithubResultListStyleWrapper, GithubResultStyleWrapper } from './GithubSearchResult.styles';\n\nfunction SearchList(result) {\n  return React.createElement(GithubResultListStyleWrapper, {\n    className: \"isoGithubResultList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, result.map(item => {\n    const onClick = () => {\n      window.open(item.html_url, '_blank');\n    };\n\n    const updateDate = new Date(item.updated_at).toDateString();\n    return React.createElement(\"div\", {\n      key: item.id,\n      className: \"isoSingleRepository\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"titleAndLanguage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: onClick,\n      href: \"# \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"\".concat(item.full_name, \" \"))), item.language ? React.createElement(\"span\", {\n      className: \"language\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, item.language) : '', item.stargazers_count ? React.createElement(\"span\", {\n      className: \"totalStars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, item.stargazers_count) : ''), item.description ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, item.description) : '', React.createElement(\"span\", {\n      className: \"updateDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Updated on \", updateDate));\n  }));\n}\n\nconst GitResult = ({\n  GitSearch,\n  onPageChange\n}) => {\n  const searcText = GitSearch.searcText,\n        result = GitSearch.result,\n        loading = GitSearch.loading,\n        error = GitSearch.error,\n        page = GitSearch.page,\n        total_count = GitSearch.total_count;\n\n  if (!searcText) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n  if (loading) {\n    return React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n  if (error || !total_count) {\n    return React.createElement(HelperText, {\n      text: \"THERE ARE SOME ERRORS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n  if (result.length === 0) {\n    return React.createElement(HelperText, {\n      text: \"No Result Found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n  }\n\n  const visibleItem = total_count > 1000 ? 1000 : total_count;\n  const pageCount = Math.floor(visibleItem / per_page);\n  return React.createElement(GithubResultStyleWrapper, {\n    className: \"isoGithubSearchResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"isoTotalRepository\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\".concat(total_count), \" repository results\")), SearchList(result), React.createElement(\"div\", {\n    className: \"githubSearchPagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Pagination, {\n    defaultCurrent: page,\n    total: pageCount,\n    onChange: page => {\n      onPageChange(searcText, page);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n};\n\nexport default GitResult;","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/GithubSearch/GithubSearchResult.js"],"names":["React","Loader","HelperText","Pagination","per_page","GithubResultListStyleWrapper","GithubResultStyleWrapper","SearchList","result","map","item","onClick","window","open","html_url","updateDate","Date","updated_at","toDateString","id","full_name","language","stargazers_count","description","GitResult","GitSearch","onPageChange","searcText","loading","error","page","total_count","length","visibleItem","pageCount","Math","floor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loader from '@iso/components/utility/loader';\nimport HelperText from '@iso/components/utility/helper-text';\nimport Pagination from '@iso/components/uielements/pagination';\nimport { per_page } from '@iso/redux/githubSearch/sagas';\nimport {\n  GithubResultListStyleWrapper,\n  GithubResultStyleWrapper,\n} from './GithubSearchResult.styles';\n\nfunction SearchList(result) {\n  return (\n    <GithubResultListStyleWrapper className=\"isoGithubResultList\">\n      {result.map(item => {\n        const onClick = () => {\n          window.open(item.html_url, '_blank');\n        };\n        const updateDate = new Date(item.updated_at).toDateString();\n        return (\n          <div key={item.id} className=\"isoSingleRepository\">\n            <div className=\"titleAndLanguage\">\n              <h3>\n                <a onClick={onClick} href=\"# \">\n                  {`${item.full_name} `}\n                </a>\n              </h3>\n\n              {item.language ? (\n                <span className=\"language\">{item.language}</span>\n              ) : (\n                ''\n              )}\n              {item.stargazers_count ? (\n                <span className=\"totalStars\">{item.stargazers_count}</span>\n              ) : (\n                ''\n              )}\n            </div>\n            {item.description ? <p>{item.description}</p> : ''}\n            <span className=\"updateDate\">Updated on {updateDate}</span>\n          </div>\n        );\n      })}\n    </GithubResultListStyleWrapper>\n  );\n}\nconst GitResult = ({ GitSearch, onPageChange }) => {\n  const { searcText, result, loading, error, page, total_count } = GitSearch;\n  if (!searcText) {\n    return <div />;\n  }\n  if (loading) {\n    return <Loader />;\n  }\n  if (error || !total_count) {\n    return <HelperText text=\"THERE ARE SOME ERRORS\" />;\n  }\n  if (result.length === 0) {\n    return <HelperText text=\"No Result Found\" />;\n  }\n  const visibleItem = total_count > 1000 ? 1000 : total_count;\n  const pageCount = Math.floor(visibleItem / per_page);\n  return (\n    <GithubResultStyleWrapper className=\"isoGithubSearchResult\">\n      <p className=\"isoTotalRepository\">\n        <span>{`${total_count}`} repository results</span>\n      </p>\n      {SearchList(result)}\n      <div className=\"githubSearchPagination\">\n        <Pagination\n          defaultCurrent={page}\n          total={pageCount}\n          onChange={page => {\n            onPageChange(searcText, page);\n          }}\n        />\n      </div>\n    </GithubResultStyleWrapper>\n  );\n};\n\nexport default GitResult;\n"]},"metadata":{},"sourceType":"module"}