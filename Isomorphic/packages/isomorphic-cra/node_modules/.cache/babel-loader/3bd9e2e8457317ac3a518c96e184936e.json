{"ast":null,"code":"var getTimeStamp = require('@uppy/utils/lib/getTimeStamp'); // Swallow logs, default if logger is not set or debug: false\n\n\nvar nullLogger = {\n  debug: function debug() {},\n  warn: function warn() {},\n  error: function error() {} // Print logs to console with namespace + timestamp,\n  // set by logger: Uppy.debugLogger or debug: true\n\n};\nvar debugLogger = {\n  debug: function debug() {\n    // IE 10 doesnâ€™t support console.debug\n    var debug = console.debug || console.log;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    debug.call.apply(debug, [console, \"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  warn: function warn() {\n    var _console;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return (_console = console).warn.apply(_console, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  error: function error() {\n    var _console2;\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return (_console2 = console).error.apply(_console2, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  }\n};\nmodule.exports = {\n  nullLogger: nullLogger,\n  debugLogger: debugLogger\n};","map":null,"metadata":{},"sourceType":"script"}