{"ast":null,"code":"import _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Todo/Todo.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '@iso/components/uielements/input';\nimport todoAction from '@iso/redux/todos/actions';\nimport TodoList from './TodoList';\nimport { TodoWrapper } from './Todo.styles';\nconst addTodo = todoAction.addTodo,\n      edittodo = todoAction.edittodo,\n      deleteTodo = todoAction.deleteTodo,\n      allCompleted = todoAction.allCompleted,\n      deleteCompleted = todoAction.deleteCompleted;\nconst Header = _Layout.Header,\n      Content = _Layout.Content;\nexport default function ToDo() {\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        newTodo = _React$useState2[0],\n        setNewTodo = _React$useState2[1];\n\n  const _useSelector = useSelector(state => state.Todos),\n        todos = _useSelector.todos,\n        colors = _useSelector.colors;\n\n  const dispatch = useDispatch();\n  return React.createElement(_Layout, {\n    style: {\n      background: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(TodoWrapper, {\n    className: \"isomorphicTodoComponent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Header, {\n    className: \"isoTodoHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: 'Type here for add a new todo',\n    value: newTodo,\n    className: \"isoTodoInput\",\n    onChange: event => setNewTodo(event.target.value),\n    onPressEnter: event => {\n      setNewTodo('');\n      dispatch(addTodo(event.target.value));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(Content, {\n    className: \"isoTodoContentBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(TodoList, {\n    todos: todos,\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    edittodo: todo => dispatch(edittodo(todo)),\n    colors: colors,\n    allCompleted: () => dispatch(allCompleted()),\n    deleteCompleted: () => dispatch(deleteCompleted()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Todo/Todo.js"],"names":["React","useDispatch","useSelector","Input","todoAction","TodoList","TodoWrapper","addTodo","edittodo","deleteTodo","allCompleted","deleteCompleted","Header","Content","ToDo","useState","newTodo","setNewTodo","state","Todos","todos","colors","dispatch","background","event","target","value","id","todo"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;MAGEC,O,GAKEH,U,CALFG,O;MACAC,Q,GAIEJ,U,CAJFI,Q;MACAC,U,GAGEL,U,CAHFK,U;MACAC,Y,GAEEN,U,CAFFM,Y;MACAC,e,GACEP,U,CADFO,e;MAEMC,M,WAAAA,M;MAAQC,O,WAAAA,O;AAEhB,eAAe,SAASC,IAAT,GAAgB;AAAA,0BACCd,KAAK,CAACe,QAAN,CAAe,EAAf,CADD;AAAA;AAAA,QACtBC,OADsB;AAAA,QACbC,UADa;;AAAA,uBAEHf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAFR;AAAA,QAErBC,KAFqB,gBAErBA,KAFqB;AAAA,QAEdC,MAFc,gBAEdA,MAFc;;AAG7B,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,SACE;AAAQ,IAAA,KAAK,EAAE;AAAEsB,MAAAA,UAAU,EAAE;AAAd,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,yBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAE,8BADf;AAEE,IAAA,KAAK,EAAEP,OAFT;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJ/B;AAKE,IAAA,YAAY,EAAEF,KAAK,IAAI;AACrBP,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAK,MAAAA,QAAQ,CAACf,OAAO,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR,CAAR;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAaE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,UAAU,EAAEO,EAAE,IAAIL,QAAQ,CAACb,UAAU,CAACkB,EAAD,CAAX,CAF5B;AAGE,IAAA,QAAQ,EAAEC,IAAI,IAAIN,QAAQ,CAACd,QAAQ,CAACoB,IAAD,CAAT,CAH5B;AAIE,IAAA,MAAM,EAAEP,MAJV;AAKE,IAAA,YAAY,EAAE,MAAMC,QAAQ,CAACZ,YAAY,EAAb,CAL9B;AAME,IAAA,eAAe,EAAE,MAAMY,QAAQ,CAACX,eAAe,EAAhB,CANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF,CADF;AA4BD","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Layout } from 'antd';\nimport Input from '@iso/components/uielements/input';\nimport todoAction from '@iso/redux/todos/actions';\nimport TodoList from './TodoList';\nimport { TodoWrapper } from './Todo.styles';\n\nconst {\n  addTodo,\n  edittodo,\n  deleteTodo,\n  allCompleted,\n  deleteCompleted,\n} = todoAction;\nconst { Header, Content } = Layout;\n\nexport default function ToDo() {\n  const [newTodo, setNewTodo] = React.useState('');\n  const { todos, colors } = useSelector(state => state.Todos);\n  const dispatch = useDispatch();\n\n  return (\n    <Layout style={{ background: 'none' }}>\n      <TodoWrapper className=\"isomorphicTodoComponent\">\n        <Header className=\"isoTodoHeader\">\n          <Input\n            placeholder={'Type here for add a new todo'}\n            value={newTodo}\n            className=\"isoTodoInput\"\n            onChange={event => setNewTodo(event.target.value)}\n            onPressEnter={event => {\n              setNewTodo('');\n              dispatch(addTodo(event.target.value));\n            }}\n          />\n        </Header>\n        <Content className=\"isoTodoContentBody\">\n          <TodoList\n            todos={todos}\n            deleteTodo={id => dispatch(deleteTodo(id))}\n            edittodo={todo => dispatch(edittodo(todo))}\n            colors={colors}\n            allCompleted={() => dispatch(allCompleted())}\n            deleteCompleted={() => dispatch(deleteCompleted())}\n          />\n        </Content>\n      </TodoWrapper>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}