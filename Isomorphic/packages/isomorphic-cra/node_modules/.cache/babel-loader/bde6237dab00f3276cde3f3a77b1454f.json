{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/GithubSearch/GithubSearch.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport notification from '@iso/components/Notification';\nimport actions from '@iso/redux/githubSearch/actions';\nimport GitResult from './GithubSearchResult';\nimport basicStyle from '@iso/assets/styles/constants';\nconst gitSearch = actions.gitSearch,\n      onPageChange = actions.onPageChange;\n\nclass GitSearch extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSearch = value => {\n      if (value && value.length > 0) {\n        this.props.gitSearch(value);\n      } else {\n        notification('error', 'Please type something');\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.onSearch(this.props.GitSearch.searcText);\n  }\n\n  render() {\n    const rowStyle = basicStyle.rowStyle,\n          colStyle = basicStyle.colStyle,\n          gutter = basicStyle.gutter;\n    const _this$props = this.props,\n          onPageChange = _this$props.onPageChange,\n          GitSearch = _this$props.GitSearch;\n    return React.createElement(LayoutWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"sidebar.githubSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(_Row, {\n      style: rowStyle,\n      gutter: gutter,\n      justify: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      md: 24,\n      sm: 24,\n      xs: 24,\n      style: colStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Box, {\n      style: {\n        minHeight: 220\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(InputSearch, {\n      placeholder: \"Github Search\",\n      defaultValue: GitSearch.searcText,\n      onSearch: this.onSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(GitResult, {\n      GitSearch: GitSearch,\n      defaultValue: GitSearch.searcText,\n      onPageChange: onPageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    GitSearch: state.githubSearch\n  };\n}\n\nexport default connect(mapStateToProps, {\n  gitSearch,\n  onPageChange\n})(GitSearch);","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/GithubSearch/GithubSearch.js"],"names":["React","Component","connect","PageHeader","Box","LayoutWrapper","InputSearch","IntlMessages","notification","actions","GitResult","basicStyle","gitSearch","onPageChange","GitSearch","onSearch","value","length","props","componentDidMount","searcText","render","rowStyle","colStyle","gutter","minHeight","mapStateToProps","state","githubSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport notification from '@iso/components/Notification';\nimport actions from '@iso/redux/githubSearch/actions';\nimport GitResult from './GithubSearchResult';\nimport basicStyle from '@iso/assets/styles/constants';\n\nconst { gitSearch, onPageChange } = actions;\n\nclass GitSearch extends Component {\n  onSearch = value => {\n    if (value && value.length > 0) {\n      this.props.gitSearch(value);\n    } else {\n      notification('error', 'Please type something');\n    }\n  };\n  componentDidMount() {\n    this.onSearch(this.props.GitSearch.searcText);\n  }\n  render() {\n    const { rowStyle, colStyle, gutter } = basicStyle;\n    const { onPageChange, GitSearch } = this.props;\n    return (\n      <LayoutWrapper>\n        <PageHeader>\n          <IntlMessages id=\"sidebar.githubSearch\" />\n        </PageHeader>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={24} sm={24} xs={24} style={colStyle}>\n            <Box style={{ minHeight: 220 }}>\n              <InputSearch\n                placeholder=\"Github Search\"\n                defaultValue={GitSearch.searcText}\n                onSearch={this.onSearch}\n              />\n              <GitResult\n                GitSearch={GitSearch}\n                defaultValue={GitSearch.searcText}\n                onPageChange={onPageChange}\n              />\n            </Box>\n          </Col>\n        </Row>\n      </LayoutWrapper>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return { GitSearch: state.githubSearch };\n}\nexport default connect(\n  mapStateToProps,\n  { gitSearch, onPageChange }\n)(GitSearch);\n"]},"metadata":{},"sourceType":"module"}