{"ast":null,"code":"import _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/ScrumBoard/Board/BoardList/BoardList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\nimport NoBoardFounds from '../BoardNotFound/BoardNotFound';\nimport BoardListCard from './BoardListCard/BoardListCard';\nimport AppLayout from '../../AppLayout/AppLayout';\nimport { filterProjects } from '@iso/lib/helpers/filterProjects';\nimport { Table } from './BoardList.style';\n\nfunction BoardLists({\n  boards,\n  deleteBoardWatcher,\n  editBoard,\n  history,\n  match,\n  boardsRenderWatcher\n}) {\n  useEffect(() => {\n    boardsRenderWatcher();\n  }, [boardsRenderWatcher]);\n\n  const handleEdit = board => {\n    editBoard(board);\n    history.push(\"/dashboard/scrum-board/\".concat(board.id));\n  };\n\n  return React.createElement(AppLayout, {\n    history: history,\n    match: match,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, !isEmpty(boards) ? React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, Object.values(boards).map(board => React.createElement(BoardListCard, {\n    key: board.id,\n    item: board,\n    onDelete: () => deleteBoardWatcher(board.id),\n    onEdit: () => handleEdit(board),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))) : React.createElement(NoBoardFounds, {\n    history: history,\n    match: match,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}\n\nexport default connect(state => ({\n  boards: filterProjects(state.scrumBoard.boards, state.scrumBoard.searchText)\n}), _objectSpread({}, scrumBoardActions))(BoardLists);","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/ScrumBoard/Board/BoardList/BoardList.js"],"names":["React","useEffect","connect","isEmpty","scrumBoardActions","NoBoardFounds","BoardListCard","AppLayout","filterProjects","Table","BoardLists","boards","deleteBoardWatcher","editBoard","history","match","boardsRenderWatcher","handleEdit","board","push","id","Object","values","map","state","scrumBoard","searchText"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AACA,SAASC,UAAT,CAAoB;AAClBC,EAAAA,MADkB;AAElBC,EAAAA,kBAFkB;AAGlBC,EAAAA,SAHkB;AAIlBC,EAAAA,OAJkB;AAKlBC,EAAAA,KALkB;AAMlBC,EAAAA;AANkB,CAApB,EAOG;AACDf,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,CAACA,mBAAD,CAFM,CAAT;;AAIA,QAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1BL,IAAAA,SAAS,CAACK,KAAD,CAAT;AACAJ,IAAAA,OAAO,CAACK,IAAR,kCAAuCD,KAAK,CAACE,EAA7C;AACD,GAHD;;AAKA,SACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEN,OAApB;AAA6B,IAAA,KAAK,EAAEC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACZ,OAAO,CAACQ,MAAD,CAAR,GACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,MAAM,CAACC,MAAP,CAAcX,MAAd,EAAsBY,GAAtB,CAA0BL,KAAK,IAC9B,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACE,EADb;AAEE,IAAA,IAAI,EAAEF,KAFR;AAGE,IAAA,QAAQ,EAAE,MAAMN,kBAAkB,CAACM,KAAK,CAACE,EAAP,CAHpC;AAIE,IAAA,MAAM,EAAE,MAAMH,UAAU,CAACC,KAAD,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADD,GAYC,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEJ,OAAxB;AAAiC,IAAA,KAAK,EAAEC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF;AAkBD;;AAED,eAAeb,OAAO,CACpBsB,KAAK,KAAK;AACRb,EAAAA,MAAM,EAAEH,cAAc,CACpBgB,KAAK,CAACC,UAAN,CAAiBd,MADG,EAEpBa,KAAK,CAACC,UAAN,CAAiBC,UAFG;AADd,CAAL,CADe,oBAOftB,iBAPe,EAAP,CAQbM,UARa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\nimport NoBoardFounds from '../BoardNotFound/BoardNotFound';\nimport BoardListCard from './BoardListCard/BoardListCard';\nimport AppLayout from '../../AppLayout/AppLayout';\nimport { filterProjects } from '@iso/lib/helpers/filterProjects';\nimport { Table } from './BoardList.style';\nfunction BoardLists({\n  boards,\n  deleteBoardWatcher,\n  editBoard,\n  history,\n  match,\n  boardsRenderWatcher,\n}) {\n  useEffect(() => {\n    boardsRenderWatcher();\n  }, [boardsRenderWatcher]);\n\n  const handleEdit = board => {\n    editBoard(board);\n    history.push(`/dashboard/scrum-board/${board.id}`);\n  };\n\n  return (\n    <AppLayout history={history} match={match}>\n      {!isEmpty(boards) ? (\n        <Table>\n          {Object.values(boards).map(board => (\n            <BoardListCard\n              key={board.id}\n              item={board}\n              onDelete={() => deleteBoardWatcher(board.id)}\n              onEdit={() => handleEdit(board)}\n            />\n          ))}\n        </Table>\n      ) : (\n        <NoBoardFounds history={history} match={match} />\n      )}\n    </AppLayout>\n  );\n}\n\nexport default connect(\n  state => ({\n    boards: filterProjects(\n      state.scrumBoard.boards,\n      state.scrumBoard.searchText\n    ),\n  }),\n  { ...scrumBoardActions }\n)(BoardLists);\n"]},"metadata":{},"sourceType":"module"}