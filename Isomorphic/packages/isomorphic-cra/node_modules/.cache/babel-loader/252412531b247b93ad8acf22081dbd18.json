{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar classNames = require('classnames');\n\nvar Breadcrumbs = require('./Breadcrumbs');\n\nvar Filter = require('./Filter');\n\nvar ItemList = require('./ItemList');\n\nvar FooterActions = require('./FooterActions');\n\nvar _require = require('preact'),\n    h = _require.h;\n\nvar Browser = function Browser(props) {\n  var filteredFolders = props.folders;\n  var filteredFiles = props.files;\n\n  if (props.filterInput !== '') {\n    filteredFolders = props.filterItems(props.folders);\n    filteredFiles = props.filterItems(props.files);\n  }\n\n  var selected = props.currentSelection.length;\n  return h(\"div\", {\n    class: classNames('uppy-ProviderBrowser', \"uppy-ProviderBrowser-viewType--\" + props.viewType)\n  }, h(\"div\", {\n    class: \"uppy-ProviderBrowser-header\"\n  }, h(\"div\", {\n    class: classNames('uppy-ProviderBrowser-headerBar', !props.showBreadcrumbs && 'uppy-ProviderBrowser-headerBar--simple')\n  }, props.showBreadcrumbs && Breadcrumbs({\n    getFolder: props.getFolder,\n    directories: props.directories,\n    breadcrumbsIcon: props.pluginIcon && props.pluginIcon(),\n    title: props.title\n  }), h(\"span\", {\n    class: \"uppy-ProviderBrowser-user\"\n  }, props.username), h(\"button\", {\n    type: \"button\",\n    onclick: props.logout,\n    class: \"uppy-u-reset uppy-ProviderBrowser-userLogout\"\n  }, props.i18n('logOut')))), props.showFilter && h(Filter, props), h(ItemList, {\n    columns: [{\n      name: 'Name',\n      key: 'title'\n    }],\n    folders: filteredFolders,\n    files: filteredFiles,\n    activeRow: props.isActiveRow,\n    sortByTitle: props.sortByTitle,\n    sortByDate: props.sortByDate,\n    isChecked: props.isChecked,\n    handleFolderClick: props.getNextFolder,\n    toggleCheckbox: props.toggleCheckbox,\n    handleScroll: props.handleScroll,\n    title: props.title,\n    showTitles: props.showTitles,\n    i18n: props.i18n,\n    viewType: props.viewType\n  }), selected > 0 && h(FooterActions, _extends({\n    selected: selected\n  }, props)));\n};\n\nmodule.exports = Browser;","map":null,"metadata":{},"sourceType":"script"}