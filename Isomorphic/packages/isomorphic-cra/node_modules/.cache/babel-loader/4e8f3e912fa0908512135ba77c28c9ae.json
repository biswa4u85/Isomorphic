{"ast":null,"code":"import _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/YoutubeSearch/Result.js\";\nimport React from 'react';\nimport Loader from '../utility/loader';\nimport HelperText from '../utility/helper-text';\nimport Button from '../uielements/button';\nimport PlayYoutubeVideo from './PlayYoutubeVideo';\nimport { YoutubeSearchListStyleWrapper, YoutubeSearchStyleWrapper } from './YoutubeSearch.style';\n\nfunction SearchList(result, handleSelectedVideo) {\n  return React.createElement(YoutubeSearchListStyleWrapper, {\n    className: \"isoYoutubeResultList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, result.map(item => {\n    const _item$snippet = item.snippet,\n          publishedAt = _item$snippet.publishedAt,\n          title = _item$snippet.title,\n          description = _item$snippet.description,\n          channelTitle = _item$snippet.channelTitle,\n          thumbnails = _item$snippet.thumbnails,\n          channelId = _item$snippet.channelId;\n    const id = item.id.videoId;\n    const updateDate = new Date(publishedAt).toDateString();\n\n    const onClick = event => {\n      event.preventDefault();\n      handleSelectedVideo(item);\n    };\n\n    const onChannelClick = event => {\n      event.preventDefault();\n      event.stopPropagation();\n      window.open(\"https://www.youtube.com/channel/\".concat(channelId), '_blank');\n    };\n\n    return React.createElement(\"div\", {\n      key: id,\n      className: \"isoSingleVideoResult\",\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"videoThumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"#\",\n      src: thumbnails.default.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"videoDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"videoName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"# \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"\".concat(title, \" \"))), React.createElement(\"div\", {\n      className: \"ChannelNameAndDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: onChannelClick,\n      className: \"channelTitle\",\n      href: \"# \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\".concat(channelTitle, \" \")), React.createElement(\"span\", {\n      className: \"uploadDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, updateDate)), description ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, description) : ''));\n  }));\n}\n\nfunction YoutubeResult({\n  YoutubeSearch,\n  onPageChange\n}) {\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        selectedVideo = _React$useState2[0],\n        setSelectrdVideo = _React$useState2[1];\n\n  const handleCancel = () => {\n    handleSelectedVideo(null);\n  };\n\n  const handleSelectedVideo = selectedVideo => {\n    setSelectrdVideo(selectedVideo);\n  };\n\n  const searcText = YoutubeSearch.searcText,\n        result = YoutubeSearch.result,\n        loading = YoutubeSearch.loading,\n        error = YoutubeSearch.error,\n        nextPageToken = YoutubeSearch.nextPageToken,\n        prevPageToken = YoutubeSearch.prevPageToken,\n        total_count = YoutubeSearch.total_count;\n\n  if (!searcText) {\n    return null;\n  }\n\n  if (loading) {\n    return React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    });\n  }\n\n  if (error || !total_count) {\n    return React.createElement(HelperText, {\n      text: \"THERE ARE SOME ERRORS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n  }\n\n  if (result.length === 0) {\n    return React.createElement(HelperText, {\n      text: \"No Result Found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(YoutubeSearchStyleWrapper, {\n    className: \"isoYoutubeSearchResult\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"isoTotalResultFind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\".concat(total_count), \" videos found\")), selectedVideo ? React.createElement(PlayYoutubeVideo, {\n    selectedVideo: selectedVideo,\n    handleCancel: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }) : '', SearchList(result, handleSelectedVideo), React.createElement(\"div\", {\n    className: \"youtubeSearchPagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, prevPageToken ? React.createElement(Button, {\n    onClick: () => onPageChange(searcText, prevPageToken),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Previous\") : '', nextPageToken ? React.createElement(Button, {\n    onClick: () => onPageChange(searcText, nextPageToken),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Next\") : ''));\n}\n\nexport default YoutubeResult;","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/YoutubeSearch/Result.js"],"names":["React","Loader","HelperText","Button","PlayYoutubeVideo","YoutubeSearchListStyleWrapper","YoutubeSearchStyleWrapper","SearchList","result","handleSelectedVideo","map","item","snippet","publishedAt","title","description","channelTitle","thumbnails","channelId","id","videoId","updateDate","Date","toDateString","onClick","event","preventDefault","onChannelClick","stopPropagation","window","open","default","url","YoutubeResult","YoutubeSearch","onPageChange","useState","selectedVideo","setSelectrdVideo","handleCancel","searcText","loading","error","nextPageToken","prevPageToken","total_count","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loader from '../utility/loader';\nimport HelperText from '../utility/helper-text';\nimport Button from '../uielements/button';\nimport PlayYoutubeVideo from './PlayYoutubeVideo';\nimport {\n  YoutubeSearchListStyleWrapper,\n  YoutubeSearchStyleWrapper,\n} from './YoutubeSearch.style';\n\nfunction SearchList(result, handleSelectedVideo) {\n  return (\n    <YoutubeSearchListStyleWrapper className=\"isoYoutubeResultList\">\n      {result.map(item => {\n        const {\n          publishedAt,\n          title,\n          description,\n          channelTitle,\n          thumbnails,\n          channelId,\n        } = item.snippet;\n        const id = item.id.videoId;\n        const updateDate = new Date(publishedAt).toDateString();\n        const onClick = event => {\n          event.preventDefault();\n          handleSelectedVideo(item);\n        };\n        const onChannelClick = event => {\n          event.preventDefault();\n          event.stopPropagation();\n          window.open(`https://www.youtube.com/channel/${channelId}`, '_blank');\n        };\n        return (\n          <div key={id} className=\"isoSingleVideoResult\" onClick={onClick}>\n            <div className=\"videoThumb\">\n              <img alt=\"#\" src={thumbnails.default.url} />\n            </div>\n\n            <div className=\"videoDescription\">\n              <h3 className=\"videoName\">\n                <a href=\"# \">{`${title} `}</a>\n              </h3>\n\n              <div className=\"ChannelNameAndDate\">\n                <a onClick={onChannelClick} className=\"channelTitle\" href=\"# \">\n                  {`${channelTitle} `}\n                </a>\n                <span className=\"uploadDate\">{updateDate}</span>\n              </div>\n\n              {description ? <p>{description}</p> : ''}\n            </div>\n          </div>\n        );\n      })}\n    </YoutubeSearchListStyleWrapper>\n  );\n}\nfunction YoutubeResult({ YoutubeSearch, onPageChange }) {\n  const [selectedVideo, setSelectrdVideo] = React.useState(null);\n\n  const handleCancel = () => {\n    handleSelectedVideo(null);\n  };\n  const handleSelectedVideo = selectedVideo => {\n    setSelectrdVideo(selectedVideo);\n  };\n\n  const {\n    searcText,\n    result,\n    loading,\n    error,\n    nextPageToken,\n    prevPageToken,\n    total_count,\n  } = YoutubeSearch;\n  if (!searcText) {\n    return null;\n  }\n  if (loading) {\n    return <Loader />;\n  }\n  if (error || !total_count) {\n    return <HelperText text=\"THERE ARE SOME ERRORS\" />;\n  }\n  if (result.length === 0) {\n    return <HelperText text=\"No Result Found\" />;\n  }\n  return (\n    <YoutubeSearchStyleWrapper className=\"isoYoutubeSearchResult\">\n      <p className=\"isoTotalResultFind\">\n        <span>{`${total_count}`} videos found</span>\n      </p>\n\n      {selectedVideo ? (\n        <PlayYoutubeVideo\n          selectedVideo={selectedVideo}\n          handleCancel={handleCancel}\n        />\n      ) : (\n        ''\n      )}\n      {SearchList(result, handleSelectedVideo)}\n\n      <div className=\"youtubeSearchPagination\">\n        {prevPageToken ? (\n          <Button onClick={() => onPageChange(searcText, prevPageToken)}>\n            Previous\n          </Button>\n        ) : (\n          ''\n        )}\n        {nextPageToken ? (\n          <Button onClick={() => onPageChange(searcText, nextPageToken)}>\n            Next\n          </Button>\n        ) : (\n          ''\n        )}\n      </div>\n    </YoutubeSearchStyleWrapper>\n  );\n}\n\nexport default YoutubeResult;\n"]},"metadata":{},"sourceType":"module"}