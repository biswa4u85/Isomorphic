{"ast":null,"code":"import _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst basicData = {\n  labels: ['12am-3am', '3am-6am', '6am-9am', '9am-12pm', '12pm-3pm', '3pm-6pm', '6pm-9pm', '9pm-12am'],\n  datasets: [{\n    title: 'Some Data',\n    color: 'light-blue',\n    values: [25, 40, 30, 35, 8, 52, 17, -4]\n  }, {\n    title: 'Another Set',\n    color: 'violet',\n    values: [25, 50, -10, 15, 18, 32, 27, 14]\n  }, {\n    title: 'Yet Another',\n    color: 'blue',\n    values: [15, 20, -3, -15, 58, 12, -17, 37]\n  }]\n};\nconst heatMapData = {};\nconst currentDate = new Date();\nconst heatMapStart = new Date(new Date().setMonth(1, 1));\nlet timestamp = currentDate.getTime() / 1000;\ntimestamp = Math.floor(timestamp - timestamp % 86400).toFixed(1); // convert to midnight\n\nfor (let i = 0; i < 375; i++) {\n  heatMapData[timestamp] = Math.floor(Math.random() * 6) + 1;\n  timestamp = Math.floor(timestamp - 86400).toFixed(1);\n}\n\nconst basicConfig = {\n  height: 250,\n  format_tooltip_x: d => (d + '').toUpperCase(),\n  format_tooltip_y: d => d + ' pts'\n};\n\nconst barChart = _objectSpread({\n  header: 'Bar Chart',\n  title: '',\n  parent: '#frappeBarChart',\n  parentId: 'frappeBarChart',\n  type: 'bar',\n  data: basicData\n}, basicConfig);\n\nconst lineChart = _objectSpread({\n  header: 'Line Chart',\n  title: '',\n  parent: '#frappeLineChart',\n  parentId: 'frappeLineChart',\n  type: 'line',\n  data: basicData,\n  show_dots: 0,\n  heatline: 1,\n  region_fill: 1\n}, basicConfig);\n\nconst scatterChart = _objectSpread({\n  header: 'Scatter Chart',\n  title: '',\n  parent: '#frappeScatterChart',\n  parentId: 'frappeScatterChart',\n  type: 'scatter',\n  data: basicData\n}, basicConfig);\n\nconst pieChart = _objectSpread({\n  header: 'Pie Chart',\n  title: '',\n  parent: '#frappePieChart',\n  parentId: 'frappePieChart',\n  type: 'pie',\n  data: basicData\n}, basicConfig);\n\nconst percentageChart = _objectSpread({\n  header: 'Percentage Chart',\n  title: '',\n  parent: '#frappePercentageChart',\n  parentId: 'frappePercentageChart',\n  type: 'percentage',\n  data: basicData\n}, basicConfig);\n\nconst heatMap = {\n  header: 'Heatmap Chart',\n  title: '',\n  parent: '#heatmap',\n  parentId: 'heatmap',\n  type: 'heatmap',\n  height: 115,\n  data: heatMapData,\n  //heatMapData,\n  discrete_domains: 1,\n  // default: 0\n  start: heatMapStart\n};\nconst heatMapHalloween = {\n  header: 'Heatmap Chart Halloween',\n  title: '',\n  parent: '#heatmapHalloween',\n  parentId: 'heatmapHalloween',\n  type: 'heatmap',\n  height: 115,\n  data: heatMapData,\n  //heatMapData,\n  discrete_domains: 1,\n  // default: 0\n  start: heatMapStart,\n  legend_colors: ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c']\n};\nconst updatedChart = {\n  header: 'Updateable Chart',\n  title: '',\n  parent: '#frappeupdatedChart',\n  parentId: 'frappeupdatedChart',\n  data: basicData,\n  type: 'line',\n  show_dots: 0,\n  heatline: 1\n};\nexport { barChart, lineChart, scatterChart, pieChart, percentageChart, heatMap, heatMapHalloween, updatedChart, basicData };","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Charts/FrappeChart/config.js"],"names":["basicData","labels","datasets","title","color","values","heatMapData","currentDate","Date","heatMapStart","setMonth","timestamp","getTime","Math","floor","toFixed","i","random","basicConfig","height","format_tooltip_x","d","toUpperCase","format_tooltip_y","barChart","header","parent","parentId","type","data","lineChart","show_dots","heatline","region_fill","scatterChart","pieChart","percentageChart","heatMap","discrete_domains","start","heatMapHalloween","legend_colors","updatedChart"],"mappings":"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","sourcesContent":["const basicData = {\n  labels: [\n    '12am-3am',\n    '3am-6am',\n    '6am-9am',\n    '9am-12pm',\n    '12pm-3pm',\n    '3pm-6pm',\n    '6pm-9pm',\n    '9pm-12am',\n  ],\n\n  datasets: [\n    {\n      title: 'Some Data',\n      color: 'light-blue',\n      values: [25, 40, 30, 35, 8, 52, 17, -4],\n    },\n    {\n      title: 'Another Set',\n      color: 'violet',\n      values: [25, 50, -10, 15, 18, 32, 27, 14],\n    },\n    {\n      title: 'Yet Another',\n      color: 'blue',\n      values: [15, 20, -3, -15, 58, 12, -17, 37],\n    },\n  ],\n};\n\nconst heatMapData = {};\nconst currentDate = new Date();\nconst heatMapStart = new Date(new Date().setMonth(1, 1));\nlet timestamp = currentDate.getTime() / 1000;\ntimestamp = Math.floor(timestamp - (timestamp % 86400)).toFixed(1); // convert to midnight\nfor (let i = 0; i < 375; i++) {\n  heatMapData[timestamp] = Math.floor(Math.random() * 6) + 1;\n  timestamp = Math.floor(timestamp - 86400).toFixed(1);\n}\n\nconst basicConfig = {\n  height: 250,\n  format_tooltip_x: d => (d + '').toUpperCase(),\n  format_tooltip_y: d => d + ' pts',\n};\nconst barChart = {\n  header: 'Bar Chart',\n  title: '',\n  parent: '#frappeBarChart',\n  parentId: 'frappeBarChart',\n  type: 'bar',\n  data: basicData,\n  ...basicConfig,\n};\nconst lineChart = {\n  header: 'Line Chart',\n  title: '',\n  parent: '#frappeLineChart',\n  parentId: 'frappeLineChart',\n  type: 'line',\n  data: basicData,\n  show_dots: 0,\n  heatline: 1,\n  region_fill: 1,\n  ...basicConfig,\n};\n\nconst scatterChart = {\n  header: 'Scatter Chart',\n  title: '',\n  parent: '#frappeScatterChart',\n  parentId: 'frappeScatterChart',\n  type: 'scatter',\n  data: basicData,\n  ...basicConfig,\n};\n\nconst pieChart = {\n  header: 'Pie Chart',\n  title: '',\n  parent: '#frappePieChart',\n  parentId: 'frappePieChart',\n  type: 'pie',\n  data: basicData,\n  ...basicConfig,\n};\n\nconst percentageChart = {\n  header: 'Percentage Chart',\n  title: '',\n  parent: '#frappePercentageChart',\n  parentId: 'frappePercentageChart',\n  type: 'percentage',\n  data: basicData,\n  ...basicConfig,\n};\nconst heatMap = {\n  header: 'Heatmap Chart',\n  title: '',\n  parent: '#heatmap',\n  parentId: 'heatmap',\n  type: 'heatmap',\n  height: 115,\n  data: heatMapData, //heatMapData,\n  discrete_domains: 1, // default: 0\n  start: heatMapStart,\n};\n\nconst heatMapHalloween = {\n  header: 'Heatmap Chart Halloween',\n  title: '',\n  parent: '#heatmapHalloween',\n  parentId: 'heatmapHalloween',\n  type: 'heatmap',\n  height: 115,\n  data: heatMapData, //heatMapData,\n  discrete_domains: 1, // default: 0\n  start: heatMapStart,\n  legend_colors: ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'],\n};\n\nconst updatedChart = {\n  header: 'Updateable Chart',\n  title: '',\n  parent: '#frappeupdatedChart',\n  parentId: 'frappeupdatedChart',\n  data: basicData,\n  type: 'line',\n  show_dots: 0,\n  heatline: 1,\n};\n\nexport {\n  barChart,\n  lineChart,\n  scatterChart,\n  pieChart,\n  percentageChart,\n  heatMap,\n  heatMapHalloween,\n  updatedChart,\n  basicData,\n};\n"]},"metadata":{},"sourceType":"module"}