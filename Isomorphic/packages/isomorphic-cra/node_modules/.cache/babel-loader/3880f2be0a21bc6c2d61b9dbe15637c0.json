{"ast":null,"code":"var _require = require('preact'),\n    h = _require.h;\n\nvar prettyBytes = require('@uppy/utils/lib/prettyBytes');\n\nvar truncateString = require('../../../utils/truncateString');\n\nvar renderAcquirerIcon = function renderAcquirerIcon(acquirer, props) {\n  return h(\"span\", {\n    title: props.i18n('fileSource', {\n      name: acquirer.name\n    })\n  }, acquirer.icon());\n};\n\nvar renderFileSource = function renderFileSource(props) {\n  return props.file.source && props.file.source !== props.id && h(\"div\", {\n    class: \"uppy-DashboardItem-sourceIcon\"\n  }, props.acquirers.map(function (acquirer) {\n    if (acquirer.id === props.file.source) {\n      return renderAcquirerIcon(acquirer, props);\n    }\n  }));\n};\n\nvar renderFileName = function renderFileName(props) {\n  // Take up at most 2 lines on any screen\n  var maxNameLength; // For very small mobile screens\n\n  if (props.containerWidth <= 352) {\n    maxNameLength = 35; // For regular mobile screens\n  } else if (props.containerWidth <= 576) {\n    maxNameLength = 60; // For desktops\n  } else {\n    maxNameLength = 30;\n  }\n\n  return h(\"div\", {\n    class: \"uppy-DashboardItem-name\",\n    title: props.file.meta.name\n  }, truncateString(props.file.meta.name, maxNameLength));\n};\n\nvar renderFileSize = function renderFileSize(props) {\n  return props.file.data.size && h(\"div\", {\n    class: \"uppy-DashboardItem-statusSize\"\n  }, prettyBytes(props.file.data.size));\n};\n\nmodule.exports = function FileInfo(props) {\n  return h(\"div\", {\n    class: \"uppy-DashboardItem-fileInfo\",\n    \"data-uppy-file-source\": props.file.source\n  }, renderFileName(props), h(\"div\", {\n    class: \"uppy-DashboardItem-status\"\n  }, renderFileSize(props), renderFileSource(props)));\n};","map":null,"metadata":{},"sourceType":"script"}