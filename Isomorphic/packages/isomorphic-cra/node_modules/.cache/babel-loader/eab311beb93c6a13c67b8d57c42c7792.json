{"ast":null,"code":"import _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Ecommerce/Algolia/DesktopView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { InstantSearch } from 'react-instantsearch/dom';\nimport { Footer, Sidebar } from '@iso/components/Algolia/Algolia';\nimport EmptyComponent from '@iso/components/EmptyComponent';\nimport Content from './Content';\nimport AlgoliaSearchConfig from '@iso/config/algolia.config';\nimport { setUrl, getInitData } from '@iso/lib/helpers/url_sync';\nimport './InstantSearch.css';\nimport AlgoliaSearchPageWrapper from './Algolia.styles';\nexport default function (props) {\n  const _React$useState = React.useState(getInitData()),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        searchState = _React$useState2[0],\n        setSearchState = _React$useState2[1];\n\n  const setVoice = query => {\n    setSearchState(_objectSpread({}, searchState, {\n      page: '1',\n      query\n    }));\n    setUrl(searchState);\n  };\n\n  const searchInfo = _objectSpread({}, AlgoliaSearchConfig, {\n    indexName: 'default_search',\n    searchState: searchState,\n    urlSync: true,\n    onSearchStateChange: searchState => {\n      setSearchState(searchState);\n      setUrl(searchState);\n    }\n  });\n\n  return React.createElement(AlgoliaSearchPageWrapper, {\n    className: \"isoAlgoliaSearchPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, AlgoliaSearchConfig.appId ? React.createElement(InstantSearch, Object.assign({}, searchInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"isoAlgoliaMainWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    setVoice: setVoice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Content, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })) : React.createElement(EmptyComponent, {\n    value: \"Please include algolia appId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Ecommerce/Algolia/DesktopView.js"],"names":["React","InstantSearch","Footer","Sidebar","EmptyComponent","Content","AlgoliaSearchConfig","setUrl","getInitData","AlgoliaSearchPageWrapper","props","useState","searchState","setSearchState","setVoice","query","page","searchInfo","indexName","urlSync","onSearchStateChange","appId"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,iCAAhC;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,2BAApC;AACA,OAAO,qBAAP;AACA,OAAOC,wBAAP,MAAqC,kBAArC;AAEA,eAAe,UAASC,KAAT,EAAgB;AAAA,0BACSV,KAAK,CAACW,QAAN,CAAeH,WAAW,EAA1B,CADT;AAAA;AAAA,QACtBI,WADsB;AAAA,QACTC,cADS;;AAG7B,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBF,IAAAA,cAAc,mBACTD,WADS;AAEZI,MAAAA,IAAI,EAAE,GAFM;AAGZD,MAAAA;AAHY,OAAd;AAKAR,IAAAA,MAAM,CAACK,WAAD,CAAN;AACD,GAPD;;AAQA,QAAMK,UAAU,qBACXX,mBADW;AAEdY,IAAAA,SAAS,EAAE,gBAFG;AAGdN,IAAAA,WAAW,EAAEA,WAHC;AAIdO,IAAAA,OAAO,EAAE,IAJK;AAKdC,IAAAA,mBAAmB,EAAER,WAAW,IAAI;AAClCC,MAAAA,cAAc,CAACD,WAAD,CAAd;AACAL,MAAAA,MAAM,CAACK,WAAD,CAAN;AACD;AARa,IAAhB;;AAUA,SACE,oBAAC,wBAAD;AAA0B,IAAA,SAAS,EAAC,sBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,mBAAmB,CAACe,KAApB,GACC,oBAAC,aAAD,oBAAmBJ,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEH,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD,oBAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD,GASC,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,8BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD","sourcesContent":["import React from 'react';\nimport { InstantSearch } from 'react-instantsearch/dom';\nimport { Footer, Sidebar } from '@iso/components/Algolia/Algolia';\nimport EmptyComponent from '@iso/components/EmptyComponent';\nimport Content from './Content';\nimport AlgoliaSearchConfig from '@iso/config/algolia.config';\nimport { setUrl, getInitData } from '@iso/lib/helpers/url_sync';\nimport './InstantSearch.css';\nimport AlgoliaSearchPageWrapper from './Algolia.styles';\n\nexport default function(props) {\n  const [searchState, setSearchState] = React.useState(getInitData());\n\n  const setVoice = query => {\n    setSearchState({\n      ...searchState,\n      page: '1',\n      query,\n    });\n    setUrl(searchState);\n  };\n  const searchInfo = {\n    ...AlgoliaSearchConfig,\n    indexName: 'default_search',\n    searchState: searchState,\n    urlSync: true,\n    onSearchStateChange: searchState => {\n      setSearchState(searchState);\n      setUrl(searchState);\n    },\n  };\n  return (\n    <AlgoliaSearchPageWrapper className=\"isoAlgoliaSearchPage\">\n      {AlgoliaSearchConfig.appId ? (\n        <InstantSearch {...searchInfo}>\n          <div className=\"isoAlgoliaMainWrapper\">\n            <Sidebar setVoice={setVoice} />\n            <Content {...props} />\n          </div>\n          <Footer />\n        </InstantSearch>\n      ) : (\n        <EmptyComponent value=\"Please include algolia appId\" />\n      )}\n    </AlgoliaSearchPageWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}