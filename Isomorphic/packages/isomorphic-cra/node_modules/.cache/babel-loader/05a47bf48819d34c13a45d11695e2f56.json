{"ast":null,"code":"import \"antd/es/config-provider/style/css\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/packages/isomorphic-cra/src/AppProvider.js\";\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '@iso/config/theme/theme.config';\nimport AppLocale from '@iso/config/translation';\nexport default function AppProvider({\n  children\n}) {\n  const _useSelector = useSelector(state => state.LanguageSwitcher.language),\n        locale = _useSelector.locale;\n\n  const _useSelector2 = useSelector(state => state.ThemeSwitcher.changeThemes),\n        themeName = _useSelector2.themeName;\n\n  const currentAppLocale = AppLocale[locale];\n  return React.createElement(_ConfigProvider, {\n    locale: currentAppLocale.antd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(ThemeProvider, {\n    theme: themes[themeName],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, children)));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/packages/isomorphic-cra/src/AppProvider.js"],"names":["React","IntlProvider","useSelector","ThemeProvider","themes","AppLocale","AppProvider","children","state","LanguageSwitcher","language","locale","ThemeSwitcher","changeThemes","themeName","currentAppLocale","antd","messages"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAAA,uBAC7BL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,gBAAN,CAAuBC,QAAjC,CADkB;AAAA,QACxCC,MADwC,gBACxCA,MADwC;;AAAA,wBAE1BT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACI,aAAN,CAAoBC,YAA9B,CAFe;AAAA,QAExCC,SAFwC,iBAExCA,SAFwC;;AAGhD,QAAMC,gBAAgB,GAAGV,SAAS,CAACM,MAAD,CAAlC;AACA,SACE;AAAgB,IAAA,MAAM,EAAEI,gBAAgB,CAACC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAED,gBAAgB,CAACJ,MAD3B;AAEE,IAAA,QAAQ,EAAEI,gBAAgB,CAACE,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEb,MAAM,CAACU,SAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CP,QAA1C,CAJF,CADF,CADF;AAUD","sourcesContent":["import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '@iso/config/theme/theme.config';\nimport AppLocale from '@iso/config/translation';\n\nexport default function AppProvider({ children }) {\n  const { locale } = useSelector(state => state.LanguageSwitcher.language);\n  const { themeName } = useSelector(state => state.ThemeSwitcher.changeThemes);\n  const currentAppLocale = AppLocale[locale];\n  return (\n    <ConfigProvider locale={currentAppLocale.antd}>\n      <IntlProvider\n        locale={currentAppLocale.locale}\n        messages={currentAppLocale.messages}\n      >\n        <ThemeProvider theme={themes[themeName]}>{children}</ThemeProvider>\n      </IntlProvider>\n    </ConfigProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}