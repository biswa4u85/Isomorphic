{"ast":null,"code":"import \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Forms/FormsWithValidation/FormValidation.js\";\nimport React from 'react';\nimport Form from '@iso/components/uielements/form';\nimport Checkbox from '@iso/components/uielements/checkbox';\nimport Button from '@iso/components/uielements/button';\nimport Notification from '@iso/components/Notification';\nconst FormItem = Form.Item;\n\nfunction FormWIthSubmissionButton(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        confirmDirty = _React$useState2[0],\n        setConfirmDirty = _React$useState2[1];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        Notification('success', 'Received values of form', JSON.stringify(values));\n      }\n    });\n  };\n\n  const handleConfirmBlur = e => {\n    const value = e.target.value;\n    setConfirmDirty(confirmDirty => confirmDirty || !!value);\n  };\n\n  const checkPassword = (rule, value, callback) => {\n    const form = props.form;\n\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  const checkConfirm = (rule, value, callback) => {\n    const form = props.form;\n\n    if (value && confirmDirty) {\n      form.validateFields(['confirm'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  const getFieldDecorator = props.form.getFieldDecorator;\n  const formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 6\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 14\n      }\n    }\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 14,\n        offset: 6\n      }\n    }\n  };\n  return React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n    label: \"E-mail\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }]\n  })(React.createElement(_Input, {\n    name: \"email\",\n    id: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n    label: \"Password\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      validator: checkConfirm\n    }]\n  })(React.createElement(_Input, {\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n    label: \"Confirm Password\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), getFieldDecorator('confirm', {\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, {\n      validator: checkPassword\n    }]\n  })(React.createElement(_Input, {\n    type: \"password\",\n    onBlur: handleConfirmBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n    style: {\n      marginBottom: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), getFieldDecorator('agreement', {\n    valuePropName: 'checked',\n    rules: [{\n      message: 'Please input your E-mail!',\n      required: true\n    }]\n  })(React.createElement(Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"I have read the \", React.createElement(\"a\", {\n    href: \"# \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"agreement\")))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Register\")));\n}\n\nconst WrappedFormWIthSubmissionButton = Form.create()(FormWIthSubmissionButton);\nexport default WrappedFormWIthSubmissionButton;","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Forms/FormsWithValidation/FormValidation.js"],"names":["React","Form","Checkbox","Button","Notification","FormItem","Item","FormWIthSubmissionButton","props","useState","confirmDirty","setConfirmDirty","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","JSON","stringify","handleConfirmBlur","value","target","checkPassword","rule","callback","getFieldValue","checkConfirm","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","type","message","required","validator","marginBottom","valuePropName","WrappedFormWIthSubmissionButton","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input } from 'antd';\nimport Form from '@iso/components/uielements/form';\nimport Checkbox from '@iso/components/uielements/checkbox';\nimport Button from '@iso/components/uielements/button';\nimport Notification from '@iso/components/Notification';\nconst FormItem = Form.Item;\n\nfunction FormWIthSubmissionButton(props) {\n  const [confirmDirty, setConfirmDirty] = React.useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        Notification(\n          'success',\n          'Received values of form',\n          JSON.stringify(values)\n        );\n      }\n    });\n  };\n  const handleConfirmBlur = e => {\n    const value = e.target.value;\n    setConfirmDirty(confirmDirty => confirmDirty || !!value);\n  };\n  const checkPassword = (rule, value, callback) => {\n    const form = props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n  const checkConfirm = (rule, value, callback) => {\n    const form = props.form;\n    if (value && confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  const { getFieldDecorator } = props.form;\n\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 6 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 14 },\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 14,\n        offset: 6,\n      },\n    },\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormItem {...formItemLayout} label=\"E-mail\" hasFeedback>\n        {getFieldDecorator('email', {\n          rules: [\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            },\n            {\n              required: true,\n              message: 'Please input your E-mail!',\n            },\n          ],\n        })(<Input name=\"email\" id=\"email\" />)}\n      </FormItem>\n      <FormItem {...formItemLayout} label=\"Password\" hasFeedback>\n        {getFieldDecorator('password', {\n          rules: [\n            {\n              required: true,\n              message: 'Please input your password!',\n            },\n            {\n              validator: checkConfirm,\n            },\n          ],\n        })(<Input type=\"password\" />)}\n      </FormItem>\n      <FormItem {...formItemLayout} label=\"Confirm Password\" hasFeedback>\n        {getFieldDecorator('confirm', {\n          rules: [\n            {\n              required: true,\n              message: 'Please confirm your password!',\n            },\n            {\n              validator: checkPassword,\n            },\n          ],\n        })(<Input type=\"password\" onBlur={handleConfirmBlur} />)}\n      </FormItem>\n      <FormItem {...tailFormItemLayout} style={{ marginBottom: 8 }}>\n        {getFieldDecorator('agreement', {\n          valuePropName: 'checked',\n          rules: [\n            {\n              message: 'Please input your E-mail!',\n              required: true,\n            },\n          ],\n        })(\n          <Checkbox>\n            I have read the <a href=\"# \">agreement</a>\n          </Checkbox>\n        )}\n      </FormItem>\n      <FormItem {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </FormItem>\n    </Form>\n  );\n}\n\nconst WrappedFormWIthSubmissionButton = Form.create()(FormWIthSubmissionButton);\nexport default WrappedFormWIthSubmissionButton;\n"]},"metadata":{},"sourceType":"module"}