{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar ProgressBarPlugin = require('@uppy/progress-bar');\n\nvar uppyPropType = require('./propTypes').uppy;\n\nvar h = React.createElement;\n/**\n * React component that renders a progress bar at the top of the page.\n */\n\nvar ProgressBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ProgressBar, _React$Component);\n\n  function ProgressBar() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ProgressBar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.installPlugin();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps);\n      this.installPlugin();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.uninstallPlugin();\n  };\n\n  _proto.installPlugin = function installPlugin() {\n    var uppy = this.props.uppy;\n\n    var options = _extends({\n      id: 'react:ProgressBar'\n    }, this.props, {\n      target: this.container\n    });\n\n    delete options.uppy;\n    uppy.use(ProgressBarPlugin, options);\n    this.plugin = uppy.getPlugin(options.id);\n  };\n\n  _proto.uninstallPlugin = function uninstallPlugin(props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    var uppy = props.uppy;\n    uppy.removePlugin(this.plugin);\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return h('div', {\n      ref: function ref(container) {\n        _this.container = container;\n      }\n    });\n  };\n\n  return ProgressBar;\n}(React.Component);\n\nProgressBar.propTypes = {\n  uppy: uppyPropType,\n  fixed: PropTypes.bool,\n  hideAfterFinish: PropTypes.bool\n};\nProgressBar.defaultProps = {};\nmodule.exports = ProgressBar;","map":null,"metadata":{},"sourceType":"script"}