{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/AdvancedUI/ReactDates/ReactDates.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Tabs, { TabPane } from '@iso/components/uielements/tabs';\nimport Switch from '@iso/components/uielements/switch';\nimport Form from '@iso/components/uielements/form';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport { DateRangePicker, SingleDatePicker } from '@iso/components/uielements/reactDates';\nimport basicStyle from '@iso/assets/styles/constants';\nimport configs from './config';\nimport { ReactDatesStyleWrapper, ReactDatesWrapper } from './ReactDates.styles';\nconst FormItem = Form.Item;\n\nclass ReactDates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderDatePicker = this.renderDatePicker.bind(this);\n    this.toggleOptions = this.toggleOptions.bind(this);\n    this.state = {\n      isRangePicker: false,\n      configsValue: configs,\n      singleFocused: true,\n      singleResult: null,\n      focusedInput: 'startDate',\n      startDate: null,\n      startDateId: 'your_unique_id',\n      endDate: null,\n      endDateId: 'your_unique_id'\n    };\n  }\n\n  toggleOptions() {\n    const _this$state = this.state,\n          isRangePicker = _this$state.isRangePicker,\n          configsValue = _this$state.configsValue;\n    const options = isRangePicker === true ? configsValue[1].options : configsValue[0].options;\n    return options.map((option, index) => {\n      if (this.props.view === 'MobileView' && option.id === 'numberOfMonths') {\n        return '';\n      }\n\n      const checked = option.value === option.trueValue;\n\n      const onChange = () => {\n        if (isRangePicker) {\n          configsValue[1].options[index].value = checked ? option.falseValue : option.trueValue;\n        } else {\n          configsValue[0].options[index].value = checked ? option.falseValue : option.trueValue;\n        }\n\n        this.setState(configsValue);\n      };\n\n      return React.createElement(FormItem, {\n        label: option.title,\n        key: option.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        checked: checked,\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    });\n  }\n\n  renderDatePicker() {\n    const _this$state2 = this.state,\n          isRangePicker = _this$state2.isRangePicker,\n          startDate = _this$state2.startDate,\n          startDateId = _this$state2.startDateId,\n          endDate = _this$state2.endDate,\n          endDateId = _this$state2.endDateId,\n          focusedInput = _this$state2.focusedInput,\n          singleResult = _this$state2.singleResult,\n          singleFocused = _this$state2.singleFocused,\n          configsValue = _this$state2.configsValue;\n    let options;\n\n    if (isRangePicker) {\n      options = {\n        startDate,\n        startDateId,\n        endDate,\n        endDateId,\n        onDatesChange: ({\n          startDate,\n          endDate\n        }) => this.setState({\n          startDate,\n          endDate\n        }),\n        focusedInput,\n        onFocusChange: focusedInput => {\n          this.setState({\n            focusedInput\n          });\n        }\n      };\n    } else {\n      options = {\n        date: singleResult,\n        onDateChange: singleResult => this.setState({\n          singleResult\n        }),\n        focused: singleFocused,\n        onFocusChange: ({\n          focused\n        }) => this.setState({\n          singleFocused: focused\n        })\n      };\n    }\n\n    const renderOptions = isRangePicker ? configsValue[1].options : configsValue[0].options;\n    renderOptions.forEach(option => {\n      options[option.id] = option.value;\n    });\n\n    if (this.props.view === 'MobileView') {\n      options.numberOfMonths = 1;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"isoReactDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, !isRangePicker ? React.createElement(SingleDatePicker, Object.assign({}, options, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })) : React.createElement(DateRangePicker, Object.assign({\n      isOutsideRange: () => false\n    }, options, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    const rowStyle = basicStyle.rowStyle,\n          colStyle = basicStyle.colStyle,\n          gutter = basicStyle.gutter;\n    return React.createElement(LayoutWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"React Dates\"), React.createElement(_Row, {\n      style: rowStyle,\n      gutter: gutter,\n      justify: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      md: 24,\n      sm: 24,\n      xs: 24,\n      style: colStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(ContentHolder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      onChange: () => {\n        this.setState({\n          isRangePicker: !this.state.isRangePicker\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, configs.map(config => React.createElement(TabPane, {\n      tab: config.title,\n      key: config.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(ReactDatesStyleWrapper, {\n      className: \"isoReactDateConfig\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.toggleOptions()), React.createElement(ReactDatesWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.renderDatePicker()))))));\n  }\n\n}\n\nexport default connect(state => ({\n  view: state.App.view\n}))(ReactDates);","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/AdvancedUI/ReactDates/ReactDates.js"],"names":["React","connect","Tabs","TabPane","Switch","Form","PageHeader","Box","LayoutWrapper","ContentHolder","DateRangePicker","SingleDatePicker","basicStyle","configs","ReactDatesStyleWrapper","ReactDatesWrapper","FormItem","Item","ReactDates","Component","constructor","props","renderDatePicker","bind","toggleOptions","state","isRangePicker","configsValue","singleFocused","singleResult","focusedInput","startDate","startDateId","endDate","endDateId","options","map","option","index","view","id","checked","value","trueValue","onChange","falseValue","setState","title","onDatesChange","onFocusChange","date","onDateChange","focused","renderOptions","forEach","numberOfMonths","render","rowStyle","colStyle","gutter","config","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport Tabs, { TabPane } from '@iso/components/uielements/tabs';\nimport Switch from '@iso/components/uielements/switch';\nimport Form from '@iso/components/uielements/form';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport {\n  DateRangePicker,\n  SingleDatePicker,\n} from '@iso/components/uielements/reactDates';\nimport basicStyle from '@iso/assets/styles/constants';\nimport configs from './config';\nimport { ReactDatesStyleWrapper, ReactDatesWrapper } from './ReactDates.styles';\n\nconst FormItem = Form.Item;\nclass ReactDates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderDatePicker = this.renderDatePicker.bind(this);\n    this.toggleOptions = this.toggleOptions.bind(this);\n    this.state = {\n      isRangePicker: false,\n      configsValue: configs,\n      singleFocused: true,\n      singleResult: null,\n      focusedInput: 'startDate',\n      startDate: null,\n      startDateId: 'your_unique_id',\n      endDate: null,\n      endDateId: 'your_unique_id',\n    };\n  }\n  toggleOptions() {\n    const { isRangePicker, configsValue } = this.state;\n    const options =\n      isRangePicker === true\n        ? configsValue[1].options\n        : configsValue[0].options;\n    return options.map((option, index) => {\n      if (this.props.view === 'MobileView' && option.id === 'numberOfMonths') {\n        return '';\n      }\n      const checked = option.value === option.trueValue;\n      const onChange = () => {\n        if (isRangePicker) {\n          configsValue[1].options[index].value = checked\n            ? option.falseValue\n            : option.trueValue;\n        } else {\n          configsValue[0].options[index].value = checked\n            ? option.falseValue\n            : option.trueValue;\n        }\n        this.setState(configsValue);\n      };\n      return (\n        <FormItem label={option.title} key={option.id}>\n          <Switch checked={checked} onChange={onChange} />\n        </FormItem>\n      );\n    });\n  }\n  renderDatePicker() {\n    const {\n      isRangePicker,\n      startDate,\n      startDateId,\n      endDate,\n      endDateId,\n      focusedInput,\n      singleResult,\n      singleFocused,\n      configsValue,\n    } = this.state;\n    let options;\n    if (isRangePicker) {\n      options = {\n        startDate,\n        startDateId,\n        endDate,\n        endDateId,\n        onDatesChange: ({ startDate, endDate }) =>\n          this.setState({ startDate, endDate }),\n        focusedInput,\n        onFocusChange: focusedInput => {\n          this.setState({ focusedInput });\n        },\n      };\n    } else {\n      options = {\n        date: singleResult,\n        onDateChange: singleResult => this.setState({ singleResult }),\n        focused: singleFocused,\n        onFocusChange: ({ focused }) =>\n          this.setState({ singleFocused: focused }),\n      };\n    }\n    const renderOptions = isRangePicker\n      ? configsValue[1].options\n      : configsValue[0].options;\n    renderOptions.forEach(option => {\n      options[option.id] = option.value;\n    });\n    if (this.props.view === 'MobileView') {\n      options.numberOfMonths = 1;\n    }\n    return (\n      <div className=\"isoReactDate\">\n        {!isRangePicker ? (\n          <SingleDatePicker {...options} />\n        ) : (\n          <DateRangePicker isOutsideRange={() => false} {...options} />\n        )}\n      </div>\n    );\n  }\n  render() {\n    const { rowStyle, colStyle, gutter } = basicStyle;\n    return (\n      <LayoutWrapper>\n        <PageHeader>React Dates</PageHeader>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={24} sm={24} xs={24} style={colStyle}>\n            <Box>\n              <ContentHolder>\n                <Tabs\n                  onChange={() => {\n                    this.setState({\n                      isRangePicker: !this.state.isRangePicker,\n                    });\n                  }}\n                >\n                  {configs.map(config => (\n                    <TabPane tab={config.title} key={config.id} />\n                  ))}\n                </Tabs>\n                <ReactDatesStyleWrapper className=\"isoReactDateConfig\">\n                  {this.toggleOptions()}\n                </ReactDatesStyleWrapper>\n                <ReactDatesWrapper>{this.renderDatePicker()}</ReactDatesWrapper>\n              </ContentHolder>\n            </Box>\n          </Col>\n        </Row>\n      </LayoutWrapper>\n    );\n  }\n}\nexport default connect(state => ({\n  view: state.App.view,\n}))(ReactDates);\n"]},"metadata":{},"sourceType":"module"}