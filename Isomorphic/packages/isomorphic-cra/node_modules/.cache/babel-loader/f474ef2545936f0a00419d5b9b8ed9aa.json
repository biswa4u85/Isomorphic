{"ast":null,"code":"import _objectWithoutProperties from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/packages/isomorphic-cra/src/containers/Sidebar/SidebarMenu.js\";\nimport React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport Menu from '@iso/components/uielements/menu';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nconst SubMenu = Menu.SubMenu;\n\nconst stripTrailingSlash = str => {\n  if (str.substr(-1) === '/') {\n    return str.substr(0, str.length - 1);\n  }\n\n  return str;\n};\n\nexport default React.memo(function SidebarMenu(_ref) {\n  let singleOption = _ref.singleOption,\n      submenuStyle = _ref.submenuStyle,\n      submenuColor = _ref.submenuColor,\n      rest = _objectWithoutProperties(_ref, [\"singleOption\", \"submenuStyle\", \"submenuColor\"]);\n\n  let match = useRouteMatch();\n  const key = singleOption.key,\n        label = singleOption.label,\n        leftIcon = singleOption.leftIcon,\n        children = singleOption.children;\n  const url = stripTrailingSlash(match.url);\n\n  if (children) {\n    return React.createElement(SubMenu, Object.assign({\n      key: key,\n      title: React.createElement(\"span\", {\n        className: \"isoMenuHolder\",\n        style: submenuColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: leftIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"nav-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })))\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), children.map(child => {\n      const linkTo = child.withoutDashboard ? \"/\".concat(child.key) : \"\".concat(url, \"/\").concat(child.key);\n      return React.createElement(Menu.Item, {\n        style: submenuStyle,\n        key: child.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: submenuColor,\n        to: linkTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: child.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }));\n  }\n\n  return React.createElement(Menu.Item, Object.assign({\n    key: key\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"\".concat(url, \"/\").concat(key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"isoMenuHolder\",\n    style: submenuColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: leftIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"nav-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))));\n});","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/packages/isomorphic-cra/src/containers/Sidebar/SidebarMenu.js"],"names":["React","Link","useRouteMatch","Menu","IntlMessages","SubMenu","stripTrailingSlash","str","substr","length","memo","SidebarMenu","singleOption","submenuStyle","submenuColor","rest","match","key","label","leftIcon","children","url","map","child","linkTo","withoutDashboard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport Menu from '@iso/components/uielements/menu';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nconst SubMenu = Menu.SubMenu;\n\nconst stripTrailingSlash = str => {\n  if (str.substr(-1) === '/') {\n    return str.substr(0, str.length - 1);\n  }\n  return str;\n};\nexport default React.memo(function SidebarMenu({\n  singleOption,\n  submenuStyle,\n  submenuColor,\n  ...rest\n}) {\n  let match = useRouteMatch();\n\n  const { key, label, leftIcon, children } = singleOption;\n  const url = stripTrailingSlash(match.url);\n\n  if (children) {\n    return (\n      <SubMenu\n        key={key}\n        title={\n          <span className=\"isoMenuHolder\" style={submenuColor}>\n            <i className={leftIcon} />\n            <span className=\"nav-text\">\n              <IntlMessages id={label} />\n            </span>\n          </span>\n        }\n        {...rest}\n      >\n        {children.map(child => {\n          const linkTo = child.withoutDashboard\n            ? `/${child.key}`\n            : `${url}/${child.key}`;\n          return (\n            <Menu.Item style={submenuStyle} key={child.key}>\n              <Link style={submenuColor} to={linkTo}>\n                <IntlMessages id={child.label} />\n              </Link>\n            </Menu.Item>\n          );\n        })}\n      </SubMenu>\n    );\n  }\n\n  return (\n    <Menu.Item key={key} {...rest}>\n      <Link to={`${url}/${key}`}>\n        <span className=\"isoMenuHolder\" style={submenuColor}>\n          <i className={leftIcon} />\n          <span className=\"nav-text\">\n            <IntlMessages id={label} />\n          </span>\n        </span>\n      </Link>\n    </Menu.Item>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}