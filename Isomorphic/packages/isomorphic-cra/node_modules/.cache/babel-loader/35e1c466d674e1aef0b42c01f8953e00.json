{"ast":null,"code":"var _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Algolia/VoiceRecognition.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport SpeechRecognition from 'react-speech-recognition';\nimport { VoiceSearchWrapper } from './AlgoliaComponent.style';\nconst propTypes = {\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n};\nconst options = {\n  autoStart: false\n};\n\nclass VoiceRecognition extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listening: false\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          transcript = _this$props.transcript,\n          resetTranscript = _this$props.resetTranscript,\n          browserSupportsSpeechRecognition = _this$props.browserSupportsSpeechRecognition,\n          startListening = _this$props.startListening,\n          stopListening = _this$props.stopListening,\n          setVoice = _this$props.setVoice;\n\n    if (!browserSupportsSpeechRecognition) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(VoiceSearchWrapper, {\n      className: \"isoVoiceSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, !this.state.listening ? React.createElement(\"div\", {\n      className: \"isoVoiceSearchStart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        startListening();\n        this.setState({\n          listening: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Start Speaking\")) : React.createElement(\"div\", {\n      className: \"isoVoiceSearchRunning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        setVoice(transcript);\n        resetTranscript();\n        stopListening();\n        this.setState({\n          listening: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, transcript)));\n  }\n\n}\n\nVoiceRecognition.propTypes = propTypes;\nexport default SpeechRecognition(options)(VoiceRecognition);","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Algolia/VoiceRecognition.js"],"names":["React","Component","PropTypes","SpeechRecognition","VoiceSearchWrapper","propTypes","transcript","string","resetTranscript","func","browserSupportsSpeechRecognition","bool","options","autoStart","VoiceRecognition","state","listening","render","props","startListening","stopListening","setVoice","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEJ,SAAS,CAACK,MADN;AAEhBC,EAAAA,eAAe,EAAEN,SAAS,CAACO,IAFX;AAGhBC,EAAAA,gCAAgC,EAAER,SAAS,CAACS;AAH5B,CAAlB;AAKA,MAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE;AADG,CAAhB;;AAGA,MAAMC,gBAAN,SAA+Bb,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCc,KADuC,GAC/B;AACNC,MAAAA,SAAS,EAAE;AADL,KAD+B;AAAA;;AAIvCC,EAAAA,MAAM,GAAG;AAAA,wBAQH,KAAKC,KARF;AAAA,UAELZ,UAFK,eAELA,UAFK;AAAA,UAGLE,eAHK,eAGLA,eAHK;AAAA,UAILE,gCAJK,eAILA,gCAJK;AAAA,UAKLS,cALK,eAKLA,cALK;AAAA,UAMLC,aANK,eAMLA,aANK;AAAA,UAOLC,QAPK,eAOLA,QAPK;;AASP,QAAI,CAACX,gCAAL,EAAuC;AACrC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE,oBAAC,kBAAD;AAAoB,MAAA,SAAS,EAAC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKK,KAAL,CAAWC,SAAZ,GACC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM;AACbG,QAAAA,cAAc;AACd,aAAKG,QAAL,CAAc;AAAEN,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CADD,GAWC;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM;AACbK,QAAAA,QAAQ,CAACf,UAAD,CAAR;AACAE,QAAAA,eAAe;AACfY,QAAAA,aAAa;AACb,aAAKE,QAAL,CAAc;AAAEN,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOV,UAAP,CAVF,CAZJ,CADF;AA4BD;;AA5CsC;;AA8CzCQ,gBAAgB,CAACT,SAAjB,GAA6BA,SAA7B;AACA,eAAeF,iBAAiB,CAACS,OAAD,CAAjB,CAA2BE,gBAA3B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport SpeechRecognition from 'react-speech-recognition';\nimport { VoiceSearchWrapper } from './AlgoliaComponent.style';\n\nconst propTypes = {\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool,\n};\nconst options = {\n  autoStart: false,\n};\nclass VoiceRecognition extends Component {\n  state = {\n    listening: false,\n  };\n  render() {\n    const {\n      transcript,\n      resetTranscript,\n      browserSupportsSpeechRecognition,\n      startListening,\n      stopListening,\n      setVoice,\n    } = this.props;\n    if (!browserSupportsSpeechRecognition) {\n      return <div />;\n    }\n    return (\n      <VoiceSearchWrapper className=\"isoVoiceSearch\">\n        {!this.state.listening ? (\n          <div className=\"isoVoiceSearchStart\">\n            <button\n              onClick={() => {\n                startListening();\n                this.setState({ listening: true });\n              }}\n            />\n            <span>Start Speaking</span>\n          </div>\n        ) : (\n          <div className=\"isoVoiceSearchRunning\">\n            <button\n              onClick={() => {\n                setVoice(transcript);\n                resetTranscript();\n                stopListening();\n                this.setState({ listening: false });\n              }}\n            />\n            {/* <span>Search</span> */}\n            <span>{transcript}</span>\n          </div>\n        )}\n      </VoiceSearchWrapper>\n    );\n  }\n}\nVoiceRecognition.propTypes = propTypes;\nexport default SpeechRecognition(options)(VoiceRecognition);\n"]},"metadata":{},"sourceType":"module"}