{"ast":null,"code":"import _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport throttle from 'lodash/throttle';\nconst events = new Set();\n\nconst onResize = () => events.forEach(fn => fn());\n\nconst useWindowSize = (options = {}) => {\n  const _options$throttleMs = options.throttleMs,\n        throttleMs = _options$throttleMs === void 0 ? 100 : _options$throttleMs;\n\n  const _React$useState = React.useState({\n    width: process.browser && window.innerWidth,\n    height: process.browser && window.innerHeight\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        size = _React$useState2[0],\n        setSize = _React$useState2[1];\n\n  const handle = throttle(() => {\n    setSize({\n      width: process.browser && window.innerWidth,\n      height: process.browser && window.innerHeight\n    });\n  }, throttleMs);\n  React.useEffect(() => {\n    if (events.size === 0) {\n      window.addEventListener('resize', onResize, true);\n    }\n\n    events.add(handle);\n    return () => {\n      events.delete(handle);\n\n      if (events.size === 0) {\n        window.removeEventListener('resize', onResize, true);\n      }\n    };\n  }, [handle]);\n  return size;\n};\n\nexport default useWindowSize;","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/library/hooks/useWindowSize.js"],"names":["React","throttle","events","Set","onResize","forEach","fn","useWindowSize","options","throttleMs","useState","width","process","browser","window","innerWidth","height","innerHeight","size","setSize","handle","useEffect","addEventListener","add","delete","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,MAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AACA,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,OAAP,CAAeC,EAAE,IAAIA,EAAE,EAAvB,CAAvB;;AAEA,MAAMC,aAAa,GAAG,CAACC,OAAO,GAAG,EAAX,KAAkB;AAAA,8BACTA,OADS,CAC9BC,UAD8B;AAAA,QAC9BA,UAD8B,oCACjB,GADiB;;AAAA,0BAEdT,KAAK,CAACU,QAAN,CAAe;AACrCC,IAAAA,KAAK,EAAEC,OAAO,CAACC,OAAR,IAAmBC,MAAM,CAACC,UADI;AAErCC,IAAAA,MAAM,EAAEJ,OAAO,CAACC,OAAR,IAAmBC,MAAM,CAACG;AAFG,GAAf,CAFc;AAAA;AAAA,QAE/BC,IAF+B;AAAA,QAEzBC,OAFyB;;AAOtC,QAAMC,MAAM,GAAGnB,QAAQ,CAAC,MAAM;AAC5BkB,IAAAA,OAAO,CAAC;AACNR,MAAAA,KAAK,EAAEC,OAAO,CAACC,OAAR,IAAmBC,MAAM,CAACC,UAD3B;AAENC,MAAAA,MAAM,EAAEJ,OAAO,CAACC,OAAR,IAAmBC,MAAM,CAACG;AAF5B,KAAD,CAAP;AAID,GALsB,EAKpBR,UALoB,CAAvB;AAOAT,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB,QAAInB,MAAM,CAACgB,IAAP,KAAgB,CAApB,EAAuB;AACrBJ,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkClB,QAAlC,EAA4C,IAA5C;AACD;;AAEDF,IAAAA,MAAM,CAACqB,GAAP,CAAWH,MAAX;AAEA,WAAO,MAAM;AACXlB,MAAAA,MAAM,CAACsB,MAAP,CAAcJ,MAAd;;AAEA,UAAIlB,MAAM,CAACgB,IAAP,KAAgB,CAApB,EAAuB;AACrBJ,QAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCrB,QAArC,EAA+C,IAA/C;AACD;AACF,KAND;AAOD,GAdD,EAcG,CAACgB,MAAD,CAdH;AAgBA,SAAOF,IAAP;AACD,CA/BD;;AAiCA,eAAeX,aAAf","sourcesContent":["import React from 'react';\nimport throttle from 'lodash/throttle';\nconst events = new Set();\nconst onResize = () => events.forEach(fn => fn());\n\nconst useWindowSize = (options = {}) => {\n  const { throttleMs = 100 } = options;\n  const [size, setSize] = React.useState({\n    width: process.browser && window.innerWidth,\n    height: process.browser && window.innerHeight,\n  });\n\n  const handle = throttle(() => {\n    setSize({\n      width: process.browser && window.innerWidth,\n      height: process.browser && window.innerHeight,\n    });\n  }, throttleMs);\n\n  React.useEffect(() => {\n    if (events.size === 0) {\n      window.addEventListener('resize', onResize, true);\n    }\n\n    events.add(handle);\n\n    return () => {\n      events.delete(handle);\n\n      if (events.size === 0) {\n        window.removeEventListener('resize', onResize, true);\n      }\n    };\n  }, [handle]);\n\n  return size;\n};\n\nexport default useWindowSize;\n"]},"metadata":{},"sourceType":"module"}