{"ast":null,"code":"var _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Algolia/RangeSlider.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connectRange } from 'react-instantsearch/connectors';\nimport 'rheostat/initialize';\nimport 'rheostat/css/rheostat.css';\nimport Rheostat from 'rheostat';\n\nclass Range extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentValues: {\n        min: this.props.min,\n        max: this.props.max\n      }\n    };\n\n    this.onValuesUpdated = sliderState => {\n      this.setState({\n        currentValues: {\n          min: sliderState.values[0],\n          max: sliderState.values[1]\n        }\n      });\n    };\n\n    this.onChange = sliderState => {\n      if (this.props.currentRefinement.min !== sliderState.values[0] || this.props.currentRefinement.max !== sliderState.values[1]) {\n        this.props.refine({\n          min: sliderState.values[0],\n          max: sliderState.values[1]\n        });\n      }\n    };\n  }\n\n  componentWillReceiveProps(sliderState) {\n    if (sliderState.canRefine) {\n      this.setState({\n        currentValues: {\n          min: sliderState.currentRefinement.min,\n          max: sliderState.currentRefinement.max\n        }\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          min = _this$props.min,\n          max = _this$props.max,\n          currentRefinement = _this$props.currentRefinement;\n    const currentValues = this.state.currentValues;\n    return min !== max ? React.createElement(\"div\", {\n      className: \"isoAlRangeSlider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"isoAlRangeNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, currentValues.min), \" -\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, currentValues.max)), React.createElement(Rheostat, {\n      min: min,\n      max: max,\n      values: [currentRefinement.min, currentRefinement.max],\n      onChange: this.onChange,\n      onValuesUpdated: this.onValuesUpdated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })) : null;\n  }\n\n}\n\nRange.propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  currentRefinement: PropTypes.object,\n  refine: PropTypes.func.isRequired,\n  canRefine: PropTypes.bool.isRequired\n};\nconst RangeSlider = connectRange(Range);\nexport default RangeSlider;","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Algolia/RangeSlider.js"],"names":["PropTypes","React","Component","connectRange","Rheostat","Range","state","currentValues","min","props","max","onValuesUpdated","sliderState","setState","values","onChange","currentRefinement","refine","componentWillReceiveProps","canRefine","render","propTypes","number","object","func","isRequired","bool","RangeSlider"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connectRange } from 'react-instantsearch/connectors';\nimport 'rheostat/initialize';\nimport 'rheostat/css/rheostat.css';\nimport Rheostat from 'rheostat';\n\nclass Range extends Component {\n  static propTypes = {\n    min: PropTypes.number,\n    max: PropTypes.number,\n    currentRefinement: PropTypes.object,\n    refine: PropTypes.func.isRequired,\n    canRefine: PropTypes.bool.isRequired,\n  };\n\n  state = { currentValues: { min: this.props.min, max: this.props.max } };\n\n  componentWillReceiveProps(sliderState) {\n    if (sliderState.canRefine) {\n      this.setState({\n        currentValues: {\n          min: sliderState.currentRefinement.min,\n          max: sliderState.currentRefinement.max,\n        },\n      });\n    }\n  }\n\n  onValuesUpdated = sliderState => {\n    this.setState({\n      currentValues: { min: sliderState.values[0], max: sliderState.values[1] },\n    });\n  };\n\n  onChange = sliderState => {\n    if (\n      this.props.currentRefinement.min !== sliderState.values[0] ||\n      this.props.currentRefinement.max !== sliderState.values[1]\n    ) {\n      this.props.refine({\n        min: sliderState.values[0],\n        max: sliderState.values[1],\n      });\n    }\n  };\n\n  render() {\n    const { min, max, currentRefinement } = this.props;\n    const { currentValues } = this.state;\n    return min !== max ? (\n      <div className=\"isoAlRangeSlider\">\n        <div className=\"isoAlRangeNumber\">\n          <span>{currentValues.min}</span> -<span>{currentValues.max}</span>\n        </div>\n        <Rheostat\n          min={min}\n          max={max}\n          values={[currentRefinement.min, currentRefinement.max]}\n          onChange={this.onChange}\n          onValuesUpdated={this.onValuesUpdated}\n        />\n      </div>\n    ) : null;\n  }\n}\n\nconst RangeSlider = connectRange(Range);\nexport default RangeSlider;\n"]},"metadata":{},"sourceType":"module"}