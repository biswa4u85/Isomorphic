{"ast":null,"code":"import \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Tables/EditableCell.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Input from '../uielements/input';\nexport default function (props) {\n  const _React$useState = React.useState({\n    value: props.value,\n    editable: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setState(_objectSpread({}, state, {\n      value\n    }));\n  };\n\n  const check = () => {\n    setState(_objectSpread({}, state, {\n      editable: false\n    }));\n\n    if (props.onChange) {\n      props.onChange(state.value, props.columnsKey, props.index);\n    }\n  };\n\n  const edit = () => {\n    setState(_objectSpread({}, state, {\n      editable: true\n    }));\n  };\n\n  const value = state.value,\n        editable = state.editable;\n  return React.createElement(\"div\", {\n    className: \"isoEditData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, editable ? React.createElement(\"div\", {\n    className: \"isoEditDataWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: value,\n    onChange: handleChange,\n    onPressEnter: check,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(_Icon, {\n    type: \"check\",\n    className: \"isoEditIcon\",\n    onClick: check,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })) : React.createElement(\"p\", {\n    className: \"isoDataWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, value || ' ', React.createElement(_Icon, {\n    type: \"edit\",\n    className: \"isoEditIcon\",\n    onClick: edit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Tables/EditableCell.js"],"names":["React","Input","props","useState","value","editable","state","setState","handleChange","event","target","check","onChange","columnsKey","index","edit"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAGA,eAAe,UAASC,KAAT,EAAgB;AAAA,0BACHF,KAAK,CAACG,QAAN,CAAe;AACvCC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAD0B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAf,CADG;AAAA;AAAA,QACtBC,KADsB;AAAA,QACfC,QADe;;AAK7B,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAML,KAAK,GAAGK,KAAK,CAACC,MAAN,CAAaN,KAA3B;AACAG,IAAAA,QAAQ,mBAAMD,KAAN;AAAaF,MAAAA;AAAb,OAAR;AACD,GAHD;;AAIA,QAAMO,KAAK,GAAG,MAAM;AAClBJ,IAAAA,QAAQ,mBAAMD,KAAN;AAAaD,MAAAA,QAAQ,EAAE;AAAvB,OAAR;;AACA,QAAIH,KAAK,CAACU,QAAV,EAAoB;AAClBV,MAAAA,KAAK,CAACU,QAAN,CAAeN,KAAK,CAACF,KAArB,EAA4BF,KAAK,CAACW,UAAlC,EAA8CX,KAAK,CAACY,KAApD;AACD;AACF,GALD;;AAMA,QAAMC,IAAI,GAAG,MAAM;AACjBR,IAAAA,QAAQ,mBAAMD,KAAN;AAAaD,MAAAA,QAAQ,EAAE;AAAvB,OAAR;AACD,GAFD;;AAf6B,QAkBrBD,KAlBqB,GAkBDE,KAlBC,CAkBrBF,KAlBqB;AAAA,QAkBdC,QAlBc,GAkBDC,KAlBC,CAkBdD,QAlBc;AAmB7B,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,GACP;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAqB,IAAA,QAAQ,EAAEI,YAA/B;AAA6C,IAAA,YAAY,EAAEG,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAA2C,IAAA,OAAO,EAAEA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADO,GAMP;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,IAAI,GADZ,EAEE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,aAA5B;AAA0C,IAAA,OAAO,EAAEW,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPJ,CADF;AAeD","sourcesContent":["import React from 'react';\nimport Input from '../uielements/input';\nimport { Icon } from 'antd';\n\nexport default function(props) {\n  const [state, setState] = React.useState({\n    value: props.value,\n    editable: false,\n  });\n  const handleChange = event => {\n    const value = event.target.value;\n    setState({ ...state, value });\n  };\n  const check = () => {\n    setState({ ...state, editable: false });\n    if (props.onChange) {\n      props.onChange(state.value, props.columnsKey, props.index);\n    }\n  };\n  const edit = () => {\n    setState({ ...state, editable: true });\n  };\n  const { value, editable } = state;\n  return (\n    <div className=\"isoEditData\">\n      {editable ? (\n        <div className=\"isoEditDataWrapper\">\n          <Input value={value} onChange={handleChange} onPressEnter={check} />\n          <Icon type=\"check\" className=\"isoEditIcon\" onClick={check} />\n        </div>\n      ) : (\n        <p className=\"isoDataWrapper\">\n          {value || ' '}\n          <Icon type=\"edit\" className=\"isoEditIcon\" onClick={edit} />\n        </p>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}