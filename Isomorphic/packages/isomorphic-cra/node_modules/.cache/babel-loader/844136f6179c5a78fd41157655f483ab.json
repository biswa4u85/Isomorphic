{"ast":null,"code":"import _objectWithoutProperties from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/ScrumBoard/Task/TaskList/TaskList.js\";\nimport React, { Component } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport TaskItem from '../Task';\nimport { DropZone, Wrapper } from './TaskList.style';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nclass InnerTaskList extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks !== this.props.tasks) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return this.props.tasks.map((task, index) => React.createElement(Draggable, {\n      key: task.id,\n      draggableId: task.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, (dragProvided, dragSnapshot) => React.createElement(TaskItem, {\n      key: task.id,\n      task: task,\n      columnId: this.props.columnId,\n      isDragging: dragSnapshot.isDragging,\n      isGroupedOver: Boolean(dragSnapshot.combineTargetFor),\n      provided: dragProvided,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst InnerList = ({\n  dropProvided,\n  tasks,\n  columnId\n}) => React.createElement(DropZone, {\n  ref: dropProvided.innerRef,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Scrollbars, {\n  style: {\n    height: 500\n  },\n  autoHide: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(InnerTaskList, {\n  tasks: tasks,\n  columnId: columnId,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), dropProvided.placeholder));\n\nconst TaskList = (_ref) => {\n  let ignoreContainerClipping = _ref.ignoreContainerClipping,\n      internalScroll = _ref.internalScroll,\n      scrollContainerStyle = _ref.scrollContainerStyle,\n      isDropDisabled = _ref.isDropDisabled,\n      isCombineEnabled = _ref.isCombineEnabled,\n      listId = _ref.listId,\n      listType = _ref.listType,\n      style = _ref.style,\n      column = _ref.column,\n      tasks = _ref.tasks,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"ignoreContainerClipping\", \"internalScroll\", \"scrollContainerStyle\", \"isDropDisabled\", \"isCombineEnabled\", \"listId\", \"listType\", \"style\", \"column\", \"tasks\", \"title\"]);\n\n  return React.createElement(Droppable, {\n    droppableId: listId,\n    type: listType,\n    ignoreContainerClipping: ignoreContainerClipping,\n    isDropDisabled: isDropDisabled,\n    isCombineEnabled: isCombineEnabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, (dropProvided, dropSnapshot) => React.createElement(Wrapper, Object.assign({\n    style: style,\n    isDraggingOver: dropSnapshot.isDraggingOver,\n    isDropDisabled: isDropDisabled\n  }, dropProvided.droppableProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), internalScroll ? React.createElement(InnerList, {\n    tasks: tasks,\n    title: title,\n    columnId: column.id,\n    dropProvided: dropProvided,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }) : React.createElement(InnerList, {\n    title: title,\n    tasks: tasks,\n    columnId: column.id,\n    dropProvided: dropProvided,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n};\n\nTaskList.defaultProps = {\n  listId: 'LIST'\n};\nexport default TaskList;","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/ScrumBoard/Task/TaskList/TaskList.js"],"names":["React","Component","Droppable","Draggable","TaskItem","DropZone","Wrapper","Scrollbars","InnerTaskList","shouldComponentUpdate","nextProps","tasks","props","render","map","task","index","id","dragProvided","dragSnapshot","columnId","isDragging","Boolean","combineTargetFor","InnerList","dropProvided","innerRef","height","placeholder","TaskList","ignoreContainerClipping","internalScroll","scrollContainerStyle","isDropDisabled","isCombineEnabled","listId","listType","style","column","title","dropSnapshot","isDraggingOver","droppableProps","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport TaskItem from '../Task';\nimport { DropZone, Wrapper } from './TaskList.style';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nclass InnerTaskList extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks !== this.props.tasks) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return this.props.tasks.map((task, index) => (\n      <Draggable key={task.id} draggableId={task.id} index={index}>\n        {(dragProvided, dragSnapshot) => (\n          <TaskItem\n            key={task.id}\n            task={task}\n            columnId={this.props.columnId}\n            isDragging={dragSnapshot.isDragging}\n            isGroupedOver={Boolean(dragSnapshot.combineTargetFor)}\n            provided={dragProvided}\n          />\n        )}\n      </Draggable>\n    ));\n  }\n}\n\nconst InnerList = ({ dropProvided, tasks, columnId }) => (\n  <DropZone ref={dropProvided.innerRef}>\n    <Scrollbars style={{ height: 500 }} autoHide>\n      <InnerTaskList tasks={tasks} columnId={columnId} />\n      {dropProvided.placeholder}\n    </Scrollbars>\n  </DropZone>\n);\n\nconst TaskList = ({\n  ignoreContainerClipping,\n  internalScroll,\n  scrollContainerStyle,\n  isDropDisabled,\n  isCombineEnabled,\n  listId,\n  listType,\n  style,\n  column,\n  tasks,\n  title,\n  ...props\n}) => {\n  return (\n    <Droppable\n      droppableId={listId}\n      type={listType}\n      ignoreContainerClipping={ignoreContainerClipping}\n      isDropDisabled={isDropDisabled}\n      isCombineEnabled={isCombineEnabled}\n    >\n      {(dropProvided, dropSnapshot) => (\n        <Wrapper\n          style={style}\n          isDraggingOver={dropSnapshot.isDraggingOver}\n          isDropDisabled={isDropDisabled}\n          {...dropProvided.droppableProps}\n        >\n          {internalScroll ? (\n            <InnerList\n              tasks={tasks}\n              title={title}\n              columnId={column.id}\n              dropProvided={dropProvided}\n            />\n          ) : (\n            <InnerList\n              title={title}\n              tasks={tasks}\n              columnId={column.id}\n              dropProvided={dropProvided}\n            />\n          )}\n        </Wrapper>\n      )}\n    </Droppable>\n  );\n};\n\nTaskList.defaultProps = {\n  listId: 'LIST',\n};\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}