{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar FileItem = require('./FileItem/index.js');\n\nvar classNames = require('classnames');\n\nvar _require = require('preact'),\n    h = _require.h;\n\nmodule.exports = function (props) {\n  var noFiles = props.totalFileCount === 0;\n  var dashboardFilesClass = classNames('uppy-Dashboard-files', {\n    'uppy-Dashboard-files--noFiles': noFiles\n  });\n  var fileProps = {\n    // FIXME This is confusing, it's actually the Dashboard's plugin ID\n    id: props.id,\n    error: props.error,\n    // TODO move this to context\n    i18n: props.i18n,\n    log: props.log,\n    info: props.info,\n    // features\n    acquirers: props.acquirers,\n    resumableUploads: props.resumableUploads,\n    individualCancellation: props.individualCancellation,\n    // visual options\n    hideRetryButton: props.hideRetryButton,\n    hidePauseResumeCancelButtons: props.hidePauseResumeCancelButtons,\n    showLinkToFileUploadResult: props.showLinkToFileUploadResult,\n    isWide: props.isWide,\n    metaFields: props.metaFields,\n    // callbacks\n    retryUpload: props.retryUpload,\n    pauseUpload: props.pauseUpload,\n    cancelUpload: props.cancelUpload,\n    toggleFileCard: props.toggleFileCard,\n    removeFile: props.removeFile\n  };\n  return h(\"ul\", {\n    class: dashboardFilesClass // making <ul> not focusable for firefox\n    ,\n    tabindex: \"-1\"\n  }, Object.keys(props.files).map(function (fileID) {\n    return h(FileItem, _extends({\n      key: fileID\n    }, fileProps, {\n      file: props.files[fileID]\n    }));\n  }));\n};","map":null,"metadata":{},"sourceType":"script"}