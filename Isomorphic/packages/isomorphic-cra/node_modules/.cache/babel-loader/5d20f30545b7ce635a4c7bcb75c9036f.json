{"ast":null,"code":"import \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Forms/Upload/Upload.js\";\nimport React from 'react';\nimport Modal from '@iso/components/Feedback/Modal';\nimport Upload from '@iso/components/uielements/upload';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nexport default function () {\n  const _React$useState = React.useState({\n    previewVisible: false,\n    previewImage: '',\n    fileList: [{\n      uid: -1,\n      name: 'xxx.png',\n      status: 'done',\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n    }]\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleCancel = () => setState({\n    previewVisible: false\n  });\n\n  const handlePreview = file => {\n    setState({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true\n    });\n  };\n\n  const handleChange = ({\n    fileList\n  }) => setState({\n    fileList\n  });\n\n  const previewVisible = state.previewVisible,\n        previewImage = state.previewImage,\n        fileList = state.fileList;\n  const uploadButton = React.createElement(\"div\", {\n    className: \"isoUploadBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(_Icon, {\n    type: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"isoUploadText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Upload\"));\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Upload\"), React.createElement(Box, {\n    title: \"Search\",\n    subtitle: \"You could pass AutoComplete.Option as children of AutoComplete, instead of using dataSource\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Upload, {\n    action: \"//jsonplaceholder.typicode.com/posts/\",\n    listType: \"picture-card\",\n    fileList: fileList,\n    onPreview: handlePreview,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, fileList.length >= 3 ? null : uploadButton), React.createElement(Modal, {\n    visible: previewVisible,\n    footer: null,\n    onCancel: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"example\",\n    style: {\n      width: '100%'\n    },\n    src: previewImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Forms/Upload/Upload.js"],"names":["React","Modal","Upload","PageHeader","Box","LayoutWrapper","ContentHolder","useState","previewVisible","previewImage","fileList","uid","name","status","url","state","setState","handleCancel","handlePreview","file","thumbUrl","handleChange","uploadButton","length","width"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AAEA,eAAe,YAAW;AAAA,0BACEN,KAAK,CAACO,QAAN,CAAe;AACvCC,IAAAA,cAAc,EAAE,KADuB;AAEvCC,IAAAA,YAAY,EAAE,EAFyB;AAGvCC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,GAAG,EAAE,CAAC,CADR;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,MAAM,EAAE,MAHV;AAIEC,MAAAA,GAAG,EACD;AALJ,KADQ;AAH6B,GAAf,CADF;AAAA;AAAA,QACjBC,KADiB;AAAA,QACVC,QADU;;AAexB,QAAMC,YAAY,GAAG,MAAMD,QAAQ,CAAC;AAAER,IAAAA,cAAc,EAAE;AAAlB,GAAD,CAAnC;;AAEA,QAAMU,aAAa,GAAGC,IAAI,IAAI;AAC5BH,IAAAA,QAAQ,CAAC;AACPP,MAAAA,YAAY,EAAEU,IAAI,CAACL,GAAL,IAAYK,IAAI,CAACC,QADxB;AAEPZ,MAAAA,cAAc,EAAE;AAFT,KAAD,CAAR;AAID,GALD;;AAOA,QAAMa,YAAY,GAAG,CAAC;AAAEX,IAAAA;AAAF,GAAD,KAAkBM,QAAQ,CAAC;AAAEN,IAAAA;AAAF,GAAD,CAA/C;;AAxBwB,QA0BhBF,cA1BgB,GA0B2BO,KA1B3B,CA0BhBP,cA1BgB;AAAA,QA0BAC,YA1BA,GA0B2BM,KA1B3B,CA0BAN,YA1BA;AAAA,QA0BcC,QA1Bd,GA0B2BK,KA1B3B,CA0BcL,QA1Bd;AA2BxB,QAAMY,YAAY,GAChB;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAMA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,QAAQ,EAAC,6FAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,uCADT;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,QAAQ,EAAEZ,QAHZ;AAIE,IAAA,SAAS,EAAEQ,aAJb;AAKE,IAAA,QAAQ,EAAEG,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGX,QAAQ,CAACa,MAAT,IAAmB,CAAnB,GAAuB,IAAvB,GAA8BD,YAPjC,CADF,EAUE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEd,cAAhB;AAAgC,IAAA,MAAM,EAAE,IAAxC;AAA8C,IAAA,QAAQ,EAAES,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,SAAT;AAAmB,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAA1B;AAA6C,IAAA,GAAG,EAAEf,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CAJF,CAHF,CADF;AAyBD","sourcesContent":["import React from 'react';\nimport { Icon } from 'antd';\nimport Modal from '@iso/components/Feedback/Modal';\nimport Upload from '@iso/components/uielements/upload';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\n\nexport default function() {\n  const [state, setState] = React.useState({\n    previewVisible: false,\n    previewImage: '',\n    fileList: [\n      {\n        uid: -1,\n        name: 'xxx.png',\n        status: 'done',\n        url:\n          'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n      },\n    ],\n  });\n\n  const handleCancel = () => setState({ previewVisible: false });\n\n  const handlePreview = file => {\n    setState({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true,\n    });\n  };\n\n  const handleChange = ({ fileList }) => setState({ fileList });\n\n  const { previewVisible, previewImage, fileList } = state;\n  const uploadButton = (\n    <div className=\"isoUploadBtn\">\n      <Icon type=\"plus\" />\n      <span className=\"isoUploadText\">Upload</span>\n    </div>\n  );\n  return (\n    <LayoutWrapper>\n      <PageHeader>Upload</PageHeader>\n\n      <Box\n        title=\"Search\"\n        subtitle=\"You could pass AutoComplete.Option as children of AutoComplete, instead of using dataSource\"\n      >\n        <ContentHolder>\n          <Upload\n            action=\"//jsonplaceholder.typicode.com/posts/\"\n            listType=\"picture-card\"\n            fileList={fileList}\n            onPreview={handlePreview}\n            onChange={handleChange}\n          >\n            {fileList.length >= 3 ? null : uploadButton}\n          </Upload>\n          <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n          </Modal>\n        </ContentHolder>\n      </Box>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}