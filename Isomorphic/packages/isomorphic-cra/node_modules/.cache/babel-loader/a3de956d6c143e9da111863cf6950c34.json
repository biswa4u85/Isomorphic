{"ast":null,"code":"import \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Contacts/Contacts.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactActions from '@iso/redux/contacts/actions';\nimport Button from '@iso/components/uielements/button';\nimport ContactList from '@iso/components/Contacts/ContactList';\nimport SingleContactView from '@iso/components/Contacts/SingleView';\nimport EditContactView from '@iso/components/Contacts/EditView';\nimport DeleteButton from '@iso/components/Contacts/DeleteButton';\nimport { otherAttributes } from './data';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport { ContactsWrapper } from './Contacts.styles';\nimport Scrollbar from '@iso/components/utility/customScrollBar';\nconst changeContact = contactActions.changeContact,\n      addContact = contactActions.addContact,\n      editContact = contactActions.editContact,\n      deleteContact = contactActions.deleteContact,\n      viewChange = contactActions.viewChange;\nconst Content = _Layout.Content;\nexport default function Contacts() {\n  const _useSelector = useSelector(state => state.Contacts),\n        contacts = _useSelector.contacts,\n        seectedId = _useSelector.seectedId,\n        editView = _useSelector.editView;\n\n  const dispatch = useDispatch();\n  const selectedContact = seectedId ? contacts.filter(contact => contact.id === seectedId)[0] : null;\n\n  const onVIewChange = () => dispatch(viewChange(!editView));\n\n  return React.createElement(ContactsWrapper, {\n    className: \"isomorphicContacts\",\n    style: {\n      background: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoContactListBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(ContactList, {\n    contacts: contacts,\n    seectedId: seectedId,\n    changeContact: id => dispatch(changeContact(id)),\n    deleteContact: e => dispatch(deleteContact(e)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(_Layout, {\n    className: \"isoContactBoxWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, selectedContact ? React.createElement(Content, {\n    className: \"isoContactBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoContactControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"default\",\n    onClick: onVIewChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, editView ? React.createElement(_Icon, {\n    type: \"check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : React.createElement(_Icon, {\n    type: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(DeleteButton, {\n    deleteContact: id => dispatch(deleteContact(id)),\n    contact: selectedContact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(addContact()),\n    className: \"isoAddContactBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"contactlist.addNewContact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(Scrollbar, {\n    className: \"contactBoxScrollbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, editView ? React.createElement(EditContactView, {\n    contact: selectedContact,\n    editContact: contact => dispatch(editContact(contact)),\n    otherAttributes: otherAttributes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }) : React.createElement(SingleContactView, {\n    contact: selectedContact,\n    otherAttributes: otherAttributes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: \"isoContactControl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(addContact()),\n    className: \"isoAddContactBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"contactlist.addNewContact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Contacts/Contacts.js"],"names":["React","useDispatch","useSelector","contactActions","Button","ContactList","SingleContactView","EditContactView","DeleteButton","otherAttributes","IntlMessages","ContactsWrapper","Scrollbar","changeContact","addContact","editContact","deleteContact","viewChange","Content","Contacts","state","contacts","seectedId","editView","dispatch","selectedContact","filter","contact","id","onVIewChange","background","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,SAAP,MAAsB,yCAAtB;MAGEC,a,GAKEV,c,CALFU,a;MACAC,U,GAIEX,c,CAJFW,U;MACAC,W,GAGEZ,c,CAHFY,W;MACAC,a,GAEEb,c,CAFFa,a;MACAC,U,GACEd,c,CADFc,U;MAGMC,O,WAAAA,O;AACR,eAAe,SAASC,QAAT,GAAoB;AAAA,uBACSjB,WAAW,CACnDkB,KAAK,IAAIA,KAAK,CAACD,QADoC,CADpB;AAAA,QACzBE,QADyB,gBACzBA,QADyB;AAAA,QACfC,SADe,gBACfA,SADe;AAAA,QACJC,QADI,gBACJA,QADI;;AAIjC,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AAEA,QAAMwB,eAAe,GAAGH,SAAS,GAC7BD,QAAQ,CAACK,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,SAA1C,EAAqD,CAArD,CAD6B,GAE7B,IAFJ;;AAGA,QAAMO,YAAY,GAAG,MAAML,QAAQ,CAACP,UAAU,CAAC,CAACM,QAAF,CAAX,CAAnC;;AACA,SACE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE;AAAd,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAET,QADZ;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,aAAa,EAAEM,EAAE,IAAIJ,QAAQ,CAACX,aAAa,CAACe,EAAD,CAAd,CAH/B;AAIE,IAAA,aAAa,EAAEG,CAAC,IAAIP,QAAQ,CAACR,aAAa,CAACe,CAAD,CAAd,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAYE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,eAAe,GACd,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEI,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QAAQ,GAAG;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA2B;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,CADF,EAIE,oBAAC,YAAD;AACE,IAAA,aAAa,EAAEK,EAAE,IAAIJ,QAAQ,CAACR,aAAa,CAACY,EAAD,CAAd,CAD/B;AAEE,IAAA,OAAO,EAAEH,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAQE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACV,UAAU,EAAX,CAFzB;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CARF,CADF,EAkBE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,QAAQ,GACP,oBAAC,eAAD;AACE,IAAA,OAAO,EAAEE,eADX;AAEE,IAAA,WAAW,EAAEE,OAAO,IAAIH,QAAQ,CAACT,WAAW,CAACY,OAAD,CAAZ,CAFlC;AAGE,IAAA,eAAe,EAAElB,eAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAOP,oBAAC,iBAAD;AACE,IAAA,OAAO,EAAEgB,eADX;AAEE,IAAA,eAAe,EAAEhB,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAlBF,CADc,GAmCd;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAE,MAAMe,QAAQ,CAACV,UAAU,EAAX,CAFzB;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CApCJ,CAZF,CADF;AA8DD","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactActions from '@iso/redux/contacts/actions';\nimport { Layout, Icon } from 'antd';\nimport Button from '@iso/components/uielements/button';\nimport ContactList from '@iso/components/Contacts/ContactList';\nimport SingleContactView from '@iso/components/Contacts/SingleView';\nimport EditContactView from '@iso/components/Contacts/EditView';\nimport DeleteButton from '@iso/components/Contacts/DeleteButton';\nimport { otherAttributes } from './data';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport { ContactsWrapper } from './Contacts.styles';\nimport Scrollbar from '@iso/components/utility/customScrollBar';\n\nconst {\n  changeContact,\n  addContact,\n  editContact,\n  deleteContact,\n  viewChange,\n} = contactActions;\n\nconst { Content } = Layout;\nexport default function Contacts() {\n  const { contacts, seectedId, editView } = useSelector(\n    state => state.Contacts\n  );\n  const dispatch = useDispatch();\n\n  const selectedContact = seectedId\n    ? contacts.filter(contact => contact.id === seectedId)[0]\n    : null;\n  const onVIewChange = () => dispatch(viewChange(!editView));\n  return (\n    <ContactsWrapper\n      className=\"isomorphicContacts\"\n      style={{ background: 'none' }}\n    >\n      <div className=\"isoContactListBar\">\n        <ContactList\n          contacts={contacts}\n          seectedId={seectedId}\n          changeContact={id => dispatch(changeContact(id))}\n          deleteContact={e => dispatch(deleteContact(e))}\n        />\n      </div>\n      <Layout className=\"isoContactBoxWrapper\">\n        {selectedContact ? (\n          <Content className=\"isoContactBox\">\n            <div className=\"isoContactControl\">\n              <Button type=\"default\" onClick={onVIewChange}>\n                {editView ? <Icon type=\"check\" /> : <Icon type=\"edit\" />}\n              </Button>\n              <DeleteButton\n                deleteContact={id => dispatch(deleteContact(id))}\n                contact={selectedContact}\n              />\n              <Button\n                type=\"primary\"\n                onClick={() => dispatch(addContact())}\n                className=\"isoAddContactBtn\"\n              >\n                <IntlMessages id=\"contactlist.addNewContact\" />\n              </Button>\n            </div>\n\n            <Scrollbar className=\"contactBoxScrollbar\">\n              {editView ? (\n                <EditContactView\n                  contact={selectedContact}\n                  editContact={contact => dispatch(editContact(contact))}\n                  otherAttributes={otherAttributes}\n                />\n              ) : (\n                <SingleContactView\n                  contact={selectedContact}\n                  otherAttributes={otherAttributes}\n                />\n              )}\n            </Scrollbar>\n          </Content>\n        ) : (\n          <div className=\"isoContactControl\">\n            <Button\n              type=\"primary\"\n              onClick={() => dispatch(addContact())}\n              className=\"isoAddContactBtn\"\n            >\n              <IntlMessages id=\"contactlist.addNewContact\" />\n            </Button>\n          </div>\n        )}\n      </Layout>\n    </ContactsWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}