{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/packages/isomorphic-cra/src/containers/Dashboard/Dashboard.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport appActions from '@iso/redux/app/actions';\nimport ThemeSwitcher from '@iso/containers/ThemeSwitcher/ThemeSwitcher';\nimport siteConfig from '@iso/config/site.config';\nimport Sidebar from '../Sidebar/Sidebar';\nimport Topbar from '../Topbar/Topbar';\nimport DashboardRoutes from './DashboardRoutes';\nimport { DashboardContainer, DashboardGlobalStyles } from './Dashboard.styles';\nconst Content = _Layout.Content,\n      Footer = _Layout.Footer;\nconst toggleAll = appActions.toggleAll;\nconst styles = {\n  layout: {\n    flexDirection: 'row',\n    overflowX: 'hidden'\n  },\n  content: {\n    padding: '70px 0 0',\n    flexShrink: '0',\n    background: '#f1f3f6',\n    position: 'relative'\n  },\n  footer: {\n    background: '#ffffff',\n    textAlign: 'center',\n    borderTop: '1px solid #ededed'\n  }\n};\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const appHeight = useSelector(state => state.App.height);\n\n  const _useWindowSize = useWindowSize(),\n        width = _useWindowSize.width,\n        height = _useWindowSize.height;\n\n  React.useEffect(() => {\n    dispatch(toggleAll(width, height));\n  }, [width, height, dispatch]);\n  return React.createElement(DashboardContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(DashboardGlobalStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(_Layout, {\n    style: {\n      height: height\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Topbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(_Layout, {\n    style: styles.layout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(_Layout, {\n    className: \"isoContentMainLayout\",\n    style: {\n      height: appHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Content, {\n    className: \"isomorphicContent\",\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(DashboardRoutes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, siteConfig.footerText))), React.createElement(ThemeSwitcher, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/packages/isomorphic-cra/src/containers/Dashboard/Dashboard.js"],"names":["React","useSelector","useDispatch","useWindowSize","appActions","ThemeSwitcher","siteConfig","Sidebar","Topbar","DashboardRoutes","DashboardContainer","DashboardGlobalStyles","Content","Footer","toggleAll","styles","layout","flexDirection","overflowX","content","padding","flexShrink","background","position","footer","textAlign","borderTop","Dashboard","dispatch","appHeight","state","App","height","width","useEffect","footerText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,oBAA1D;MAEQC,O,WAAAA,O;MAASC,M,WAAAA,M;MACTC,S,GAAcV,U,CAAdU,S;AACR,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,aAAa,EAAE,KAAjB;AAAwBC,IAAAA,SAAS,EAAE;AAAnC,GADK;AAEbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,UADF;AAEPC,IAAAA,UAAU,EAAE,GAFL;AAGPC,IAAAA,UAAU,EAAE,SAHL;AAIPC,IAAAA,QAAQ,EAAE;AAJH,GAFI;AAQbC,EAAAA,MAAM,EAAE;AACNF,IAAAA,UAAU,EAAE,SADN;AAENG,IAAAA,SAAS,EAAE,QAFL;AAGNC,IAAAA,SAAS,EAAE;AAHL;AARK,CAAf;AAeA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAMC,QAAQ,GAAG1B,WAAW,EAA5B;AACA,QAAM2B,SAAS,GAAG5B,WAAW,CAAC6B,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,MAApB,CAA7B;;AAFkC,yBAGR7B,aAAa,EAHL;AAAA,QAG1B8B,KAH0B,kBAG1BA,KAH0B;AAAA,QAGnBD,MAHmB,kBAGnBA,MAHmB;;AAKlChC,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAM;AACpBN,IAAAA,QAAQ,CAACd,SAAS,CAACmB,KAAD,EAAQD,MAAR,CAAV,CAAR;AACD,GAFD,EAEG,CAACC,KAAD,EAAQD,MAAR,EAAgBJ,QAAhB,CAFH;AAGA,SACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAEA;AAAV,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,KAAK,EAAEjB,MAAM,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,KAAK,EAAE;AACLgB,MAAAA,MAAM,EAAEH;AADH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAuC,IAAA,KAAK,EAAEd,MAAM,CAACI,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EASE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEJ,MAAM,CAACS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BlB,UAAU,CAAC6B,UAA1C,CATF,CAFF,CAFF,EAgBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAFF,CADF;AAuBD","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Layout } from 'antd';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport appActions from '@iso/redux/app/actions';\nimport ThemeSwitcher from '@iso/containers/ThemeSwitcher/ThemeSwitcher';\nimport siteConfig from '@iso/config/site.config';\nimport Sidebar from '../Sidebar/Sidebar';\nimport Topbar from '../Topbar/Topbar';\nimport DashboardRoutes from './DashboardRoutes';\n\nimport { DashboardContainer, DashboardGlobalStyles } from './Dashboard.styles';\n\nconst { Content, Footer } = Layout;\nconst { toggleAll } = appActions;\nconst styles = {\n  layout: { flexDirection: 'row', overflowX: 'hidden' },\n  content: {\n    padding: '70px 0 0',\n    flexShrink: '0',\n    background: '#f1f3f6',\n    position: 'relative',\n  },\n  footer: {\n    background: '#ffffff',\n    textAlign: 'center',\n    borderTop: '1px solid #ededed',\n  },\n};\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const appHeight = useSelector(state => state.App.height);\n  const { width, height } = useWindowSize();\n\n  React.useEffect(() => {\n    dispatch(toggleAll(width, height));\n  }, [width, height, dispatch]);\n  return (\n    <DashboardContainer>\n      <DashboardGlobalStyles />\n      <Layout style={{ height: height }}>\n        <Topbar />\n        <Layout style={styles.layout}>\n          <Sidebar />\n          <Layout\n            className=\"isoContentMainLayout\"\n            style={{\n              height: appHeight,\n            }}\n          >\n            <Content className=\"isomorphicContent\" style={styles.content}>\n              <DashboardRoutes />\n            </Content>\n            <Footer style={styles.footer}>{siteConfig.footerText}</Footer>\n          </Layout>\n        </Layout>\n        <ThemeSwitcher />\n      </Layout>\n    </DashboardContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}