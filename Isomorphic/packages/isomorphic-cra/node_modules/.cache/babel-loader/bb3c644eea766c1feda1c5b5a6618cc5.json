{"ast":null,"code":"var _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Chat/Messages.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport { MessageSingle, MessageChatWrapper } from './Messages.styles';\nimport chatActions from '@iso/redux/chat/actions';\nconst toggleViewProfile = chatActions.toggleViewProfile,\n      toggleMobileProfile = chatActions.toggleMobileProfile;\nexport default function Messages() {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(state => state.Chat),\n        user = _useSelector.user,\n        userId = _useSelector.userId,\n        selectedChatRoom = _useSelector.selectedChatRoom,\n        messages = _useSelector.messages;\n\n  const scrollToBottom = () => {\n    const messageChat = document.getElementById('messageChat');\n    messageChat.scrollTop = messageChat.scrollHeight;\n  };\n\n  React.useEffect(() => {\n    scrollToBottom();\n  });\n\n  const renderMessage = message => {\n    const isUser = userId === message.sender;\n    const messageUser = isUser ? user : selectedChatRoom.otherUserInfo;\n\n    if (isUser) {\n      return React.createElement(MessageSingle, {\n        className: \"loggedUser\",\n        key: message.messageTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"messageContent isUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"messageContentText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, message.text)), React.createElement(\"div\", {\n        className: \"messageTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, timeDifference(message.messageTime)))), React.createElement(\"div\", {\n        className: \"messageGravatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"#\",\n        src: messageUser.profileImageUrl,\n        onClick: () => {\n          dispatch(toggleMobileProfile(true));\n          dispatch(toggleViewProfile(messageUser));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(MessageSingle, {\n        key: message.messageTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"messageGravatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"#\",\n        src: messageUser.profileImageUrl,\n        onClick: () => {\n          dispatch(toggleMobileProfile(true));\n          dispatch(toggleViewProfile(messageUser));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"messageContent notUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"messageContentText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, message.text)), React.createElement(\"div\", {\n        className: \"messageTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, timeDifference(message.messageTime)))));\n    }\n  };\n\n  return React.createElement(MessageChatWrapper, {\n    id: \"messageChat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, messages.map(renderMessage));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Chat/Messages.js"],"names":["React","useDispatch","useSelector","timeDifference","MessageSingle","MessageChatWrapper","chatActions","toggleViewProfile","toggleMobileProfile","Messages","dispatch","state","Chat","user","userId","selectedChatRoom","messages","scrollToBottom","messageChat","document","getElementById","scrollTop","scrollHeight","useEffect","renderMessage","message","isUser","sender","messageUser","otherUserInfo","messageTime","text","profileImageUrl","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport { MessageSingle, MessageChatWrapper } from './Messages.styles';\nimport chatActions from '@iso/redux/chat/actions';\nconst { toggleViewProfile, toggleMobileProfile } = chatActions;\nexport default function Messages() {\n  const dispatch = useDispatch();\n  const { user, userId, selectedChatRoom, messages } = useSelector(\n    state => state.Chat\n  );\n\n  const scrollToBottom = () => {\n    const messageChat = document.getElementById('messageChat');\n    messageChat.scrollTop = messageChat.scrollHeight;\n  };\n  React.useEffect(() => {\n    scrollToBottom();\n  });\n\n  const renderMessage = message => {\n    const isUser = userId === message.sender;\n    const messageUser = isUser ? user : selectedChatRoom.otherUserInfo;\n    if (isUser) {\n      return (\n        <MessageSingle className=\"loggedUser\" key={message.messageTime}>\n          <div className=\"messageContent isUser\">\n            <div className=\"messageContentText\">\n              <p>{message.text}</p>\n            </div>\n            <div className=\"messageTime\">\n              <p>{timeDifference(message.messageTime)}</p>\n            </div>\n          </div>\n          <div className=\"messageGravatar\">\n            <img\n              alt=\"#\"\n              src={messageUser.profileImageUrl}\n              onClick={() => {\n                dispatch(toggleMobileProfile(true));\n                dispatch(toggleViewProfile(messageUser));\n              }}\n            />\n          </div>\n        </MessageSingle>\n      );\n    } else {\n      return (\n        <MessageSingle key={message.messageTime}>\n          <div className=\"messageGravatar\">\n            <img\n              alt=\"#\"\n              src={messageUser.profileImageUrl}\n              onClick={() => {\n                dispatch(toggleMobileProfile(true));\n                dispatch(toggleViewProfile(messageUser));\n              }}\n            />\n          </div>\n          <div className=\"messageContent notUser\">\n            <div className=\"messageContentText\">\n              <p>{message.text}</p>\n            </div>\n            <div className=\"messageTime\">\n              <p>{timeDifference(message.messageTime)}</p>\n            </div>\n          </div>\n        </MessageSingle>\n      );\n    }\n  };\n  return (\n    <MessageChatWrapper id=\"messageChat\">\n      {messages.map(renderMessage)}\n    </MessageChatWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}