{"ast":null,"code":"import _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Chat/InputName.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport AutoComplete, { AutoCompleteOption } from '../uielements/autocomplete';\nimport UserItem from './InputName.style';\nexport default function (props) {\n  const _React$useState = React.useState({\n    value: '',\n    result: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleSearch = value => {\n    const result = [];\n\n    if (value) {\n      props.users.forEach(user => {\n        if (user.name.toLowerCase().indexOf(value.toLowerCase()) > -1) {\n          result.push(user);\n        }\n      });\n    }\n\n    setState(_objectSpread({}, state, {\n      result,\n      value\n    }));\n  };\n\n  const onSelect = id => {\n    if (id) {\n      state.result.forEach(user => {\n        if (user.id === id) {\n          setState(_objectSpread({}, state, {\n            value: user.name\n          }));\n        }\n      });\n    }\n  };\n\n  const result = state.result,\n        value = state.value;\n  return React.createElement(AutoComplete, {\n    value: value,\n    onSelect: onSelect,\n    onSearch: handleSearch,\n    placeholder: \"find your buddy\",\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, result.map(user => React.createElement(AutoCompleteOption, {\n    key: user.id,\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(UserItem, {\n    onClick: () => {\n      setState(_objectSpread({}, state, {\n        value: user.name,\n        result: []\n      }));\n      props.setComposedId(user.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"userImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"#\",\n    src: user.profileImageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"suggetionText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, user.name)))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/components/Chat/InputName.js"],"names":["React","AutoComplete","AutoCompleteOption","UserItem","props","useState","value","result","state","setState","handleSearch","users","forEach","user","name","toLowerCase","indexOf","push","onSelect","id","marginBottom","map","display","setComposedId","profileImageUrl"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,IAAuBC,kBAAvB,QAAiD,4BAAjD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,eAAe,UAASC,KAAT,EAAgB;AAAA,0BACHJ,KAAK,CAACK,QAAN,CAAe;AACvCC,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,MAAM,EAAE;AAF+B,GAAf,CADG;AAAA;AAAA,QACtBC,KADsB;AAAA,QACfC,QADe;;AAM7B,QAAMC,YAAY,GAAGJ,KAAK,IAAI;AAC5B,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAID,KAAJ,EAAW;AACTF,MAAAA,KAAK,CAACO,KAAN,CAAYC,OAAZ,CAAoBC,IAAI,IAAI;AAC1B,YAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgCV,KAAK,CAACS,WAAN,EAAhC,IAAuD,CAAC,CAA5D,EAA+D;AAC7DR,UAAAA,MAAM,CAACU,IAAP,CAAYJ,IAAZ;AACD;AACF,OAJD;AAKD;;AACDJ,IAAAA,QAAQ,mBAAMD,KAAN;AAAaD,MAAAA,MAAb;AAAqBD,MAAAA;AAArB,OAAR;AACD,GAVD;;AAWA,QAAMY,QAAQ,GAAGC,EAAE,IAAI;AACrB,QAAIA,EAAJ,EAAQ;AACNX,MAAAA,KAAK,CAACD,MAAN,CAAaK,OAAb,CAAqBC,IAAI,IAAI;AAC3B,YAAIA,IAAI,CAACM,EAAL,KAAYA,EAAhB,EAAoB;AAClBV,UAAAA,QAAQ,mBAAMD,KAAN;AAAaF,YAAAA,KAAK,EAAEO,IAAI,CAACC;AAAzB,aAAR;AACD;AACF,OAJD;AAKD;AACF,GARD;;AAjB6B,QA0BrBP,MA1BqB,GA0BHC,KA1BG,CA0BrBD,MA1BqB;AAAA,QA0BbD,KA1Ba,GA0BHE,KA1BG,CA0BbF,KA1Ba;AA2B7B,SACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,QAAQ,EAAEY,QAFZ;AAGE,IAAA,QAAQ,EAAER,YAHZ;AAIE,IAAA,WAAW,EAAC,iBAJd;AAKE,IAAA,KAAK,EAAE;AAAEU,MAAAA,YAAY,EAAE;AAAhB,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGb,MAAM,CAACc,GAAP,CAAWR,IAAI,IACd,oBAAC,kBAAD;AAAoB,IAAA,GAAG,EAAEA,IAAI,CAACM,EAA9B;AAAkC,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbb,MAAAA,QAAQ,mBAAMD,KAAN;AAAaF,QAAAA,KAAK,EAAEO,IAAI,CAACC,IAAzB;AAA+BP,QAAAA,MAAM,EAAE;AAAvC,SAAR;AACAH,MAAAA,KAAK,CAACmB,aAAN,CAAoBV,IAAI,CAACM,EAAzB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,GAAT;AAAa,IAAA,GAAG,EAAEN,IAAI,CAACW,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAUE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCX,IAAI,CAACC,IAAtC,CAVF,CADF,CADD,CAPH,CADF;AA0BD","sourcesContent":["import React from 'react';\nimport AutoComplete, { AutoCompleteOption } from '../uielements/autocomplete';\nimport UserItem from './InputName.style';\n\nexport default function(props) {\n  const [state, setState] = React.useState({\n    value: '',\n    result: [],\n  });\n\n  const handleSearch = value => {\n    const result = [];\n    if (value) {\n      props.users.forEach(user => {\n        if (user.name.toLowerCase().indexOf(value.toLowerCase()) > -1) {\n          result.push(user);\n        }\n      });\n    }\n    setState({ ...state, result, value });\n  };\n  const onSelect = id => {\n    if (id) {\n      state.result.forEach(user => {\n        if (user.id === id) {\n          setState({ ...state, value: user.name });\n        }\n      });\n    }\n  };\n  const { result, value } = state;\n  return (\n    <AutoComplete\n      value={value}\n      onSelect={onSelect}\n      onSearch={handleSearch}\n      placeholder=\"find your buddy\"\n      style={{ marginBottom: 10 }}\n    >\n      {result.map(user => (\n        <AutoCompleteOption key={user.id} style={{ display: 'flex' }}>\n          <UserItem\n            onClick={() => {\n              setState({ ...state, value: user.name, result: [] });\n              props.setComposedId(user.id);\n            }}\n          >\n            <div className=\"userImg\">\n              <img alt=\"#\" src={user.profileImageUrl} />\n            </div>\n\n            <span className=\"suggetionText\">{user.name}</span>\n          </UserItem>\n        </AutoCompleteOption>\n      ))}\n    </AutoComplete>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}