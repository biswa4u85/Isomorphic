{"ast":null,"code":"import _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Invoice/EditInvoice.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { EditTable } from '@iso/components/Invoice/InvoiceTable';\nimport OrderStatus from '@iso/components/Invoice/OrderStatus';\nimport notification from '@iso/components/Notification';\nimport Button from '@iso/components/uielements/button';\nimport Input, { Textarea } from '@iso/components/uielements/input';\nimport DatePicker from '@iso/components/uielements/datePicker';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport InvoicePageWrapper from './SingleInvoice.styles';\nimport { stringToPosetiveInt } from '@iso/lib/helpers/utility';\nimport { orderStatusOptions } from './config';\nimport invoiceActions from '@iso/redux/invoice/actions';\nconst updateInvoice = invoiceActions.updateInvoice,\n      editInvoice = invoiceActions.editInvoice;\n\nconst updateValues = invoice => {\n  const invoiceList = invoice.invoiceList;\n  let subTotal = 0;\n  invoiceList.forEach((item, index) => {\n    const price = item.costs * item.qty;\n    invoice.invoiceList[index].price = price;\n    invoice.invoiceList[index].key = index + 1;\n    subTotal += price;\n  });\n  invoice.subTotal = subTotal;\n  invoice.vatPrice = Math.floor(invoice.vatRate * subTotal * 0.01);\n  invoice.totalCost = invoice.vatPrice + subTotal;\n  return invoice;\n};\n\nconst checkInvoice = invoice => {\n  const emptyKeys = ['number', 'billTo', 'billToAddress', 'billFrom', 'billFromAddress', 'currency'];\n  const emptyKeysErrors = ['Invoice Number', 'Bill To', 'Bill To Address', 'Bill From', 'Bill From Address', 'Currency'];\n\n  for (let i = 0; i < emptyKeys.length; i++) {\n    if (!invoice[emptyKeys[i]]) {\n      return \"Please fill in \".concat(emptyKeysErrors[i]);\n    }\n  }\n\n  for (let i = 0; i < invoice.invoiceList.length; i++) {\n    if (!invoice.invoiceList[i].itemName) {\n      return \"Please fill in item name of \".concat(i + 1, \" item\");\n    }\n\n    if (invoice.invoiceList[i].costs === 0) {\n      return \"cost of \".concat(i + 1, \" item should be positive\");\n    }\n\n    if (invoice.invoiceList[i].qty === 0) {\n      return \"quantity of \".concat(i + 1, \" item should be positive\");\n    }\n  }\n\n  return '';\n};\n\nexport default function (props) {\n  const dispatch = useDispatch();\n  const editableInvoice = props.editableInvoice,\n        isNewInvoice = props.isNewInvoice,\n        redirectPath = props.redirectPath,\n        toggleView = props.toggleView;\n\n  const onSave = () => {\n    const error = checkInvoice(editableInvoice);\n\n    if (error) {\n      notification('error', error);\n    } else {\n      const successMessage = isNewInvoice ? 'A new Invoice added' : 'Invoice Updated';\n      notification('success', successMessage);\n      dispatch(updateInvoice(editableInvoice));\n    }\n  };\n\n  function handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n    const data = _objectSpread({}, editableInvoice, {\n      [name]: value\n    });\n\n    dispatch(editInvoice(data));\n  }\n\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(InvoicePageWrapper, {\n    className: \"editView\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"PageHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, isNewInvoice ? React.createElement(Link, {\n    to: redirectPath,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Cancel\"))) : React.createElement(Button, {\n    onClick: () => toggleView(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Cancel\")), React.createElement(Button, {\n    type: \"primary\",\n    onClick: onSave,\n    className: \"saveBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(\"div\", {\n    className: \"PageContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"OrderInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"LeftSideContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Invoice Info\"), React.createElement(Input, {\n    placeholder: \"Number\",\n    name: \"number\",\n    value: editableInvoice.number,\n    onChange: handleChange,\n    className: \"LeftSideContentInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"RightSideContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"RightSideStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"RightSideStatusSpan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Order Status: \"), React.createElement(OrderStatus, {\n    value: editableInvoice.orderStatus,\n    name: \"orderStatus\",\n    onChange: handleChange,\n    orderStatusOptions: orderStatusOptions,\n    className: \"RightStatusDropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"RightSideDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Order date:\", ' ', React.createElement(DatePicker, {\n    allowClear: false,\n    value: moment(new Date(editableInvoice.orderDate)),\n    onChange: val => {\n      editableInvoice.orderDate = val.toDate().getTime();\n      dispatch(editInvoice(editableInvoice));\n    },\n    format: \"MMMM Do YYYY\",\n    animateYearScrolling: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"BillingInformation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"LeftSideContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Bill From\",\n    value: editableInvoice.billFrom,\n    name: \"billForm\",\n    onChange: handleChange,\n    className: \"BillFormTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(Textarea, {\n    placeholder: \"Bill From Address\",\n    value: editableInvoice.billFromAddress,\n    rows: 5,\n    name: \"billFromAddress\",\n    onChange: handleChange,\n    className: \"BillFormAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"RightSideContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Bill To\",\n    value: editableInvoice.billTo,\n    name: \"billTo\",\n    onChange: handleChange,\n    className: \"BillFormTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(Textarea, {\n    placeholder: \"Bill To Address\",\n    value: editableInvoice.billToAddress,\n    rows: 5,\n    name: \"billToAddress\",\n    onChange: handleChange,\n    className: \"BillFormAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"InvoiceTable editInvoiceTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(EditTable, {\n    editableInvoice: editableInvoice,\n    editInvoice: e => dispatch(editInvoice(e)),\n    updateValues: updateValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"InvoiceTableBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      editableInvoice.invoiceList.push({\n        key: editableInvoice.invoiceList.length + 1,\n        itemName: '',\n        costs: 0,\n        qty: 0,\n        price: 0\n      });\n      dispatch(editInvoice(editableInvoice));\n    },\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Add Item\")), React.createElement(\"div\", {\n    className: \"TotalBill\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"TotalBillTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"Sub-total : \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"\".concat(editableInvoice.currency).concat(editableInvoice.subTotal))), React.createElement(\"div\", {\n    className: \"vatRateCalc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"vatRateCalcSpan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \" Total Vat : \"), React.createElement(\"div\", {\n    className: \"vatRateCalcWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: editableInvoice.vatRate,\n    addonAfter: \"%\",\n    onChange: event => {\n      editableInvoice.vatRate = stringToPosetiveInt(event.target.value, editableInvoice.vatRate);\n      dispatch(editInvoice(updateValues(editableInvoice)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"\".concat(editableInvoice.currency).concat(editableInvoice.vatPrice)))), React.createElement(\"div\", {\n    className: \"currencySignWithTotal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"grandTotalSpan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Grand Total \"), React.createElement(\"div\", {\n    className: \"currencySignWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: editableInvoice.currency,\n    onChange: handleChange,\n    name: \"currency\",\n    className: \"currencySign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"currencySignSpan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, editableInvoice.totalCost))))), React.createElement(\"div\", {\n    className: \"ButtonWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Invoice/EditInvoice.js"],"names":["React","Link","useDispatch","moment","EditTable","OrderStatus","notification","Button","Input","Textarea","DatePicker","Box","LayoutWrapper","InvoicePageWrapper","stringToPosetiveInt","orderStatusOptions","invoiceActions","updateInvoice","editInvoice","updateValues","invoice","invoiceList","subTotal","forEach","item","index","price","costs","qty","key","vatPrice","Math","floor","vatRate","totalCost","checkInvoice","emptyKeys","emptyKeysErrors","i","length","itemName","props","dispatch","editableInvoice","isNewInvoice","redirectPath","toggleView","onSave","error","successMessage","handleChange","event","target","name","value","data","number","orderStatus","Date","orderDate","val","toDate","getTime","billFrom","billFromAddress","billTo","billToAddress","e","push","currency"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { EditTable } from '@iso/components/Invoice/InvoiceTable';\nimport OrderStatus from '@iso/components/Invoice/OrderStatus';\nimport notification from '@iso/components/Notification';\nimport Button from '@iso/components/uielements/button';\nimport Input, { Textarea } from '@iso/components/uielements/input';\nimport DatePicker from '@iso/components/uielements/datePicker';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport InvoicePageWrapper from './SingleInvoice.styles';\nimport { stringToPosetiveInt } from '@iso/lib/helpers/utility';\nimport { orderStatusOptions } from './config';\nimport invoiceActions from '@iso/redux/invoice/actions';\n\nconst { updateInvoice, editInvoice } = invoiceActions;\nconst updateValues = invoice => {\n  const { invoiceList } = invoice;\n  let subTotal = 0;\n  invoiceList.forEach((item, index) => {\n    const price = item.costs * item.qty;\n    invoice.invoiceList[index].price = price;\n    invoice.invoiceList[index].key = index + 1;\n    subTotal += price;\n  });\n  invoice.subTotal = subTotal;\n  invoice.vatPrice = Math.floor(invoice.vatRate * subTotal * 0.01);\n  invoice.totalCost = invoice.vatPrice + subTotal;\n  return invoice;\n};\nconst checkInvoice = invoice => {\n  const emptyKeys = [\n    'number',\n    'billTo',\n    'billToAddress',\n    'billFrom',\n    'billFromAddress',\n    'currency',\n  ];\n  const emptyKeysErrors = [\n    'Invoice Number',\n    'Bill To',\n    'Bill To Address',\n    'Bill From',\n    'Bill From Address',\n    'Currency',\n  ];\n  for (let i = 0; i < emptyKeys.length; i++) {\n    if (!invoice[emptyKeys[i]]) {\n      return `Please fill in ${emptyKeysErrors[i]}`;\n    }\n  }\n  for (let i = 0; i < invoice.invoiceList.length; i++) {\n    if (!invoice.invoiceList[i].itemName) {\n      return `Please fill in item name of ${i + 1} item`;\n    }\n    if (invoice.invoiceList[i].costs === 0) {\n      return `cost of ${i + 1} item should be positive`;\n    }\n    if (invoice.invoiceList[i].qty === 0) {\n      return `quantity of ${i + 1} item should be positive`;\n    }\n  }\n  return '';\n};\n\nexport default function(props) {\n  const dispatch = useDispatch();\n  const { editableInvoice, isNewInvoice, redirectPath, toggleView } = props;\n  const onSave = () => {\n    const error = checkInvoice(editableInvoice);\n    if (error) {\n      notification('error', error);\n    } else {\n      const successMessage = isNewInvoice\n        ? 'A new Invoice added'\n        : 'Invoice Updated';\n      notification('success', successMessage);\n      dispatch(updateInvoice(editableInvoice));\n    }\n  };\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    const data = {\n      ...editableInvoice,\n      [name]: value,\n    };\n    dispatch(editInvoice(data));\n  }\n  return (\n    <LayoutWrapper>\n      <Box>\n        <InvoicePageWrapper className=\"editView\">\n          <div className=\"PageHeader\">\n            {isNewInvoice ? (\n              <Link to={redirectPath}>\n                <Button color=\"primary\">\n                  <span>Cancel</span>\n                </Button>\n              </Link>\n            ) : (\n              <Button onClick={() => toggleView(false)}>\n                <span>Cancel</span>\n              </Button>\n            )}\n\n            <Button type=\"primary\" onClick={onSave} className=\"saveBtn\">\n              <span>Save</span>\n            </Button>\n          </div>\n          <div className=\"PageContent\">\n            <div className=\"OrderInfo\">\n              <div className=\"LeftSideContent\">\n                <h3 className=\"Title\">Invoice Info</h3>\n                <Input\n                  placeholder=\"Number\"\n                  name=\"number\"\n                  value={editableInvoice.number}\n                  onChange={handleChange}\n                  className=\"LeftSideContentInput\"\n                />\n              </div>\n              <div className=\"RightSideContent\">\n                <div className=\"RightSideStatus\">\n                  <span className=\"RightSideStatusSpan\">Order Status: </span>\n                  <OrderStatus\n                    value={editableInvoice.orderStatus}\n                    name=\"orderStatus\"\n                    onChange={handleChange}\n                    orderStatusOptions={orderStatusOptions}\n                    className=\"RightStatusDropdown\"\n                  />\n                </div>\n                <div className=\"RightSideDate\">\n                  Order date:{' '}\n                  <DatePicker\n                    allowClear={false}\n                    value={moment(new Date(editableInvoice.orderDate))}\n                    onChange={val => {\n                      editableInvoice.orderDate = val.toDate().getTime();\n                      dispatch(editInvoice(editableInvoice));\n                    }}\n                    format=\"MMMM Do YYYY\"\n                    animateYearScrolling={true}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"BillingInformation\">\n              <div className=\"LeftSideContent\">\n                <Input\n                  placeholder=\"Bill From\"\n                  value={editableInvoice.billFrom}\n                  name=\"billForm\"\n                  onChange={handleChange}\n                  className=\"BillFormTitle\"\n                />\n                <Textarea\n                  placeholder=\"Bill From Address\"\n                  value={editableInvoice.billFromAddress}\n                  rows={5}\n                  name=\"billFromAddress\"\n                  onChange={handleChange}\n                  className=\"BillFormAddress\"\n                />\n              </div>\n              <div className=\"RightSideContent\">\n                <Input\n                  placeholder=\"Bill To\"\n                  value={editableInvoice.billTo}\n                  name=\"billTo\"\n                  onChange={handleChange}\n                  className=\"BillFormTitle\"\n                />\n                <Textarea\n                  placeholder=\"Bill To Address\"\n                  value={editableInvoice.billToAddress}\n                  rows={5}\n                  name=\"billToAddress\"\n                  onChange={handleChange}\n                  className=\"BillFormAddress\"\n                />\n              </div>\n            </div>\n\n            <div className=\"InvoiceTable editInvoiceTable\">\n              <EditTable\n                editableInvoice={editableInvoice}\n                editInvoice={e => dispatch(editInvoice(e))}\n                updateValues={updateValues}\n              />\n              <div className=\"InvoiceTableBtn\">\n                <Button\n                  onClick={() => {\n                    editableInvoice.invoiceList.push({\n                      key: editableInvoice.invoiceList.length + 1,\n                      itemName: '',\n                      costs: 0,\n                      qty: 0,\n                      price: 0,\n                    });\n                    dispatch(editInvoice(editableInvoice));\n                  }}\n                  type=\"primary\"\n                >\n                  Add Item\n                </Button>\n              </div>\n              <div className=\"TotalBill\">\n                <p>\n                  <span className=\"TotalBillTitle\">Sub-total : </span>\n                  <span>{`${editableInvoice.currency}${editableInvoice.subTotal}`}</span>\n                </p>\n                <div className=\"vatRateCalc\">\n                  <span className=\"vatRateCalcSpan\"> Total Vat : </span>\n                  <div className=\"vatRateCalcWrap\">\n                    <Input\n                      value={editableInvoice.vatRate}\n                      addonAfter=\"%\"\n                      onChange={event => {\n                        editableInvoice.vatRate = stringToPosetiveInt(\n                          event.target.value,\n                          editableInvoice.vatRate\n                        );\n                        dispatch(editInvoice(updateValues(editableInvoice)));\n                      }}\n                    />\n\n                    <span>\n                      {`${editableInvoice.currency}${editableInvoice.vatPrice}`}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"currencySignWithTotal\">\n                  <span className=\"grandTotalSpan\">Grand Total </span>\n                  <div className=\"currencySignWrap\">\n                    <Input\n                      value={editableInvoice.currency}\n                      onChange={handleChange}\n                      name=\"currency\"\n                      className=\"currencySign\"\n                    />\n                    <span className=\"currencySignSpan\">\n                      {editableInvoice.totalCost}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"ButtonWrapper\" />\n          </div>\n        </InvoicePageWrapper>\n      </Box>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}