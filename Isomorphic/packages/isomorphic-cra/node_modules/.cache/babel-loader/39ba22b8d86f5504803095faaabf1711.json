{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/YoutubeSearch/YoutubeSearch.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport notification from '@iso/components/Notification';\nimport YoutubeResult from '@iso/components/YoutubeSearch/Result';\nimport basicStyle from '@iso/assets/styles/constants';\nimport actions from '@iso/redux/youtubeSearch/actions';\nimport NoAPIKey from '@iso/components/utility/noApiKey';\nimport youtubeSearchApi from '@iso/config/youtube_search.config';\nconst youtubeSearch = actions.youtubeSearch,\n      onPageChange = actions.onPageChange;\nexport default function YoutubeSearch() {\n  const YoutubeSearch = useSelector(state => state.YoutubeSearch);\n  const dispatch = useDispatch();\n  const onSearch = React.useCallback(value => {\n    if (value && value.length > 0) {\n      dispatch(youtubeSearch(value));\n    } else {\n      notification('error', 'Please type something');\n    }\n  }, [dispatch]);\n  const handlePageChange = React.useCallback((text, token) => {\n    dispatch(onPageChange(text, token));\n  }, [dispatch]);\n  React.useEffect(() => {\n    onSearch(YoutubeSearch.searcText);\n  }, [onSearch, YoutubeSearch.searcText]);\n  const rowStyle = basicStyle.rowStyle,\n        colStyle = basicStyle.colStyle,\n        gutter = basicStyle.gutter;\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"sidebar.youtubeSearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 24,\n    sm: 24,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, youtubeSearchApi ? React.createElement(Box, {\n    style: {\n      minHeight: 220\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(InputSearch, {\n    placeholder: \"Search on Youtube\",\n    defaultValue: YoutubeSearch.searcText,\n    onSearch: onSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(YoutubeResult, {\n    YoutubeSearch: YoutubeSearch,\n    onPageChange: handlePageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })) : React.createElement(NoAPIKey, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/YoutubeSearch/YoutubeSearch.js"],"names":["React","useSelector","useDispatch","PageHeader","Box","LayoutWrapper","InputSearch","IntlMessages","notification","YoutubeResult","basicStyle","actions","NoAPIKey","youtubeSearchApi","youtubeSearch","onPageChange","YoutubeSearch","state","dispatch","onSearch","useCallback","value","length","handlePageChange","text","token","useEffect","searcText","rowStyle","colStyle","gutter","minHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport notification from '@iso/components/Notification';\nimport YoutubeResult from '@iso/components/YoutubeSearch/Result';\nimport basicStyle from '@iso/assets/styles/constants';\nimport actions from '@iso/redux/youtubeSearch/actions';\nimport NoAPIKey from '@iso/components/utility/noApiKey';\nimport youtubeSearchApi from '@iso/config/youtube_search.config';\n\nconst { youtubeSearch, onPageChange } = actions;\n\nexport default function YoutubeSearch() {\n  const YoutubeSearch = useSelector(state => state.YoutubeSearch);\n  const dispatch = useDispatch();\n  const onSearch = React.useCallback(\n    value => {\n      if (value && value.length > 0) {\n        dispatch(youtubeSearch(value));\n      } else {\n        notification('error', 'Please type something');\n      }\n    },\n    [dispatch]\n  );\n  const handlePageChange = React.useCallback(\n    (text, token) => {\n      dispatch(onPageChange(text, token));\n    },\n    [dispatch]\n  );\n  React.useEffect(() => {\n    onSearch(YoutubeSearch.searcText);\n  }, [onSearch, YoutubeSearch.searcText]);\n  const { rowStyle, colStyle, gutter } = basicStyle;\n  return (\n    <LayoutWrapper>\n      <PageHeader>\n        <IntlMessages id=\"sidebar.youtubeSearch\" />\n      </PageHeader>\n\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={24} sm={24} xs={24} style={colStyle}>\n          {youtubeSearchApi ? (\n            <Box style={{ minHeight: 220 }}>\n              <InputSearch\n                placeholder=\"Search on Youtube\"\n                defaultValue={YoutubeSearch.searcText}\n                onSearch={onSearch}\n              />\n              <YoutubeResult\n                YoutubeSearch={YoutubeSearch}\n                onPageChange={handlePageChange}\n              />\n            </Box>\n          ) : (\n            <NoAPIKey />\n          )}\n        </Col>\n      </Row>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}