{"ast":null,"code":"import _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Quiz/SingleQuiz.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport actions from '@iso/redux/quiz/actions';\nimport Question from './Question';\nimport GettingStartedQuiz from './GettingStartedQuiz'; // const { getQuizData } = actions;\n\nfunction SingleQuiz(props) {\n  useEffect(() => {\n    props.getQuestionData();\n  }, []);\n  const rowStyle = basicStyle.rowStyle,\n        colStyle = basicStyle.colStyle,\n        gutter = basicStyle.gutter;\n  const _props$quiz = props.quiz,\n        questions = _props$quiz.questions,\n        activeQuestion = _props$quiz.activeQuestion,\n        total = _props$quiz.total,\n        submitted = _props$quiz.submitted,\n        answers = _props$quiz.answers,\n        correct = _props$quiz.correct,\n        wrong = _props$quiz.wrong,\n        gettingStarted = _props$quiz.gettingStarted;\n  console.log(wrong);\n  console.log(correct);\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 24,\n    sm: 24,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, questions.data ? gettingStarted ? React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: questions.data[activeQuestion].question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Question, {\n    question: questions.data[activeQuestion],\n    setQuestionAnswer: props.setQuestionAnswer,\n    nextQuestion: props.nextQuestion,\n    correct: correct,\n    wrong: wrong,\n    answers: answers,\n    total: total,\n    activeQuestion: activeQuestion,\n    submitted: submitted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))) : React.createElement(GettingStartedQuiz, {\n    gettingStarted: gettingStarted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }) : null)));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quiz: state.quiz\n  };\n}\n\nexport default connect(mapStateToProps, _objectSpread({}, actions))(SingleQuiz);","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Quiz/SingleQuiz.js"],"names":["React","useEffect","Fragment","connect","ContentHolder","Box","LayoutWrapper","IntlMessages","basicStyle","actions","Question","GettingStartedQuiz","SingleQuiz","props","getQuestionData","rowStyle","colStyle","gutter","quiz","questions","activeQuestion","total","submitted","answers","correct","wrong","gettingStarted","console","log","data","question","setQuestionAnswer","nextQuestion","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport actions from '@iso/redux/quiz/actions';\nimport Question from './Question';\nimport GettingStartedQuiz from './GettingStartedQuiz';\n\n// const { getQuizData } = actions;\n\nfunction SingleQuiz(props) {\n  useEffect(() => {\n    props.getQuestionData();\n  }, []);\n  const { rowStyle, colStyle, gutter } = basicStyle;\n  const {\n    questions,\n    activeQuestion,\n    total,\n    submitted,\n    answers,\n    correct,\n    wrong,\n    gettingStarted,\n  } = props.quiz;\n  console.log(wrong);\n  console.log(correct);\n  return (\n    <LayoutWrapper>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={24} sm={24} xs={24} style={colStyle}>\n          {questions.data ? (\n            gettingStarted ? (\n              <Box\n                title={\n                  <IntlMessages id={questions.data[activeQuestion].question} />\n                }\n              >\n                <ContentHolder>\n                  <Question\n                    question={questions.data[activeQuestion]}\n                    setQuestionAnswer={props.setQuestionAnswer}\n                    nextQuestion={props.nextQuestion}\n                    correct={correct}\n                    wrong={wrong}\n                    answers={answers}\n                    total={total}\n                    activeQuestion={activeQuestion}\n                    submitted={submitted}\n                  />\n                </ContentHolder>\n              </Box>\n            ) : (\n              <GettingStartedQuiz gettingStarted={gettingStarted} />\n            )\n          ) : null}\n        </Col>\n      </Row>\n    </LayoutWrapper>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quiz: state.quiz,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { ...actions }\n)(SingleQuiz);\n"]},"metadata":{},"sourceType":"module"}