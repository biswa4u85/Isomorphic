{"ast":null,"code":"import _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/popover/style/css\";\nimport _Popover from \"antd/es/popover\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/ScrumBoard/AppLayout/AppLayout.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport SearchInput from '@iso/components/ScrumBoard/SearchInput/SearchInput';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport modalActions from '@iso/redux/modal/actions';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\nimport { Title, Filters, Header, HeaderSecondary } from './AppLayout.style';\nconst Content = _Layout.Content;\nconst ALL_TYPES = [{\n  label: 'Private',\n  value: 'Private'\n}, {\n  label: 'Public',\n  value: 'Public'\n}];\nconst CATEGORIES = [{\n  label: 'Software',\n  value: 'Software'\n}, {\n  label: 'OPs',\n  value: 'OPs'\n}, {\n  label: 'Service Desk',\n  value: 'Service Desk'\n}, {\n  label: 'Business',\n  value: 'Business'\n}, {\n  label: 'General',\n  value: 'General'\n}];\n\nconst AppLayout = ({\n  children,\n  setSearchText,\n  history,\n  match\n}) => React.createElement(_Layout, {\n  style: {\n    backgroundColor: '#fff',\n    minHeight: '100vh'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Title, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"My Projects\"), React.createElement(_Button, {\n  type: \"primary\",\n  onClick: () => history.push(\"\".concat(match.url, \"/new\")),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"Create Project\")), React.createElement(HeaderSecondary, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(SearchInput, {\n  onChange: value => setSearchText(value),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(Filters, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(_Popover, {\n  placement: \"bottom\",\n  overlayClassName: \"\",\n  content: React.createElement(_Checkbox.Group, {\n    options: ALL_TYPES,\n    defaultValue: ['Apple'],\n    onChange: value => console.log(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }),\n  trigger: \"click\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, \"All Types \", React.createElement(_Icon, {\n  type: \"caret-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}))), React.createElement(_Popover, {\n  placement: \"bottom\",\n  content: React.createElement(_Checkbox.Group, {\n    options: CATEGORIES,\n    defaultValue: ['Apple'],\n    onChange: value => console.log(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }),\n  trigger: \"click\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, \"Categories\", React.createElement(_Icon, {\n  type: \"caret-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}))))), React.createElement(Content, {\n  style: {\n    padding: '0 24px'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, React.createElement(Scrollbars, {\n  style: {\n    width: '100%',\n    height: 'calc(100vh - 300px)'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, children)));\n\nexport default connect(null, _objectSpread({}, modalActions, {}, scrumBoardActions))(AppLayout);","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/ScrumBoard/AppLayout/AppLayout.js"],"names":["React","connect","SearchInput","Scrollbars","modalActions","scrumBoardActions","Title","Filters","Header","HeaderSecondary","Content","ALL_TYPES","label","value","CATEGORIES","AppLayout","children","setSearchText","history","match","backgroundColor","minHeight","push","url","console","log","padding","width","height"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,oDAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,eAAjC,QAAwD,mBAAxD;MAEQC,O,WAAAA,O;AAER,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CADgB,EAEhB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAFgB,CAAlB;AAKA,MAAMC,UAAU,GAAG,CACjB;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CADiB,EAEjB;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFiB,EAGjB;AAAED,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CAHiB,EAIjB;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAJiB,EAKjB;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CALiB,CAAnB;;AAQA,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,aAAZ;AAA2BC,EAAAA,OAA3B;AAAoCC,EAAAA;AAApC,CAAD,KAChB;AAAQ,EAAA,KAAK,EAAE;AAAEC,IAAAA,eAAe,EAAE,MAAnB;AAA2BC,IAAAA,SAAS,EAAE;AAAtC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGE;AAAQ,EAAA,IAAI,EAAC,SAAb;AAAuB,EAAA,OAAO,EAAE,MAAMH,OAAO,CAACI,IAAR,WAAgBH,KAAK,CAACI,GAAtB,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,EASE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,WAAD;AAAa,EAAA,QAAQ,EAAEV,KAAK,IAAII,aAAa,CAACJ,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,SAAS,EAAC,QADZ;AAEE,EAAA,gBAAgB,EAAC,EAFnB;AAGE,EAAA,OAAO,EACL,8BAAU,KAAV;AACE,IAAA,OAAO,EAAEF,SADX;AAEE,IAAA,YAAY,EAAE,CAAC,OAAD,CAFhB;AAGE,IAAA,QAAQ,EAAEE,KAAK,IAAIW,OAAO,CAACC,GAAR,CAAYZ,KAAZ,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ;AAUE,EAAA,OAAO,EAAC,OAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACY;AAAM,EAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADZ,CAZF,CADF,EAiBE;AACE,EAAA,SAAS,EAAC,QADZ;AAEE,EAAA,OAAO,EACL,8BAAU,KAAV;AACE,IAAA,OAAO,EAAEC,UADX;AAEE,IAAA,YAAY,EAAE,CAAC,OAAD,CAFhB;AAGE,IAAA,QAAQ,EAAED,KAAK,IAAIW,OAAO,CAACC,GAAR,CAAYZ,KAAZ,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ;AASE,EAAA,OAAO,EAAC,OATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AAAM,EAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAXF,CAjBF,CAHF,CATF,EAgDE,oBAAC,OAAD;AACE,EAAA,KAAK,EAAE;AACLa,IAAAA,OAAO,EAAE;AADJ,GADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKE,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGZ,QADH,CALF,CAhDF,CADF;;AA6DA,eAAef,OAAO,CACpB,IADoB,oBAEfG,YAFe,MAEEC,iBAFF,EAAP,CAGbU,SAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, Button, Popover, Icon, Checkbox } from 'antd';\nimport SearchInput from '@iso/components/ScrumBoard/SearchInput/SearchInput';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport modalActions from '@iso/redux/modal/actions';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\nimport { Title, Filters, Header, HeaderSecondary } from './AppLayout.style';\n\nconst { Content } = Layout;\n\nconst ALL_TYPES = [\n  { label: 'Private', value: 'Private' },\n  { label: 'Public', value: 'Public' },\n];\n\nconst CATEGORIES = [\n  { label: 'Software', value: 'Software' },\n  { label: 'OPs', value: 'OPs' },\n  { label: 'Service Desk', value: 'Service Desk' },\n  { label: 'Business', value: 'Business' },\n  { label: 'General', value: 'General' },\n];\n\nconst AppLayout = ({ children, setSearchText, history, match }) => (\n  <Layout style={{ backgroundColor: '#fff', minHeight: '100vh' }}>\n    <Header>\n      <Title>My Projects</Title>\n\n      <Button type=\"primary\" onClick={() => history.push(`${match.url}/new`)}>\n        Create Project\n      </Button>\n    </Header>\n\n    <HeaderSecondary>\n      <SearchInput onChange={value => setSearchText(value)} />\n\n      <Filters>\n        <Popover\n          placement=\"bottom\"\n          overlayClassName=\"\"\n          content={\n            <Checkbox.Group\n              options={ALL_TYPES}\n              defaultValue={['Apple']}\n              onChange={value => console.log(value)}\n            />\n          }\n          trigger=\"click\"\n        >\n          <span>\n            All Types <Icon type=\"caret-down\" />\n          </span>\n        </Popover>\n        <Popover\n          placement=\"bottom\"\n          content={\n            <Checkbox.Group\n              options={CATEGORIES}\n              defaultValue={['Apple']}\n              onChange={value => console.log(value)}\n            />\n          }\n          trigger=\"click\"\n        >\n          <span>\n            Categories\n            <Icon type=\"caret-down\" />\n          </span>\n        </Popover>\n      </Filters>\n    </HeaderSecondary>\n\n    <Content\n      style={{\n        padding: '0 24px',\n      }}\n    >\n      <Scrollbars style={{ width: '100%', height: 'calc(100vh - 300px)' }}>\n        {children}\n      </Scrollbars>\n    </Content>\n  </Layout>\n);\n\nexport default connect(\n  null,\n  { ...modalActions, ...scrumBoardActions }\n)(AppLayout);\n"]},"metadata":{},"sourceType":"module"}