{"ast":null,"code":"import _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Ecommerce/Algolia/Hit.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Highlight, Snippet } from 'react-instantsearch/dom';\nimport Rate from '@iso/components/uielements/rate';\nimport Button from '@iso/components/uielements/button';\nimport { GridListViewWrapper } from '@iso/components/Algolia/AlgoliaComponent.style';\nimport ecommerceActions from '@iso/redux/ecommerce/actions';\nconst addToCart = ecommerceActions.addToCart,\n      changeViewTopbarCart = ecommerceActions.changeViewTopbarCart;\nexport default function Hit({\n  hit\n}) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        addCartLoading = _React$useState2[0],\n        setAddCartLoading = _React$useState2[1];\n\n  const _useSelector = useSelector(state => state.Ecommerce),\n        view = _useSelector.view,\n        productQuantity = _useSelector.productQuantity;\n\n  const dispatch = useDispatch();\n  const className = view === 'gridView' ? 'isoAlgoliaGrid GridView' : 'isoAlgoliaGrid ListView';\n  let addedTocart = false;\n  productQuantity.forEach(product => {\n    if (product.objectID === hit.objectID) {\n      addedTocart = true;\n    }\n  });\n  return React.createElement(GridListViewWrapper, {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoAlGridImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"#\",\n    src: hit.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), !addedTocart ? React.createElement(Button, {\n    onClick: () => {\n      setAddCartLoading(true);\n\n      const update = () => {\n        dispatch(addToCart(hit));\n        setAddCartLoading(false);\n      };\n\n      setTimeout(update, 1500);\n    },\n    type: \"primary\",\n    className: \"isoAlAddToCart\",\n    loading: addCartLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ion-android-cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"Add to cart\") : React.createElement(Button, {\n    onClick: () => dispatch(changeViewTopbarCart(true)),\n    type: \"primary\",\n    className: \"isoAlAddToCart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"View Cart\")), React.createElement(\"div\", {\n    className: \"isoAlGridContents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoAlGridName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Highlight, {\n    attributeName: \"name\",\n    hit: hit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"isoAlGridPriceRating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"isoAlGridPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"$\", hit.price), React.createElement(\"div\", {\n    className: \"isoAlGridRating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Rate, {\n    disabled: true,\n    count: 6,\n    defaultValue: hit.rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"isoAlGridDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Snippet, {\n    attributeName: \"description\",\n    hit: hit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Ecommerce/Algolia/Hit.js"],"names":["React","useDispatch","useSelector","Highlight","Snippet","Rate","Button","GridListViewWrapper","ecommerceActions","addToCart","changeViewTopbarCart","Hit","hit","useState","addCartLoading","setAddCartLoading","state","Ecommerce","view","productQuantity","dispatch","className","addedTocart","forEach","product","objectID","image","update","setTimeout","price","rating"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Highlight, Snippet } from 'react-instantsearch/dom';\nimport Rate from '@iso/components/uielements/rate';\nimport Button from '@iso/components/uielements/button';\nimport { GridListViewWrapper } from '@iso/components/Algolia/AlgoliaComponent.style';\nimport ecommerceActions from '@iso/redux/ecommerce/actions';\n\nconst { addToCart, changeViewTopbarCart } = ecommerceActions;\n\nexport default function Hit({ hit }) {\n  const [addCartLoading, setAddCartLoading] = React.useState(false);\n  const { view, productQuantity } = useSelector(state => state.Ecommerce);\n  const dispatch = useDispatch();\n  const className =\n    view === 'gridView' ? 'isoAlgoliaGrid GridView' : 'isoAlgoliaGrid ListView';\n  let addedTocart = false;\n  productQuantity.forEach(product => {\n    if (product.objectID === hit.objectID) {\n      addedTocart = true;\n    }\n  });\n  return (\n    <GridListViewWrapper className={className}>\n      <div className=\"isoAlGridImage\">\n        <img alt=\"#\" src={hit.image} />\n        {!addedTocart ? (\n          <Button\n            onClick={() => {\n              setAddCartLoading(true);\n              const update = () => {\n                dispatch(addToCart(hit));\n                setAddCartLoading(false);\n              };\n              setTimeout(update, 1500);\n            }}\n            type=\"primary\"\n            className=\"isoAlAddToCart\"\n            loading={addCartLoading}\n          >\n            <i className=\"ion-android-cart\" />\n            Add to cart\n          </Button>\n        ) : (\n          <Button\n            onClick={() => dispatch(changeViewTopbarCart(true))}\n            type=\"primary\"\n            className=\"isoAlAddToCart\"\n          >\n            View Cart\n          </Button>\n        )}\n      </div>\n      <div className=\"isoAlGridContents\">\n        <div className=\"isoAlGridName\">\n          <Highlight attributeName=\"name\" hit={hit} />\n        </div>\n\n        <div className=\"isoAlGridPriceRating\">\n          <span className=\"isoAlGridPrice\">${hit.price}</span>\n\n          <div className=\"isoAlGridRating\">\n            <Rate disabled count={6} defaultValue={hit.rating} />\n          </div>\n        </div>\n\n        <div className=\"isoAlGridDescription\">\n          <Snippet attributeName=\"description\" hit={hit} />\n        </div>\n      </div>\n    </GridListViewWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}