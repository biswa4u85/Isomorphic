{"ast":null,"code":"import _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/UI/SwiperSlider/SwiperWithCustomNav.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  .ant-btn {\\n    position: absolute;\\n    top: calc(50% - 32px / 2);\\n    z-index: 1;\\n    &.prev {\\n      left: 15px;\\n    }\\n    &.next {\\n      right: 15px;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Swiper from 'react-id-swiper';\nimport Button from '../Antd/Button/Button';\nconst Wrapper = styled.div(_templateObject());\nexport default function SwiperWithCustomNav(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        swiper = _useState2[0],\n        updateSwiper = _useState2[1];\n\n  const children = props.children;\n\n  const goNext = () => {\n    if (swiper !== null) {\n      swiper.slideNext();\n    }\n  };\n\n  const goPrev = () => {\n    if (swiper !== null) {\n      swiper.slidePrev();\n    }\n  };\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Swiper, {\n    getSwiper: updateSwiper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, children), React.createElement(Button, {\n    className: \"prev\",\n    type: \"primary\",\n    onClick: goPrev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Prev\"), React.createElement(Button, {\n    className: \"next\",\n    type: \"primary\",\n    onClick: goNext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Next\"));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/UI/SwiperSlider/SwiperWithCustomNav.js"],"names":["React","useState","styled","Swiper","Button","Wrapper","div","SwiperWithCustomNav","props","swiper","updateSwiper","children","goNext","slideNext","goPrev","slidePrev"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAV,mBAAb;AAeA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA,oBAClBP,QAAQ,CAAC,IAAD,CADU;AAAA;AAAA,QAC1CQ,MAD0C;AAAA,QAClCC,YADkC;;AAAA,QAEzCC,QAFyC,GAE5BH,KAF4B,CAEzCG,QAFyC;;AAIjD,QAAMC,MAAM,GAAG,MAAM;AACnB,QAAIH,MAAM,KAAK,IAAf,EAAqB;AACnBA,MAAAA,MAAM,CAACI,SAAP;AACD;AACF,GAJD;;AAMA,QAAMC,MAAM,GAAG,MAAM;AACnB,QAAIL,MAAM,KAAK,IAAf,EAAqB;AACnBA,MAAAA,MAAM,CAACM,SAAP;AACD;AACF,GAJD;;AAMA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEL,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCC,QAAlC,CADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,IAAI,EAAC,SAA9B;AAAwC,IAAA,OAAO,EAAEG,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,IAAI,EAAC,SAA9B;AAAwC,IAAA,OAAO,EAAEF,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF;AAWD","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Swiper from 'react-id-swiper';\nimport Button from '../Antd/Button/Button';\n\nconst Wrapper = styled.div`\n  position: relative;\n  .ant-btn {\n    position: absolute;\n    top: calc(50% - 32px / 2);\n    z-index: 1;\n    &.prev {\n      left: 15px;\n    }\n    &.next {\n      right: 15px;\n    }\n  }\n`;\n\nexport default function SwiperWithCustomNav(props) {\n  const [swiper, updateSwiper] = useState(null);\n  const { children } = props;\n\n  const goNext = () => {\n    if (swiper !== null) {\n      swiper.slideNext();\n    }\n  };\n\n  const goPrev = () => {\n    if (swiper !== null) {\n      swiper.slidePrev();\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Swiper getSwiper={updateSwiper}>{children}</Swiper>\n      <Button className=\"prev\" type=\"primary\" onClick={goPrev}>\n        Prev\n      </Button>\n      <Button className=\"next\" type=\"primary\" onClick={goNext}>\n        Next\n      </Button>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}