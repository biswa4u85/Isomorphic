{"ast":null,"code":"var _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Quiz/Question.js\";\nimport React, { Component } from 'react';\nimport SingleQuestion from './SingleQuestion';\nimport MultipleQuestion from './MultipleQuestion';\nexport default class Question extends Component {\n  // The render function, where we actually tell the browser what it should show\n  render() {\n    const _this$props = this.props,\n          question = _this$props.question,\n          answers = _this$props.answers,\n          submitted = _this$props.submitted,\n          total = _this$props.total,\n          activeQuestion = _this$props.activeQuestion,\n          wrong = _this$props.wrong,\n          correct = _this$props.correct;\n\n    if (question.type === 'single') {\n      return React.createElement(SingleQuestion, {\n        question: question,\n        setQuestionAnswer: this.props.setQuestionAnswer,\n        nextQuestion: this.props.nextQuestion,\n        answers: answers,\n        correct: correct,\n        wrong: wrong,\n        total: total,\n        activeQuestion: activeQuestion,\n        submitted: submitted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(MultipleQuestion, {\n        question: question,\n        setQuestionAnswer: this.props.setQuestionAnswer,\n        nextQuestion: this.props.nextQuestion,\n        total: total,\n        correct: correct,\n        wrong: wrong,\n        activeQuestion: activeQuestion,\n        submitted: submitted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Quiz/Question.js"],"names":["React","Component","SingleQuestion","MultipleQuestion","Question","render","props","question","answers","submitted","total","activeQuestion","wrong","correct","type","setQuestionAnswer","nextQuestion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC9C;AACAI,EAAAA,MAAM,GAAG;AAAA,wBASH,KAAKC,KATF;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAGLC,OAHK,eAGLA,OAHK;AAAA,UAILC,SAJK,eAILA,SAJK;AAAA,UAKLC,KALK,eAKLA,KALK;AAAA,UAMLC,cANK,eAMLA,cANK;AAAA,UAOLC,KAPK,eAOLA,KAPK;AAAA,UAQLC,OARK,eAQLA,OARK;;AAUP,QAAIN,QAAQ,CAACO,IAAT,KAAkB,QAAtB,EAAgC;AAC9B,aACE,oBAAC,cAAD;AACE,QAAA,QAAQ,EAAEP,QADZ;AAEE,QAAA,iBAAiB,EAAE,KAAKD,KAAL,CAAWS,iBAFhC;AAGE,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWU,YAH3B;AAIE,QAAA,OAAO,EAAER,OAJX;AAKE,QAAA,OAAO,EAAEK,OALX;AAME,QAAA,KAAK,EAAED,KANT;AAOE,QAAA,KAAK,EAAEF,KAPT;AAQE,QAAA,cAAc,EAAEC,cARlB;AASE,QAAA,SAAS,EAAEF,SATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD,KAdD,MAcO;AACL,aACE,oBAAC,gBAAD;AACE,QAAA,QAAQ,EAAEF,QADZ;AAEE,QAAA,iBAAiB,EAAE,KAAKD,KAAL,CAAWS,iBAFhC;AAGE,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWU,YAH3B;AAIE,QAAA,KAAK,EAAEN,KAJT;AAKE,QAAA,OAAO,EAAEG,OALX;AAME,QAAA,KAAK,EAAED,KANT;AAOE,QAAA,cAAc,EAAED,cAPlB;AAQE,QAAA,SAAS,EAAEF,SARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD;AACF;;AAxC6C","sourcesContent":["import React, { Component } from 'react';\nimport SingleQuestion from './SingleQuestion';\nimport MultipleQuestion from './MultipleQuestion';\n\nexport default class Question extends Component {\n  // The render function, where we actually tell the browser what it should show\n  render() {\n    const {\n      question,\n      answers,\n      submitted,\n      total,\n      activeQuestion,\n      wrong,\n      correct,\n    } = this.props;\n    if (question.type === 'single') {\n      return (\n        <SingleQuestion\n          question={question}\n          setQuestionAnswer={this.props.setQuestionAnswer}\n          nextQuestion={this.props.nextQuestion}\n          answers={answers}\n          correct={correct}\n          wrong={wrong}\n          total={total}\n          activeQuestion={activeQuestion}\n          submitted={submitted}\n        />\n      );\n    } else {\n      return (\n        <MultipleQuestion\n          question={question}\n          setQuestionAnswer={this.props.setQuestionAnswer}\n          nextQuestion={this.props.nextQuestion}\n          total={total}\n          correct={correct}\n          wrong={wrong}\n          activeQuestion={activeQuestion}\n          submitted={submitted}\n        />\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}