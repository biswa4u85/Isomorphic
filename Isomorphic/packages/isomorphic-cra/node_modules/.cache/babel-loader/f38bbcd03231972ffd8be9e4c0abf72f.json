{"ast":null,"code":"import _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Invoice/Invoices.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport notification from '@iso/components/Notification';\nimport HelperText from '@iso/components/utility/helper-text';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Button from '@iso/components/uielements/button';\nimport invoiceActions from '@iso/redux/invoice/actions';\nimport CardWrapper, { Box, StatusTag } from './Invoice.styles';\nimport TableWrapper from '../Tables/AntTables/AntTables.styles';\nconst initData = invoiceActions.initData,\n      deleteInvoice = invoiceActions.deleteInvoice;\nexport default function Invoices() {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        selected = _React$useState2[0],\n        setSelected = _React$useState2[1];\n\n  const _useSelector = useSelector(state => state.Invoices),\n        initialInvoices = _useSelector.initialInvoices,\n        invoices = _useSelector.invoices;\n\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n  React.useEffect(() => {\n    if (!initialInvoices) {\n      dispatch(initData());\n    }\n  }, [dispatch, initialInvoices]);\n  const columns = [{\n    title: 'Number',\n    dataIndex: 'number',\n    rowKey: 'number',\n    width: '15%',\n    render: text => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, text)\n  }, {\n    title: 'Bill From',\n    dataIndex: 'billFrom',\n    rowKey: 'billFrom',\n    width: '25%',\n    render: text => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, text)\n  }, {\n    title: 'Bill TO',\n    dataIndex: 'billTo',\n    rowKey: 'billTo',\n    width: '22%',\n    render: text => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, text)\n  }, {\n    title: 'Total Cost',\n    dataIndex: 'totalCost',\n    rowKey: 'totalCost',\n    width: '15%',\n    render: text => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, text)\n  }, {\n    title: 'Status',\n    dataIndex: 'orderStatus',\n    rowKey: 'orderStatus',\n    width: '13%',\n    render: (text, orderStatus) => {\n      let className;\n\n      if (text === 'shipped' || text === 'Shipped' || text === 'SHIPPED') {\n        className = 'shipped';\n      } else if (text === 'delivered' || text === 'Delivered' || text === 'DELIVERED') {\n        className = 'delivered';\n      } else if (text === 'pending' || text === 'Pending' || text === 'PENDING') {\n        className = 'pending';\n      }\n\n      return React.createElement(StatusTag, {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, text);\n    }\n  }, {\n    title: '',\n    dataIndex: 'view',\n    rowKey: 'view',\n    width: '10%',\n    render: (text, invoice) => React.createElement(\"div\", {\n      className: \"isoInvoiceBtnView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(match.path, \"/\").concat(invoice.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      className: \"invoiceViewBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"View\")), ' ', React.createElement(Button, {\n      className: \"invoiceDltBtn\" // icon=\"delete\"\n      ,\n      onClick: () => {\n        notification('error', '1 invoice deleted');\n        dispatch(deleteInvoice([invoice.key]));\n        setSelected([]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ion-android-delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })))\n  }];\n\n  const getnewInvoiceId = () => new Date().getTime(); // const { match, invoices, deleteInvoice } = this.props;\n\n\n  const rowSelection = {\n    hideDefaultSelections: true,\n    selectedRowKeys: selected,\n    onChange: selected => setSelected(selected),\n    selections: [{\n      key: 'all-data',\n      text: 'Select All Invoices',\n      onSelect: () => setSelected(invoices.map(invoice => invoice.key))\n    }, {\n      key: 'no-data',\n      text: 'Unselect all',\n      onSelect: () => setSelected([])\n    }, {\n      key: 'delete-selected',\n      text: 'Delete selected',\n      onSelect: changableRowKeys => {\n        if (selected.length > 0) {\n          dispatch(deleteInvoice(selected));\n          setSelected([]);\n          notification('error', \"\".concat(selected.length, \" invoices deleted\"));\n        }\n      }\n    }],\n    onSelection: selected => setSelected(selected)\n  };\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"sidebar.invoice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoInvoiceTableBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"\".concat(match.path, \"/\").concat(getnewInvoiceId()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    className: \"mateAddInvoiceBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Add Invoice\"))), React.createElement(CardWrapper, {\n    title: \"Invoices\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, invoices.length === 0 ? React.createElement(HelperText, {\n    text: \"No Invoices\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"isoInvoiceTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Scrollbars, {\n    style: {\n      width: '100%',\n      height: 'calc(100vh - 70px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(TableWrapper, {\n    rowSelection: rowSelection,\n    dataSource: invoices,\n    columns: columns,\n    pagination: false,\n    className: \"invoiceListTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Invoice/Invoices.js"],"names":["React","useDispatch","useSelector","Link","useRouteMatch","notification","HelperText","LayoutWrapper","PageHeader","IntlMessages","Scrollbars","Button","invoiceActions","CardWrapper","Box","StatusTag","TableWrapper","initData","deleteInvoice","Invoices","useState","selected","setSelected","state","initialInvoices","invoices","dispatch","match","useEffect","columns","title","dataIndex","rowKey","width","render","text","orderStatus","className","invoice","path","id","key","getnewInvoiceId","Date","getTime","rowSelection","hideDefaultSelections","selectedRowKeys","onChange","selections","onSelect","map","changableRowKeys","length","onSelection","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport notification from '@iso/components/Notification';\nimport HelperText from '@iso/components/utility/helper-text';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Button from '@iso/components/uielements/button';\nimport invoiceActions from '@iso/redux/invoice/actions';\nimport CardWrapper, { Box, StatusTag } from './Invoice.styles';\nimport TableWrapper from '../Tables/AntTables/AntTables.styles';\nconst { initData, deleteInvoice } = invoiceActions;\nexport default function Invoices() {\n  const [selected, setSelected] = React.useState([]);\n  const { initialInvoices, invoices } = useSelector(state => state.Invoices);\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n  React.useEffect(() => {\n    if (!initialInvoices) {\n      dispatch(initData());\n    }\n  }, [dispatch, initialInvoices]);\n\n  const columns = [\n    {\n      title: 'Number',\n      dataIndex: 'number',\n      rowKey: 'number',\n      width: '15%',\n      render: text => <span>{text}</span>,\n    },\n    {\n      title: 'Bill From',\n      dataIndex: 'billFrom',\n      rowKey: 'billFrom',\n      width: '25%',\n      render: text => <span>{text}</span>,\n    },\n    {\n      title: 'Bill TO',\n      dataIndex: 'billTo',\n      rowKey: 'billTo',\n      width: '22%',\n      render: text => <span>{text}</span>,\n    },\n    {\n      title: 'Total Cost',\n      dataIndex: 'totalCost',\n      rowKey: 'totalCost',\n      width: '15%',\n      render: text => <span>{text}</span>,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'orderStatus',\n      rowKey: 'orderStatus',\n      width: '13%',\n      render: (text, orderStatus) => {\n        let className;\n        if (text === 'shipped' || text === 'Shipped' || text === 'SHIPPED') {\n          className = 'shipped';\n        } else if (\n          text === 'delivered' ||\n          text === 'Delivered' ||\n          text === 'DELIVERED'\n        ) {\n          className = 'delivered';\n        } else if (\n          text === 'pending' ||\n          text === 'Pending' ||\n          text === 'PENDING'\n        ) {\n          className = 'pending';\n        }\n        return <StatusTag className={className}>{text}</StatusTag>;\n      },\n    },\n    {\n      title: '',\n      dataIndex: 'view',\n      rowKey: 'view',\n      width: '10%',\n      render: (text, invoice) => (\n        <div className=\"isoInvoiceBtnView\">\n          <Link to={`${match.path}/${invoice.id}`}>\n            <Button color=\"primary\" className=\"invoiceViewBtn\">\n              View\n            </Button>\n          </Link>{' '}\n          <Button\n            className=\"invoiceDltBtn\"\n            // icon=\"delete\"\n            onClick={() => {\n              notification('error', '1 invoice deleted');\n              dispatch(deleteInvoice([invoice.key]));\n              setSelected([]);\n            }}\n          >\n            <i className=\"ion-android-delete\" />\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  const getnewInvoiceId = () => new Date().getTime();\n  // const { match, invoices, deleteInvoice } = this.props;\n  const rowSelection = {\n    hideDefaultSelections: true,\n    selectedRowKeys: selected,\n    onChange: selected => setSelected(selected),\n    selections: [\n      {\n        key: 'all-data',\n        text: 'Select All Invoices',\n        onSelect: () => setSelected(invoices.map(invoice => invoice.key)),\n      },\n      {\n        key: 'no-data',\n        text: 'Unselect all',\n        onSelect: () => setSelected([]),\n      },\n      {\n        key: 'delete-selected',\n        text: 'Delete selected',\n        onSelect: changableRowKeys => {\n          if (selected.length > 0) {\n            dispatch(deleteInvoice(selected));\n            setSelected([]);\n            notification('error', `${selected.length} invoices deleted`);\n          }\n        },\n      },\n    ],\n    onSelection: selected => setSelected(selected),\n  };\n  return (\n    <LayoutWrapper>\n      <PageHeader>\n        <IntlMessages id=\"sidebar.invoice\" />\n      </PageHeader>\n      <Box>\n        <div className=\"isoInvoiceTableBtn\">\n          <Link to={`${match.path}/${getnewInvoiceId()}`}>\n            <Button type=\"primary\" className=\"mateAddInvoiceBtn\">\n              Add Invoice\n            </Button>\n          </Link>\n        </div>\n\n        <CardWrapper title=\"Invoices\">\n          {invoices.length === 0 ? (\n            <HelperText text=\"No Invoices\" />\n          ) : (\n            <div className=\"isoInvoiceTable\">\n              <Scrollbars\n                style={{ width: '100%', height: 'calc(100vh - 70px)' }}\n              >\n                <TableWrapper\n                  rowSelection={rowSelection}\n                  dataSource={invoices}\n                  columns={columns}\n                  pagination={false}\n                  className=\"invoiceListTable\"\n                />\n              </Scrollbars>\n            </div>\n          )}\n        </CardWrapper>\n      </Box>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}