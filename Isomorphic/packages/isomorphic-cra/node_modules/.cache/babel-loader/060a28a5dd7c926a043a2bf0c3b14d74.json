{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Feedback/Notification/Notification.js\";\nimport React from 'react';\nimport notifications from '@iso/components/Feedback/Notification';\nimport Button from '@iso/components/uielements/button';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport NotificationContent from './Notification.styles';\n\nconst openNotification = () => {\n  const args = {\n    message: 'Notification Title',\n    description: React.createElement(NotificationContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"I will close after 2 seconds automatically. I will be close automatically. I will never close automatically.\")\n  };\n  notifications.open(args);\n};\n\nconst customDurationNotification = () => {\n  const args = {\n    message: 'Notification Title',\n    description: 'I will never close automatically. Click the close button. I will be close automatically. I will never close automatically.',\n    duration: 0\n  };\n  notifications.open(args);\n};\n\nconst openNotificationWithIcon = type => {\n  notifications[type]({\n    message: 'Notification Title',\n    description: 'This is the content of the notification. This is the content of the notification. This is the content of the notification.'\n  });\n};\n\nconst openNotificationCustomIcon = () => {\n  notifications.open({\n    message: 'Notification Title',\n    description: 'This is the content of the notification. This is the content of the notification. This is the content of the notification.',\n    icon: React.createElement(_Icon, {\n      type: \"smile-circle\",\n      style: {\n        color: '#4482FF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })\n  });\n};\n\nconst close = () => {};\n\nconst openNotificationWithConfirm = () => {\n  const key = \"open\".concat(Date.now());\n\n  const btnClick = function () {\n    notifications.close(key);\n  };\n\n  const btn = React.createElement(Button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: btnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Confirm\");\n  notifications.open({\n    message: 'Notification Title',\n    description: 'A function will be be called after the notification is closed (automatically after the \"duration\" time of manually).',\n    btn,\n    key,\n    onClose: close\n  });\n};\n\nexport default function () {\n  const rowStyle = basicStyle.rowStyle,\n        colStyle = basicStyle.colStyle,\n        gutter = basicStyle.gutter;\n  const marginStyle = {\n    marginRight: '5px'\n  };\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.notification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationBasicTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    subtitle: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationBasicSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: openNotification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.notificationBasicDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))))), React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationDurationTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }),\n    subtitle: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationDurationSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: customDurationNotification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.notificationBasicDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))))), React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationwithIconTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }),\n    subtitle: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationwithIconSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => openNotificationWithIcon('success'),\n    style: marginStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.successTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: () => openNotificationWithIcon('info'),\n    style: marginStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.infoTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: () => openNotificationWithIcon('warning'),\n    style: marginStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.warningTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: () => openNotificationWithIcon('error'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.errorTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }))))), React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationwithCustomIconTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }),\n    subtitle: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationwithCustomIconSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: openNotificationCustomIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.notificationBasicDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })))))), React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationwithCustomButtonTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }),\n    subtitle: React.createElement(IntlMessages, {\n      id: \"feedback.alert.notificationwithCustomButtonSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    onClick: openNotificationWithConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.notificationBasicDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })))))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Feedback/Notification/Notification.js"],"names":["React","notifications","Button","PageHeader","Box","LayoutWrapper","ContentHolder","IntlMessages","basicStyle","NotificationContent","openNotification","args","message","description","open","customDurationNotification","duration","openNotificationWithIcon","type","openNotificationCustomIcon","icon","color","close","openNotificationWithConfirm","key","Date","now","btnClick","btn","onClose","rowStyle","colStyle","gutter","marginStyle","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Icon } from 'antd';\nimport notifications from '@iso/components/Feedback/Notification';\nimport Button from '@iso/components/uielements/button';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport NotificationContent from './Notification.styles';\n\nconst openNotification = () => {\n  const args = {\n    message: 'Notification Title',\n    description: (\n      <NotificationContent>\n        I will close after 2 seconds automatically. I will be close\n        automatically. I will never close automatically.\n      </NotificationContent>\n    ),\n  };\n  notifications.open(args);\n};\n\nconst customDurationNotification = () => {\n  const args = {\n    message: 'Notification Title',\n    description:\n      'I will never close automatically. Click the close button. I will be close automatically. I will never close automatically.',\n    duration: 0,\n  };\n  notifications.open(args);\n};\n\nconst openNotificationWithIcon = type => {\n  notifications[type]({\n    message: 'Notification Title',\n    description:\n      'This is the content of the notification. This is the content of the notification. This is the content of the notification.',\n  });\n};\n\nconst openNotificationCustomIcon = () => {\n  notifications.open({\n    message: 'Notification Title',\n    description:\n      'This is the content of the notification. This is the content of the notification. This is the content of the notification.',\n    icon: <Icon type=\"smile-circle\" style={{ color: '#4482FF' }} />,\n  });\n};\n\nconst close = () => {};\n\nconst openNotificationWithConfirm = () => {\n  const key = `open${Date.now()}`;\n  const btnClick = function() {\n    notifications.close(key);\n  };\n  const btn = (\n    <Button type=\"primary\" size=\"small\" onClick={btnClick}>\n      Confirm\n    </Button>\n  );\n  notifications.open({\n    message: 'Notification Title',\n    description:\n      'A function will be be called after the notification is closed (automatically after the \"duration\" time of manually).',\n    btn,\n    key,\n    onClose: close,\n  });\n};\n\nexport default function() {\n  const { rowStyle, colStyle, gutter } = basicStyle;\n  const marginStyle = { marginRight: '5px' };\n\n  return (\n    <LayoutWrapper>\n      <PageHeader>\n        {<IntlMessages id=\"feedback.alert.notification\" />}\n      </PageHeader>\n\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box\n            title={<IntlMessages id=\"feedback.alert.notificationBasicTitle\" />}\n            subtitle={\n              <IntlMessages id=\"feedback.alert.notificationBasicSubTitle\" />\n            }\n          >\n            <ContentHolder>\n              <Button type=\"primary\" onClick={openNotification}>\n                {\n                  <IntlMessages id=\"feedback.alert.notificationBasicDescription\" />\n                }\n              </Button>\n            </ContentHolder>\n          </Box>\n        </Col>\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box\n            title={\n              <IntlMessages id=\"feedback.alert.notificationDurationTitle\" />\n            }\n            subtitle={\n              <IntlMessages id=\"feedback.alert.notificationDurationSubTitle\" />\n            }\n          >\n            <ContentHolder>\n              <Button type=\"primary\" onClick={customDurationNotification}>\n                {\n                  <IntlMessages id=\"feedback.alert.notificationBasicDescription\" />\n                }\n              </Button>\n            </ContentHolder>\n          </Box>\n        </Col>\n      </Row>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box\n            title={\n              <IntlMessages id=\"feedback.alert.notificationwithIconTitle\" />\n            }\n            subtitle={\n              <IntlMessages id=\"feedback.alert.notificationwithIconSubTitle\" />\n            }\n          >\n            <ContentHolder>\n              <Button\n                onClick={() => openNotificationWithIcon('success')}\n                style={marginStyle}\n              >\n                {<IntlMessages id=\"feedback.alert.successTitle\" />}\n              </Button>\n              <Button\n                onClick={() => openNotificationWithIcon('info')}\n                style={marginStyle}\n              >\n                {<IntlMessages id=\"feedback.alert.infoTitle\" />}\n              </Button>\n              <Button\n                onClick={() => openNotificationWithIcon('warning')}\n                style={marginStyle}\n              >\n                {<IntlMessages id=\"feedback.alert.warningTitle\" />}\n              </Button>\n              <Button onClick={() => openNotificationWithIcon('error')}>\n                {<IntlMessages id=\"feedback.alert.errorTitle\" />}\n              </Button>\n            </ContentHolder>\n          </Box>\n        </Col>\n\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box\n            title={\n              <IntlMessages id=\"feedback.alert.notificationwithCustomIconTitle\" />\n            }\n            subtitle={\n              <IntlMessages id=\"feedback.alert.notificationwithCustomIconSubTitle\" />\n            }\n          >\n            <ContentHolder>\n              <Button type=\"primary\" onClick={openNotificationCustomIcon}>\n                {\n                  <IntlMessages id=\"feedback.alert.notificationBasicDescription\" />\n                }\n              </Button>\n            </ContentHolder>\n          </Box>\n        </Col>\n      </Row>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box\n            title={\n              <IntlMessages id=\"feedback.alert.notificationwithCustomButtonTitle\" />\n            }\n            subtitle={\n              <IntlMessages id=\"feedback.alert.notificationwithCustomButtonSubTitle\" />\n            }\n          >\n            <ContentHolder>\n              <Button type=\"primary\" onClick={openNotificationWithConfirm}>\n                {\n                  <IntlMessages id=\"feedback.alert.notificationBasicDescription\" />\n                }\n              </Button>\n            </ContentHolder>\n          </Box>\n        </Col>\n      </Row>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}