{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Feedback/Spin/Spin.js\";\nimport React from 'react';\nimport Alert from '@iso/components/Feedback/Alert';\nimport Switch from '@iso/components/uielements/switch';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport Spin from './Spin.styles';\nexport default function () {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loading = _React$useState2[0],\n        setLoading = _React$useState2[1];\n\n  const toggle = value => {\n    setLoading(value);\n  };\n\n  const container = React.createElement(Alert, {\n    message: React.createElement(IntlMessages, {\n      id: \"feedback.alert.spin.alertTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }),\n    description: React.createElement(IntlMessages, {\n      id: \"feedback.alert.spin.alertDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }),\n    type: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n  const style = {\n    textAlign: 'center',\n    background: '#f1f3f6',\n    padding: '30px 50px'\n  };\n  const rowStyle = basicStyle.rowStyle,\n        colStyle = basicStyle.colStyle,\n        gutter = basicStyle.gutter;\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"feedback.alert.spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"feedback.alert.spin.basicTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Spin, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), \"\\xA0\\xA0\\xA0\", React.createElement(Spin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"\\xA0\\xA0\\xA0\", React.createElement(Spin, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), \"\\xA0\\xA0\\xA0\"))), React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"feedback.alert.spin.background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Spin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))))), React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(_Col, {\n    md: 12,\n    sm: 12,\n    xs: 24,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"feedback.alert.spin.backgroundDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Spin, {\n    spinning: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, container)), React.createElement(IntlMessages, {\n    id: \"feedback.alert.spin.loadingState\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    checked: loading,\n    onChange: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Feedback/Spin/Spin.js"],"names":["React","Alert","Switch","PageHeader","Box","LayoutWrapper","ContentHolder","IntlMessages","basicStyle","Spin","useState","loading","setLoading","toggle","value","container","style","textAlign","background","padding","rowStyle","colStyle","gutter","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'antd';\nimport Alert from '@iso/components/Feedback/Alert';\nimport Switch from '@iso/components/uielements/switch';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport Spin from './Spin.styles';\n\nexport default function() {\n  const [loading, setLoading] = React.useState(false);\n  const toggle = value => {\n    setLoading(value);\n  };\n  const container = (\n    <Alert\n      message={<IntlMessages id=\"feedback.alert.spin.alertTitle\" />}\n      description={<IntlMessages id=\"feedback.alert.spin.alertDescription\" />}\n      type=\"info\"\n    />\n  );\n  const style = {\n    textAlign: 'center',\n    background: '#f1f3f6',\n    padding: '30px 50px',\n  };\n\n  const { rowStyle, colStyle, gutter } = basicStyle;\n  return (\n    <LayoutWrapper>\n      <PageHeader>{<IntlMessages id=\"feedback.alert.spin\" />}</PageHeader>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box title={<IntlMessages id=\"feedback.alert.spin.basicTitle\" />}>\n            <ContentHolder>\n              <Spin size=\"small\" />\n              &nbsp;&nbsp;&nbsp;\n              <Spin />\n              &nbsp;&nbsp;&nbsp;\n              <Spin size=\"large\" />\n              &nbsp;&nbsp;&nbsp;\n            </ContentHolder>\n          </Box>\n        </Col>\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box title={<IntlMessages id=\"feedback.alert.spin.background\" />}>\n            <ContentHolder>\n              <div style={style}>\n                <Spin />\n              </div>\n            </ContentHolder>\n          </Box>\n        </Col>\n      </Row>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={12} sm={12} xs={24} style={colStyle}>\n          <Box\n            title={\n              <IntlMessages id=\"feedback.alert.spin.backgroundDescription\" />\n            }\n          >\n            <ContentHolder>\n              <div style={{ marginBottom: '20px' }}>\n                <Spin spinning={loading}>{container}</Spin>\n              </div>\n              {<IntlMessages id=\"feedback.alert.spin.loadingState\" />}\n              <Switch checked={loading} onChange={toggle} />\n            </ContentHolder>\n          </Box>\n        </Col>\n      </Row>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}