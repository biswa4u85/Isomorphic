{"ast":null,"code":"import _defineProperty from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/biswa/Sites/Others/demo/Isomorphic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Forms/Transfer/Transfer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Transfer from '@iso/components/uielements/transfer';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nexport default function () {\n  const _React$useState = React.useState({\n    mockData: [],\n    targetKeys: []\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  React.useEffect(() => {\n    getMock();\n  }, []);\n\n  const getMock = () => {\n    const targetKeys = [];\n    const mockData = [];\n\n    for (let i = 0; i < 20; i++) {\n      const data = {\n        key: i.toString(),\n        title: \"content\".concat(i + 1),\n        description: \"description of content\".concat(i + 1),\n        chosen: Math.random() * 2 > 1\n      };\n\n      if (data.chosen) {\n        targetKeys.push(data.key);\n      }\n\n      mockData.push(data);\n    }\n\n    setState({\n      mockData,\n      targetKeys\n    });\n  };\n\n  const filterOption = (inputValue, option) => {\n    return option.description.indexOf(inputValue) > -1;\n  };\n\n  const handleChange = targetKeys => {\n    setState(_objectSpread({}, state, {\n      targetKeys\n    }));\n  };\n\n  return React.createElement(LayoutWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"forms.transfer.header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Box, {\n    title: React.createElement(IntlMessages, {\n      id: \"forms.transfer.Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    subtitle: React.createElement(IntlMessages, {\n      id: \"forms.transfer.SubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ContentHolder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Transfer, {\n    dataSource: state.mockData,\n    showSearch: true,\n    filterOption: filterOption,\n    targetKeys: state.targetKeys,\n    onChange: handleChange,\n    render: item => item.title,\n    className: \"isomorphicTransfer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/biswa/Sites/Others/demo/Isomorphic/shared/containers/Forms/Transfer/Transfer.js"],"names":["React","Transfer","PageHeader","Box","LayoutWrapper","ContentHolder","IntlMessages","useState","mockData","targetKeys","state","setState","useEffect","getMock","i","data","key","toString","title","description","chosen","Math","random","push","filterOption","inputValue","option","indexOf","handleChange","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Transfer from '@iso/components/uielements/transfer';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport IntlMessages from '@iso/components/utility/intlMessages';\n\nexport default function() {\n  const [state, setState] = React.useState({\n    mockData: [],\n    targetKeys: [],\n  });\n  React.useEffect(() => {\n    getMock();\n  }, []);\n  const getMock = () => {\n    const targetKeys = [];\n    const mockData = [];\n    for (let i = 0; i < 20; i++) {\n      const data = {\n        key: i.toString(),\n        title: `content${i + 1}`,\n        description: `description of content${i + 1}`,\n        chosen: Math.random() * 2 > 1,\n      };\n      if (data.chosen) {\n        targetKeys.push(data.key);\n      }\n      mockData.push(data);\n    }\n    setState({ mockData, targetKeys });\n  };\n  const filterOption = (inputValue, option) => {\n    return option.description.indexOf(inputValue) > -1;\n  };\n  const handleChange = targetKeys => {\n    setState({ ...state, targetKeys });\n  };\n  return (\n    <LayoutWrapper>\n      <PageHeader>{<IntlMessages id=\"forms.transfer.header\" />}</PageHeader>\n\n      <Box\n        title={<IntlMessages id=\"forms.transfer.Title\" />}\n        subtitle={<IntlMessages id=\"forms.transfer.SubTitle\" />}\n      >\n        <ContentHolder>\n          <Transfer\n            dataSource={state.mockData}\n            showSearch\n            filterOption={filterOption}\n            targetKeys={state.targetKeys}\n            onChange={handleChange}\n            render={item => item.title}\n            className=\"isomorphicTransfer\"\n          />\n        </ContentHolder>\n      </Box>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}